{
  double[] splitPoints=new double[m_numInstances];
  int numSplitPoints=0;
  Instances sortedData=new Instances(m_data);
  sortedData.sort(sortedData.attribute(m_attIndex));
  double last, current;
  last=sortedData.instance(0).value(m_attIndex);
  for (int i=0; i < m_numInstances - 1; i++) {
    current=sortedData.instance(i + 1).value(m_attIndex);
    if (!Utils.eq(current,last)) {
      splitPoints[numSplitPoints++]=(last + current) / 2.0;
    }
    last=current;
  }
  double[] entropyGain=new double[numSplitPoints];
  for (int i=0; i < numSplitPoints; i++) {
    m_splitPoint=splitPoints[i];
    entropyGain[i]=entropyGain();
  }
  int bestSplit=-1;
  double bestGain=-Double.MAX_VALUE;
  for (int i=0; i < numSplitPoints; i++) {
    if (entropyGain[i] > bestGain) {
      bestGain=entropyGain[i];
      bestSplit=i;
    }
  }
  if (bestSplit < 0)   return false;
  m_splitPoint=splitPoints[bestSplit];
  return true;
}
