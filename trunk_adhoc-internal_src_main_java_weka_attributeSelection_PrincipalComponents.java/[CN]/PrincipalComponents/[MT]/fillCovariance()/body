{
  m_means=new double[m_trainInstances.numAttributes()];
  m_stdDevs=new double[m_trainInstances.numAttributes()];
  for (int i=0; i < m_trainInstances.numAttributes(); i++) {
    m_means[i]=m_trainInstances.meanOrMode(i);
  }
  if (!m_center) {
    fillCorrelation();
    return;
  }
  double[] att=new double[m_trainInstances.numInstances()];
  m_centerFilter=new Center();
  m_centerFilter.setInputFormat(m_trainInstances);
  m_trainInstances=Filter.useFilter(m_trainInstances,m_centerFilter);
  m_correlation=new double[m_numAttribs][m_numAttribs];
  for (int i=0; i < m_numAttribs; i++) {
    for (int j=0; j < m_numAttribs; j++) {
      double cov=0;
      for (int k=0; k < m_numInstances; k++) {
        if (i == j) {
          cov+=(m_trainInstances.instance(k).value(i) * m_trainInstances.instance(k).value(i));
        }
 else {
          cov+=(m_trainInstances.instance(k).value(i) * m_trainInstances.instance(k).value(j));
        }
      }
      cov/=(double)(m_trainInstances.numInstances() - 1);
      m_correlation[i][j]=cov;
      m_correlation[j][i]=cov;
    }
  }
}
