{
  double[] newVals=null;
  if (m_hasClass) {
    newVals=new double[m_numAttribs + 1];
  }
 else {
    newVals=new double[m_numAttribs];
  }
  if (m_hasClass) {
    newVals[m_numAttribs]=inst.value(inst.numAttributes() - 1);
  }
  for (int i=0; i < m_eTranspose[0].length; i++) {
    double tempval=0.0;
    for (int j=1; j < m_eTranspose.length; j++) {
      tempval+=(m_eTranspose[j][i] * inst.value(j - 1));
    }
    newVals[i]=tempval;
    if (!m_center) {
      newVals[i]*=m_stdDevs[i];
    }
    newVals[i]+=m_means[i];
  }
  if (inst instanceof SparseInstance) {
    return new SparseInstance(inst.weight(),newVals);
  }
 else {
    return new DenseInstance(inst.weight(),newVals);
  }
}
