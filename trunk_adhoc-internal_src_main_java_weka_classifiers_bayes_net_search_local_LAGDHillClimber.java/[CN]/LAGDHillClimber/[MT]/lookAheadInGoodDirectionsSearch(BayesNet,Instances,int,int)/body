{
  System.out.println("Initializing Cache");
  initCache(bayesNet,instances);
  while (nrOfLookAheadSteps > 1) {
    System.out.println("Look Ahead Depth: " + nrOfLookAheadSteps);
    boolean legalSequence=true;
    double sequenceDeltaScore=0;
    Operation[] bestOperation=new Operation[nrOfLookAheadSteps];
    bestOperation=getOptimalOperations(bayesNet,instances,nrOfLookAheadSteps,nrOfGoodOperations);
    for (int i=0; i < nrOfLookAheadSteps; i++) {
      if (bestOperation[i] == null) {
        legalSequence=false;
      }
 else {
        sequenceDeltaScore+=bestOperation[i].m_fDeltaScore;
      }
    }
    while (legalSequence && sequenceDeltaScore > 0) {
      System.out.println("Next Iteration..........................");
      for (int i=0; i < nrOfLookAheadSteps; i++) {
        performOperation(bayesNet,instances,bestOperation[i]);
      }
      bestOperation=getOptimalOperations(bayesNet,instances,nrOfLookAheadSteps,nrOfGoodOperations);
      sequenceDeltaScore=0;
      for (int i=0; i < nrOfLookAheadSteps; i++) {
        if (bestOperation[i] != null) {
          System.out.println(bestOperation[i].m_nOperation + " " + bestOperation[i].m_nHead+ " "+ bestOperation[i].m_nTail);
          sequenceDeltaScore+=bestOperation[i].m_fDeltaScore;
        }
 else {
          legalSequence=false;
        }
        System.out.println("DeltaScore: " + sequenceDeltaScore);
      }
    }
    --nrOfLookAheadSteps;
  }
  Operation oOperation=getOptimalOperation(bayesNet,instances);
  while ((oOperation != null) && (oOperation.m_fDeltaScore > 0)) {
    performOperation(bayesNet,instances,oOperation);
    System.out.println("Performing last greedy steps");
    oOperation=getOptimalOperation(bayesNet,instances);
  }
  m_Cache=null;
}
