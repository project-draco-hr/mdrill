{
  int leftmost=1000000, rightmost=-1000000;
  int leftCenter=1000000, rightCenter=-1000000, rightNode=0;
  int highest=-1000000, highTop=-1000000;
  for (int noa=0; noa < m_numNodes; noa++) {
    calcScreenCoords(noa);
    if (m_nodes[noa].m_center - m_nodes[noa].m_side < leftmost) {
      leftmost=m_nodes[noa].m_center - m_nodes[noa].m_side;
    }
    if (m_nodes[noa].m_center < leftCenter) {
      leftCenter=m_nodes[noa].m_center;
    }
    if (m_nodes[noa].m_center + m_nodes[noa].m_side > rightmost) {
      rightmost=m_nodes[noa].m_center + m_nodes[noa].m_side;
    }
    if (m_nodes[noa].m_center > rightCenter) {
      rightCenter=m_nodes[noa].m_center;
      rightNode=noa;
    }
    if (m_nodes[noa].m_top + m_nodes[noa].m_height > highest) {
      highest=m_nodes[noa].m_top + m_nodes[noa].m_height;
    }
    if (m_nodes[noa].m_top > highTop) {
      highTop=m_nodes[noa].m_top;
    }
  }
  ns.width=getWidth();
  ns.width-=leftCenter - leftmost + rightmost - rightCenter + 30;
  ns.height=getHeight() - highest + highTop - 40;
  if (m_nodes[rightNode].m_node.getCenter() != 0 && leftCenter != rightCenter) {
    ns.width/=m_nodes[rightNode].m_node.getCenter();
  }
  if (ns.width < 10) {
    ns.width=10;
  }
  if (ns.height < 10) {
    ns.height=10;
  }
  np.width=(leftCenter - leftmost + rightmost - rightCenter) / 2 + 15;
  np.height=(highest - highTop) / 2 + 20;
}
