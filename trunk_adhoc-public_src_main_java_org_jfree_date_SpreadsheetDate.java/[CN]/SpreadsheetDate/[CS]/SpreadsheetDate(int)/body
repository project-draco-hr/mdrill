{
  if ((serial >= SERIAL_LOWER_BOUND) && (serial <= SERIAL_UPPER_BOUND)) {
    this.serial=serial;
  }
 else {
    throw new IllegalArgumentException("SpreadsheetDate: Serial must be in range 2 to 2958465.");
  }
  final int days=this.serial - SERIAL_LOWER_BOUND;
  final int overestimatedYYYY=1900 + (days / 365);
  final int leaps=SerialDate.leapYearCount(overestimatedYYYY);
  final int nonleapdays=days - leaps;
  int underestimatedYYYY=1900 + (nonleapdays / 365);
  if (underestimatedYYYY == overestimatedYYYY) {
    this.year=underestimatedYYYY;
  }
 else {
    int ss1=calcSerial(1,1,underestimatedYYYY);
    while (ss1 <= this.serial) {
      underestimatedYYYY=underestimatedYYYY + 1;
      ss1=calcSerial(1,1,underestimatedYYYY);
    }
    this.year=underestimatedYYYY - 1;
  }
  final int ss2=calcSerial(1,1,this.year);
  int[] daysToEndOfPrecedingMonth=AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;
  if (isLeapYear(this.year)) {
    daysToEndOfPrecedingMonth=LEAP_YEAR_AGGREGATE_DAYS_TO_END_OF_PRECEDING_MONTH;
  }
  int mm=1;
  int sss=ss2 + daysToEndOfPrecedingMonth[mm] - 1;
  while (sss < this.serial) {
    mm=mm + 1;
    sss=ss2 + daysToEndOfPrecedingMonth[mm] - 1;
  }
  this.month=mm - 1;
  this.day=this.serial - ss2 - daysToEndOfPrecedingMonth[this.month] + 1;
}
