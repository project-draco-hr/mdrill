{
  for (  String path : m_classifiersToLoad) {
    if (Environment.containsEnvVariables(path)) {
      try {
        path=m_env.substitute(path);
      }
 catch (      Exception ex) {
      }
    }
    File toLoad=new File(path);
    if (!toLoad.isFile()) {
      throw new Exception("\"" + path + "\" does not seem to be a valid file!");
    }
    ObjectInputStream is=new ObjectInputStream(new BufferedInputStream(new FileInputStream(toLoad)));
    Object c=is.readObject();
    if (!(c instanceof Classifier)) {
      throw new Exception("\"" + path + "\" does not contain a classifier!");
    }
    Object header=null;
    header=is.readObject();
    if (header instanceof Instances) {
      if (!data.equalHeaders((Instances)header)) {
        throw new Exception("\"" + path + "\" was trained with data that is "+ "of a differnet structure than the incoming training data");
      }
    }
    if (header == null) {
      System.out.println("[Vote] warning: no header instances for \"" + path + "\"");
    }
    m_preBuiltClassifiers.add((Classifier)c);
  }
}
