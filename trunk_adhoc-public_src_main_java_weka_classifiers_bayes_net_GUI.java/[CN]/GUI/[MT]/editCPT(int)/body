{
  m_nCurrentNode=nTargetNode;
  final GraphVisualizerTableModel tm=new GraphVisualizerTableModel(nTargetNode);
  JTable jTblProbs=new JTable(tm);
  JScrollPane js=new JScrollPane(jTblProbs);
  int nParents=m_BayesNet.getNrOfParents(nTargetNode);
  if (nParents > 0) {
    GridBagConstraints gbc=new GridBagConstraints();
    JPanel jPlRowHeader=new JPanel(new GridBagLayout());
    int[] idx=new int[nParents];
    int[] lengths=new int[nParents];
    gbc.anchor=GridBagConstraints.NORTHWEST;
    gbc.fill=GridBagConstraints.HORIZONTAL;
    gbc.insets=new Insets(0,1,0,0);
    int addNum=0, temp=0;
    boolean dark=false;
    while (true) {
      gbc.gridwidth=1;
      for (int k=0; k < nParents; k++) {
        int iParent2=m_BayesNet.getParent(nTargetNode,k);
        JLabel lb=new JLabel(m_BayesNet.getValueName(iParent2,idx[k]));
        lb.setFont(new Font("Dialog",Font.PLAIN,12));
        lb.setOpaque(true);
        lb.setBorder(BorderFactory.createEmptyBorder(1,2,1,1));
        lb.setHorizontalAlignment(JLabel.CENTER);
        if (dark) {
          lb.setBackground(lb.getBackground().darker());
          lb.setForeground(Color.white);
        }
 else         lb.setForeground(Color.black);
        temp=lb.getPreferredSize().width;
        lb.setPreferredSize(new Dimension(temp,jTblProbs.getRowHeight()));
        if (lengths[k] < temp)         lengths[k]=temp;
        temp=0;
        if (k == nParents - 1) {
          gbc.gridwidth=GridBagConstraints.REMAINDER;
          dark=(dark == true) ? false : true;
        }
        jPlRowHeader.add(lb,gbc);
        addNum++;
      }
      for (int k=nParents - 1; k >= 0; k--) {
        int iParent2=m_BayesNet.getParent(m_nCurrentNode,k);
        if (idx[k] == m_BayesNet.getCardinality(iParent2) - 1 && k != 0) {
          idx[k]=0;
          continue;
        }
 else {
          idx[k]++;
          break;
        }
      }
      int iParent2=m_BayesNet.getParent(m_nCurrentNode,0);
      if (idx[0] == m_BayesNet.getCardinality(iParent2)) {
        JLabel lb=(JLabel)jPlRowHeader.getComponent(addNum - 1);
        jPlRowHeader.remove(addNum - 1);
        lb.setPreferredSize(new Dimension(lb.getPreferredSize().width,jTblProbs.getRowHeight()));
        gbc.gridwidth=GridBagConstraints.REMAINDER;
        gbc.weighty=1;
        jPlRowHeader.add(lb,gbc);
        gbc.weighty=0;
        break;
      }
    }
    gbc.gridwidth=1;
    JPanel jPlRowNames=new JPanel(new GridBagLayout());
    for (int j=0; j < nParents; j++) {
      JLabel lb2;
      JLabel lb1=new JLabel(m_BayesNet.getNodeName(m_BayesNet.getParent(nTargetNode,j)));
      lb1.setBorder(BorderFactory.createEmptyBorder(1,2,1,1));
      Dimension tempd=lb1.getPreferredSize();
      if (tempd.width < lengths[j]) {
        lb1.setPreferredSize(new Dimension(lengths[j],tempd.height));
        lb1.setHorizontalAlignment(JLabel.CENTER);
        lb1.setMinimumSize(new Dimension(lengths[j],tempd.height));
      }
 else       if (tempd.width > lengths[j]) {
        lb2=(JLabel)jPlRowHeader.getComponent(j);
        lb2.setPreferredSize(new Dimension(tempd.width,lb2.getPreferredSize().height));
      }
      jPlRowNames.add(lb1,gbc);
    }
    js.setRowHeaderView(jPlRowHeader);
    js.setCorner(JScrollPane.UPPER_LEFT_CORNER,jPlRowNames);
  }
  final JDialog dlg=new JDialog((Frame)GUI.this.getTopLevelAncestor(),"Probability Distribution Table For " + m_BayesNet.getNodeName(nTargetNode),true);
  dlg.setSize(500,400);
  dlg.setLocation(GUI.this.getLocation().x + GUI.this.getWidth() / 2 - 250,GUI.this.getLocation().y + GUI.this.getHeight() / 2 - 200);
  dlg.getContentPane().setLayout(new BorderLayout());
  dlg.getContentPane().add(js,BorderLayout.CENTER);
  JButton jBtRandomize=new JButton("Randomize");
  jBtRandomize.setMnemonic('R');
  jBtRandomize.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent ae){
      tm.randomize();
      dlg.repaint();
    }
  }
);
  JButton jBtOk=new JButton("Ok");
  jBtOk.setMnemonic('O');
  jBtOk.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent ae){
      tm.setData();
      try {
        m_BayesNet.setDistribution(m_nCurrentNode,tm.m_fProbs);
        m_jStatusBar.setText(m_BayesNet.lastActionMsg());
        updateStatus();
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      dlg.setVisible(false);
    }
  }
);
  JButton jBtCancel=new JButton("Cancel");
  jBtCancel.setMnemonic('C');
  jBtCancel.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent ae){
      dlg.setVisible(false);
    }
  }
);
  Container c=new Container();
  c.setLayout(new GridBagLayout());
  c.add(jBtRandomize);
  c.add(jBtOk);
  c.add(jBtCancel);
  dlg.getContentPane().add(c,BorderLayout.SOUTH);
  dlg.setVisible(true);
}
