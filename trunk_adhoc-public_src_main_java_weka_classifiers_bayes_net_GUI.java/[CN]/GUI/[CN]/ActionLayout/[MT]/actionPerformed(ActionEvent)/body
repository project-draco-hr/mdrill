{
  if (dlg == null) {
    dlg=new JDialog();
    dlg.setTitle("Graph Layout Options");
    final JCheckBox jCbCustomNodeSize=new JCheckBox("Custom Node Size");
    final JLabel jLbNodeWidth=new JLabel("Width");
    final JLabel jLbNodeHeight=new JLabel("Height");
    m_jTfNodeWidth.setHorizontalAlignment(JTextField.CENTER);
    m_jTfNodeWidth.setText("" + m_nNodeWidth);
    m_jTfNodeHeight.setHorizontalAlignment(JTextField.CENTER);
    m_jTfNodeHeight.setText("" + m_nNodeHeight);
    jLbNodeWidth.setEnabled(false);
    m_jTfNodeWidth.setEnabled(false);
    jLbNodeHeight.setEnabled(false);
    m_jTfNodeHeight.setEnabled(false);
    jCbCustomNodeSize.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        if (((JCheckBox)ae.getSource()).isSelected()) {
          jLbNodeWidth.setEnabled(true);
          m_jTfNodeWidth.setEnabled(true);
          jLbNodeHeight.setEnabled(true);
          m_jTfNodeHeight.setEnabled(true);
        }
 else {
          jLbNodeWidth.setEnabled(false);
          m_jTfNodeWidth.setEnabled(false);
          jLbNodeHeight.setEnabled(false);
          m_jTfNodeHeight.setEnabled(false);
          setAppropriateSize();
          setAppropriateNodeSize();
        }
      }
    }
);
    JButton jBtLayout;
    jBtLayout=new JButton("Layout Graph");
    jBtLayout.setMnemonic('L');
    jBtLayout.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        int tmpW, tmpH;
        if (jCbCustomNodeSize.isSelected()) {
          try {
            tmpW=Integer.parseInt(m_jTfNodeWidth.getText());
          }
 catch (          NumberFormatException ne) {
            JOptionPane.showMessageDialog(GUI.this.getParent(),"Invalid integer entered for node width.","Error",JOptionPane.ERROR_MESSAGE);
            tmpW=m_nNodeWidth;
            m_jTfNodeWidth.setText("" + m_nNodeWidth);
          }
          try {
            tmpH=Integer.parseInt(m_jTfNodeHeight.getText());
          }
 catch (          NumberFormatException ne) {
            JOptionPane.showMessageDialog(GUI.this.getParent(),"Invalid integer entered for node height.","Error",JOptionPane.ERROR_MESSAGE);
            tmpH=m_nNodeHeight;
            m_jTfNodeWidth.setText("" + m_nNodeHeight);
          }
          if (tmpW != m_nNodeWidth || tmpH != m_nNodeHeight) {
            m_nNodeWidth=tmpW;
            m_nPaddedNodeWidth=m_nNodeWidth + PADDING;
            m_nNodeHeight=tmpH;
          }
        }
        dlg.setVisible(false);
        updateStatus();
        layoutGraph();
        m_jStatusBar.setText("Laying out Bayes net");
      }
    }
);
    JButton jBtCancel;
    jBtCancel=new JButton("Cancel");
    jBtCancel.setMnemonic('C');
    jBtCancel.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        dlg.setVisible(false);
      }
    }
);
    GridBagConstraints gbc=new GridBagConstraints();
    dlg.setLayout(new GridBagLayout());
    Container c=new Container();
    c.setLayout(new GridBagLayout());
    gbc.gridwidth=1;
    gbc.insets=new Insets(8,0,0,0);
    gbc.anchor=GridBagConstraints.NORTHWEST;
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(jCbCustomNodeSize,gbc);
    gbc.gridwidth=GridBagConstraints.RELATIVE;
    c.add(jLbNodeWidth,gbc);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(m_jTfNodeWidth,gbc);
    gbc.gridwidth=GridBagConstraints.RELATIVE;
    c.add(jLbNodeHeight,gbc);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(m_jTfNodeHeight,gbc);
    gbc.fill=GridBagConstraints.HORIZONTAL;
    dlg.add(c,gbc);
    dlg.add(jBtLayout);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    dlg.add(jBtCancel);
  }
  dlg.setLocation(100,100);
  dlg.setVisible(true);
  dlg.setSize(dlg.getPreferredSize());
  dlg.setVisible(false);
  dlg.setVisible(true);
  dlg.repaint();
}
