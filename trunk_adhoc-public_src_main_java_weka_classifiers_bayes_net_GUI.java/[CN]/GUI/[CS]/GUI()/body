{
  m_GraphPanel=new GraphPanel();
  m_jScrollPane=new JScrollPane(m_GraphPanel);
  m_jTfZoom=new JTextField("100%");
  m_jTfZoom.setMinimumSize(m_jTfZoom.getPreferredSize());
  m_jTfZoom.setHorizontalAlignment(JTextField.CENTER);
  m_jTfZoom.setToolTipText("Zoom");
  m_jTfZoom.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent ae){
      JTextField jt=(JTextField)ae.getSource();
      try {
        int i=-1;
        i=jt.getText().indexOf('%');
        if (i == -1)         i=Integer.parseInt(jt.getText());
 else         i=Integer.parseInt(jt.getText().substring(0,i));
        if (i <= 999)         m_fScale=i / 100D;
        jt.setText((int)(m_fScale * 100) + "%");
        if (m_fScale > 0.1) {
          if (!a_zoomout.isEnabled())           a_zoomout.setEnabled(true);
        }
 else         a_zoomout.setEnabled(false);
        if (m_fScale < 9.99) {
          if (!a_zoomin.isEnabled())           a_zoomin.setEnabled(true);
        }
 else         a_zoomin.setEnabled(false);
        setAppropriateSize();
        m_GraphPanel.repaint();
        m_GraphPanel.invalidate();
        m_jScrollPane.revalidate();
      }
 catch (      NumberFormatException ne) {
        JOptionPane.showMessageDialog(GUI.this.getParent(),"Invalid integer entered for zoom.","Error",JOptionPane.ERROR_MESSAGE);
        jt.setText((m_fScale * 100) + "%");
      }
    }
  }
);
  GridBagConstraints gbc=new GridBagConstraints();
  final JPanel p=new JPanel(new GridBagLayout());
  p.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createTitledBorder("ExtraControls"),BorderFactory.createEmptyBorder(4,4,4,4)));
  p.setPreferredSize(new Dimension(0,0));
  m_jTbTools=new JToolBar();
  m_jTbTools.setFloatable(false);
  m_jTbTools.setLayout(new GridBagLayout());
  gbc.anchor=GridBagConstraints.NORTHWEST;
  gbc.gridwidth=GridBagConstraints.REMAINDER;
  gbc.insets=new Insets(0,0,0,0);
  m_jTbTools.add(p,gbc);
  gbc.gridwidth=1;
  m_jTbTools.add(a_new);
  m_jTbTools.add(a_save);
  m_jTbTools.add(a_load);
  m_jTbTools.addSeparator(new Dimension(2,2));
  m_jTbTools.add(a_cutnode);
  m_jTbTools.add(a_copynode);
  m_jTbTools.add(a_pastenode);
  m_jTbTools.addSeparator(new Dimension(2,2));
  m_jTbTools.add(a_undo);
  m_jTbTools.add(a_redo);
  m_jTbTools.addSeparator(new Dimension(2,2));
  m_jTbTools.add(a_alignleft);
  m_jTbTools.add(a_alignright);
  m_jTbTools.add(a_aligntop);
  m_jTbTools.add(a_alignbottom);
  m_jTbTools.add(a_centerhorizontal);
  m_jTbTools.add(a_centervertical);
  m_jTbTools.add(a_spacehorizontal);
  m_jTbTools.add(a_spacevertical);
  m_jTbTools.addSeparator(new Dimension(2,2));
  m_jTbTools.add(a_zoomin);
  gbc.fill=GridBagConstraints.VERTICAL;
  gbc.weighty=1;
  JPanel p2=new JPanel(new BorderLayout());
  p2.setPreferredSize(m_jTfZoom.getPreferredSize());
  p2.setMinimumSize(m_jTfZoom.getPreferredSize());
  p2.add(m_jTfZoom,BorderLayout.CENTER);
  m_jTbTools.add(p2,gbc);
  gbc.weighty=0;
  gbc.fill=GridBagConstraints.NONE;
  m_jTbTools.add(a_zoomout);
  m_jTbTools.addSeparator(new Dimension(2,2));
  m_jTbTools.add(a_layout);
  m_jTbTools.addSeparator(new Dimension(4,2));
  gbc.weightx=1;
  gbc.fill=GridBagConstraints.BOTH;
  m_jStatusBar=new JLabel("Status bar");
  this.setLayout(new BorderLayout());
  this.add(m_jTbTools,BorderLayout.NORTH);
  this.add(m_jScrollPane,BorderLayout.CENTER);
  this.add(m_jStatusBar,BorderLayout.SOUTH);
  updateStatus();
  a_datagenerator.setEnabled(false);
  makeMenuBar();
}
