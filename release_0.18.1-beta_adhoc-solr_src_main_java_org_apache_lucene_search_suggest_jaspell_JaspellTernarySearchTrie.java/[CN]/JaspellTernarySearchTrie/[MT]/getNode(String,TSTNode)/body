{
  String key=key2.trim().toLowerCase();
  if (key == null || startNode == null || key.length() == 0) {
    return null;
  }
  TSTNode currentNode=startNode;
  int charIndex=0;
  while (true) {
    if (currentNode == null) {
      return null;
    }
    int charComp=compareCharsAlphabetically(key.charAt(charIndex),currentNode.splitchar);
    if (charComp == 0) {
      charIndex++;
      if (charIndex == key.length()) {
        return currentNode;
      }
      currentNode=currentNode.relatives[TSTNode.EQKID];
    }
 else     if (charComp < 0) {
      currentNode=currentNode.relatives[TSTNode.LOKID];
    }
 else {
      currentNode=currentNode.relatives[TSTNode.HIKID];
    }
  }
}
