{
  this.isdesc=_isdesc;
  this.typenum=UniqTypeNum.parseType(type,fl,groupby,joinInvert);
  this.cmpobj=new CompareIndex();
  LOG.info("####" + this.typenum.toString());
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.joincolumn)) {
    this.fl_num=this.typenum.sortFieldNum;
    this.cmpobj=new CompareColumn();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.index)) {
    this.fl_num=0;
    this.cmpobj=new CompareIndex();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.countall)) {
    this.fl_num=0;
    this.cmpobj=new CompareCountall();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.count)) {
    this.fl_num=UniqTypeNum.foundIndex(crossFs,fl);
    this.cmpobj=new CompareCount();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.dist)) {
    this.fl_num=UniqTypeNum.foundIndex(distFS,fl);
    this.cmpobj=new CompareDist();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.sum)) {
    this.fl_num=UniqTypeNum.foundIndex(crossFs,fl);
    this.cmpobj=new CompareSum();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.max)) {
    this.fl_num=UniqTypeNum.foundIndex(crossFs,fl);
    this.cmpobj=new CompareMax();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.min)) {
    this.fl_num=UniqTypeNum.foundIndex(crossFs,fl);
    this.cmpobj=new CompareMin();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.avg)) {
    this.fl_num=UniqTypeNum.foundIndex(crossFs,fl);
    this.cmpobj=new CompareAvg();
    return;
  }
  if (this.typenum.typeEnum.equals(UniqTypeNum.SortTypeEnum.column)) {
    this.fl_num=UniqTypeNum.foundIndex(groupby,fl);
    if (columntype.equals("string")) {
      this.cmpobj=new CompareColumn();
    }
 else {
      this.cmpobj=new CompareColumnNum();
    }
    return;
  }
}
