{
  StringBuffer text=new StringBuffer();
  if (m_splitAtts.length > 0) {
    text.append("IF\n");
    for (int i=m_splitAtts.length - 1; i >= 0; i--) {
      text.append("\t" + m_covered.attribute(m_splitAtts[i]).name() + " ");
      if (m_relOps[i] == 0) {
        text.append("<= ");
      }
 else {
        text.append("> ");
      }
      text.append(Utils.doubleToString(m_splitVals[i],1,3) + "\n");
    }
    text.append("THEN\n");
  }
  if (m_ruleModel != null) {
    try {
      text.append(m_ruleModel.printNodeLinearModel());
      text.append(" [" + m_numCovered);
      if (m_globalAbsDev > 0.0) {
        text.append("/" + Utils.doubleToString((100 * m_ruleModel.rootMeanSquaredError() / m_globalStdDev),1,3) + "%]\n\n");
      }
 else {
        text.append("]\n\n");
      }
    }
 catch (    Exception e) {
      return "Can't print rule";
    }
  }
  return text.toString();
}
