{
  double result, found;
  int[] counts;
  if (attribute(attIndex).isNumeric()) {
    result=found=0;
    for (int j=0; j < numInstances(); j++) {
      if (!instance(j).isMissing(attIndex)) {
        found+=instance(j).weight();
        result+=instance(j).weight() * instance(j).value(attIndex);
      }
    }
    if (found <= 0) {
      return 0;
    }
 else {
      return result / found;
    }
  }
 else   if (attribute(attIndex).isNominal()) {
    counts=new int[attribute(attIndex).numValues()];
    for (int j=0; j < numInstances(); j++) {
      if (!instance(j).isMissing(attIndex)) {
        counts[(int)instance(j).value(attIndex)]+=instance(j).weight();
      }
    }
    return (double)Utils.maxIndex(counts);
  }
 else {
    return 0;
  }
}
