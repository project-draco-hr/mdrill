{
  try {
    Instances i;
    if (args.length == 0) {
      DataSource source=new DataSource(System.in);
      i=source.getDataSet();
      System.out.println(i.toSummaryString());
    }
 else     if ((args.length == 1) && (!args[0].equals("-h")) && (!args[0].equals("help"))) {
      DataSource source=new DataSource(args[0]);
      i=source.getDataSet();
      System.out.println(i.toSummaryString());
    }
 else     if ((args.length == 3) && (args[0].toLowerCase().equals("merge"))) {
      DataSource source1=new DataSource(args[1]);
      DataSource source2=new DataSource(args[2]);
      i=Instances.mergeInstances(source1.getDataSet(),source2.getDataSet());
      System.out.println(i);
    }
 else     if ((args.length == 3) && (args[0].toLowerCase().equals("append"))) {
      DataSource source1=new DataSource(args[1]);
      DataSource source2=new DataSource(args[2]);
      String msg=source1.getStructure().equalHeadersMsg(source2.getStructure());
      if (msg != null)       throw new Exception("The two datasets have different headers:\n" + msg);
      Instances structure=source1.getStructure();
      System.out.println(source1.getStructure());
      while (source1.hasMoreElements(structure))       System.out.println(source1.nextElement(structure));
      structure=source2.getStructure();
      while (source2.hasMoreElements(structure))       System.out.println(source2.nextElement(structure));
    }
 else     if ((args.length == 3) && (args[0].toLowerCase().equals("headers"))) {
      DataSource source1=new DataSource(args[1]);
      DataSource source2=new DataSource(args[2]);
      String msg=source1.getStructure().equalHeadersMsg(source2.getStructure());
      if (msg == null)       System.out.println("Headers match");
 else       System.out.println("Headers don't match:\n" + msg);
    }
 else     if ((args.length == 3) && (args[0].toLowerCase().equals("randomize"))) {
      DataSource source=new DataSource(args[2]);
      i=source.getDataSet();
      i.randomize(new Random(Integer.parseInt(args[1])));
      System.out.println(i);
    }
 else {
      System.err.println("\nUsage:\n" + "\tweka.core.Instances help\n" + "\t\tPrints this help\n"+ "\tweka.core.Instances <filename>\n"+ "\t\tOutputs dataset statistics\n"+ "\tweka.core.Instances merge <filename1> <filename2>\n"+ "\t\tMerges the datasets (must have same number of rows).\n"+ "\t\tGenerated dataset gets output on stdout.\n"+ "\tweka.core.Instances append <filename1> <filename2>\n"+ "\t\tAppends the second dataset to the first (must have same number of attributes).\n"+ "\t\tGenerated dataset gets output on stdout.\n"+ "\tweka.core.Instances headers <filename1> <filename2>\n"+ "\t\tCompares the structure of the two datasets and outputs whether they\n"+ "\t\tdiffer or not.\n"+ "\tweka.core.Instances randomize <seed> <filename>\n"+ "\t\tRandomizes the dataset and outputs it on stdout.\n");
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.err.println(ex.getMessage());
  }
}
