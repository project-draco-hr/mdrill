{
  int v_1;
  int v_2;
  int v_3;
  int v_4;
  int v_5;
  int v_6;
  int v_7;
  int v_8;
  int v_9;
  int v_10;
  int v_11;
  v_1=cursor;
  lab0:   do {
    if (!r_prelude()) {
      break lab0;
    }
  }
 while (false);
  cursor=v_1;
  v_2=cursor;
  lab1:   do {
    if (!r_mark_regions()) {
      break lab1;
    }
  }
 while (false);
  cursor=v_2;
  limit_backward=cursor;
  cursor=limit;
  v_3=limit - cursor;
  lab2:   do {
    lab3:     do {
      v_4=limit - cursor;
      lab4:       do {
        v_5=limit - cursor;
        lab5:         do {
          v_6=limit - cursor;
          lab6:           do {
            if (!r_standard_suffix()) {
              break lab6;
            }
            break lab5;
          }
 while (false);
          cursor=limit - v_6;
          lab7:           do {
            if (!r_i_verb_suffix()) {
              break lab7;
            }
            break lab5;
          }
 while (false);
          cursor=limit - v_6;
          if (!r_verb_suffix()) {
            break lab4;
          }
        }
 while (false);
        cursor=limit - v_5;
        v_7=limit - cursor;
        lab8:         do {
          ket=cursor;
          lab9:           do {
            v_8=limit - cursor;
            lab10:             do {
              if (!(eq_s_b(1,"Y"))) {
                break lab10;
              }
              bra=cursor;
              slice_from("i");
              break lab9;
            }
 while (false);
            cursor=limit - v_8;
            if (!(eq_s_b(1,"\u00E7"))) {
              cursor=limit - v_7;
              break lab8;
            }
            bra=cursor;
            slice_from("c");
          }
 while (false);
        }
 while (false);
        break lab3;
      }
 while (false);
      cursor=limit - v_4;
      if (!r_residual_suffix()) {
        break lab2;
      }
    }
 while (false);
  }
 while (false);
  cursor=limit - v_3;
  v_9=limit - cursor;
  lab11:   do {
    if (!r_un_double()) {
      break lab11;
    }
  }
 while (false);
  cursor=limit - v_9;
  v_10=limit - cursor;
  lab12:   do {
    if (!r_un_accent()) {
      break lab12;
    }
  }
 while (false);
  cursor=limit - v_10;
  cursor=limit_backward;
  v_11=cursor;
  lab13:   do {
    if (!r_postlude()) {
      break lab13;
    }
  }
 while (false);
  cursor=v_11;
  return true;
}
