{
  double y=0., yl=0., yr=0.;
switch (type) {
case 1:
    nl+=1;
  nr-=1;
sl+=value;
sr-=value;
s2l+=value * value;
s2r-=value * value;
break;
case -1:
nl-=1;
nr+=1;
sl-=value;
sr+=value;
s2l-=value * value;
s2r+=value * value;
break;
case 0:
break;
default :
System.err.println("wrong type in Impurity.incremental().");
}
if (nl <= 0.0) {
vl=0.0;
sdl=0.0;
}
 else {
vl=(nl * s2l - sl * sl) / ((double)nl * ((double)nl));
vl=Math.abs(vl);
sdl=Math.sqrt(vl);
}
if (nr <= 0.0) {
vr=0.0;
sdr=0.0;
}
 else {
vr=(nr * s2r - sr * sr) / ((double)nr * ((double)nr));
vr=Math.abs(vr);
sdr=Math.sqrt(vr);
}
if (order <= 0) System.err.println("Impurity order less than zero in Impurity.incremental()");
 else if (order == 1) {
y=va;
yl=vl;
yr=vr;
}
 else {
y=Math.pow(va,1. / order);
yl=Math.pow(vl,1. / order);
yr=Math.pow(vr,1. / order);
}
if (nl <= 0.0 || nr <= 0.0) impurity=0.0;
 else {
impurity=y - ((double)nl / (double)n) * yl - ((double)nr / (double)n) * yr;
}
}
