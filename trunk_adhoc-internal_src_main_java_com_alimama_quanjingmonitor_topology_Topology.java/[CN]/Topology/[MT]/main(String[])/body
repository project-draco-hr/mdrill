{
  Map stormconf=Utils.readStormConfig();
  Config conf=new Config();
  conf.putAll(stormconf);
  conf.put("topology.worker.childopts","-Xms4g -Xmx4g -Xmn2g -XX:SurvivorRatio=3 -XX:PermSize=96m -XX:MaxPermSize=256m -XX:+UseParallelGC -XX:ParallelGCThreads=16 -XX:+UseAdaptiveSizePolicy -XX:+PrintGCDetails -XX:+PrintGCTimeStamps  -Xloggc:%storm.home%/logs/gc-%port%.log ");
  conf.setMaxSpoutPending(10000);
  int workescount=12;
  conf.setMessageTimeoutSecs(60);
  conf.setNumWorkers(workescount);
  conf.setNumAckers(4);
  if (args.length > 0) {
    conf.put("pv-spout-start-time",args[0]);
    conf.put("click-spout-start-time",args[0]);
    conf.put("access-spout-start-time",args[0]);
  }
  TopologyBuilder builder=new TopologyBuilder();
  builder.setSpout("pvmap",new PvSpout("pv-spout"),48);
  builder.setBolt("reduce",new SumReduceBolt("pv"),16).fieldsGrouping("pvmap",new Fields("key"));
  builder.setSpout("clickmap",new ClickSpout("click-spout"),4);
  builder.setBolt("clickreduce",new ClickReduceBolt("click"),4).fieldsGrouping("clickmap",new Fields("hashkey"));
  StormSubmitter.submitTopology("quanjingmointor",conf,builder.createTopology());
}
