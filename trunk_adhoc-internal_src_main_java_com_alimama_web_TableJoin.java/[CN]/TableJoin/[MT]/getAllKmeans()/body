{
  String joins="";
  SimpleDateFormat fmt=new SimpleDateFormat("yyyyMMdd");
  Map stormconf=Utils.readStormConfig();
  String connstr=(String)stormconf.get("higo.download.offline.conn");
  String uname=(String)stormconf.get("higo.download.offline.username");
  String passwd=(String)stormconf.get("higo.download.offline.passwd");
  MySqlConn m_fpsql=new MySqlConn(connstr,uname,passwd);
  Connection conn=m_fpsql.getConn();
  Statement stmt=conn.createStatement();
  StringBuffer bufferSql=new StringBuffer();
  String strsqlAbtest="select '8' as source " + ",jobname as tableShowName" + ",uuid as tableName"+ ",cols as colsShowName"+ ",'empty' as colsName"+ ",'empty' as colsType"+ ",'default' as splitString"+ ",storedir as txtStorePath"+ ",'empty' as indexStorePath"+ ",extval as extval"+ ",isfinish as isfinish"+ ",'INDEX' as status"+ ",username as username"+ ",starttime as createtime"+ ",endtime as lastuptime"+ ",'' as joins"+ ",stage as stage"+ ",percent as percent"+ ",resultkb as resultkb"+ ",'' as memo"+ ",params as params"+ " from adhoc_download where  status<>'DEL' and  storedir like '%abtest%' ";
  bufferSql.append("select source,tableShowName,tableName,colsShowName" + ",colsName,colsType,splitString,txtStorePath,indexStorePath,extval,status,username," + "createtime,lastuptime,joins,stage,percent,resultkb,memo,params");
  bufferSql.append(" from (" + strsqlAbtest + ") tmp order by tmp.createtime desc limit 0,1000 ");
  String sql=bufferSql.toString();
  ResultSet res=stmt.executeQuery(sql);
  StringBuffer buff=new StringBuffer();
  buff.append("<table width='100%' border=1>");
  buff.append("<tr>");
  buff.append("<td>").append("name").append("</td>");
  buff.append("<td>").append("uuid").append("</td>");
  buff.append("<td>").append("username").append("</td>");
  buff.append("<td>").append("resultkb").append("</td>");
  buff.append("<td>").append("createtime").append("</td>");
  buff.append("<td>").append("proccess").append("</td>");
  buff.append("<td>").append("msg").append("</td>");
  buff.append("<td>").append("params").append("</td>");
  buff.append("</tr>");
  while (res.next()) {
    JSONObject item=new JSONObject();
    item.put("source",res.getString("source"));
    item.put("tableShowName",res.getString("tableShowName"));
    item.put("tableName",res.getString("tableName"));
    item.put("colsShowName",res.getString("colsShowName").replaceAll("\\(","_").replaceAll("\\)","_").replaceAll(" ","").replaceAll("_,",",").replaceAll(",$",""));
    item.put("colsName",res.getString("colsName"));
    item.put("colsType",res.getString("colsType"));
    item.put("splitString",res.getString("splitString"));
    item.put("txtStorePath",res.getString("txtStorePath"));
    item.put("indexStorePath",res.getString("indexStorePath"));
    item.put("extval",res.getString("extval"));
    item.put("status",res.getString("status"));
    item.put("username",res.getString("username"));
    item.put("createtime",res.getString("createtime"));
    item.put("lastuptime",res.getString("lastuptime"));
    item.put("joins",res.getString("joins"));
    item.put("params",res.getString("params"));
    item.put("stage",res.getString("stage"));
    item.put("percent",res.getString("percent"));
    item.put("resultkb",parseInt(res.getString("resultkb")) > 0 ? res.getString("resultkb") : "<1");
    item.put("memo",String.valueOf(res.getString("memo")));
    boolean isoversize=(!res.getString("source").equals("8")) && parseInt(res.getString("resultkb")) > 512000;
    boolean issuccess=res.getString("status").equals("INDEX") && res.getString("extval").equals("0");
    boolean iserror=res.getString("status").equals("FAIL") || !res.getString("extval").equals("0");
    double percent=parsePercent(res.getString("stage"),res.getString("percent"),issuccess);
    if (percent >= 100 && res.getString("source").equals("8") && parseInt(res.getString("resultkb")) <= 0) {
      issuccess=false;
      iserror=true;
    }
    boolean isallowEdit=!res.getString("status").equals("INDEXING") && res.getString("source").equals("1");
    item.put("allowCreate",String.valueOf(res.getString("source").equals("2") && issuccess && percent >= 100 && !isoversize));
    item.put("allowUpload",String.valueOf(isallowEdit && res.getString("status").equals("init")));
    item.put("allowDownload",String.valueOf((issuccess || res.getString("status").equals("DUMP")) && percent >= 100));
    item.put("allowJoin",String.valueOf(res.getString("source").equals("1") && issuccess && percent >= 100 && !isoversize));
    item.put("allowSend",String.valueOf(issuccess && percent >= 100));
    item.put("isError",iserror);
    String uuidshow=iserror ? ("<br>" + res.getString("tableName")) : "";
    item.put("proccess",((res.getString("status").equals("DUMP") || iserror) ? "0" : DF_FORMAT.format(percent)) + "%");
    item.put("msg",String.valueOf(iserror ? "???????????????" : isoversize ? "??????????????????500M	" : res.getString("status").equals("DUMP") ? "???????????????????????????????????????" : issuccess && percent >= 100 ? "??????" : res.getString("status").equals("init") ? "??????????????????" : "?????????...") + uuidshow);
    buff.append("<tr>");
    buff.append("<td>").append(item.get("tableShowName")).append("</td>");
    buff.append("<td>").append(item.get("tableName")).append("</td>");
    buff.append("<td>").append(item.get("username")).append("</td>");
    buff.append("<td>").append(item.get("resultkb")).append("</td>");
    buff.append("<td>").append(item.get("createtime")).append("</td>");
    buff.append("<td>").append(item.get("proccess")).append("</td>");
    buff.append("<td>").append(item.get("msg")).append("</td>");
    buff.append("<td>").append(item.get("params")).append("</td>");
    buff.append("</tr>");
  }
  buff.append("</table>");
  return buff.toString();
}
