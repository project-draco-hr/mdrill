{
  NamedList rtn=new NamedList();
  rtn.add("count",value);
  if (isFinalResult) {
    HashMap<String,ArrayList<Double>> finalResult=new HashMap<String,ArrayList<Double>>();
    for (int field=0; field < this.dist.size(); field++) {
      DistinctCount vv=this.dist.get(field);
      ArrayList<Double> result=finalResult.get(this.distFS[field]);
      if (result == null) {
        result=new ArrayList<Double>(Arrays.asList(this.mkStat()));
        finalResult.put(this.distFS[field],result);
      }
      result.set(0,(double)vv.getValue());
    }
    for (int field=0; field < this.stat.size(); field++) {
      ArrayList<Double> vv=this.stat.get(field);
      ArrayList<Double> result=finalResult.get(this.crossFs[field]);
      if (result == null) {
        result=new ArrayList<Double>(Arrays.asList(this.mkStat()));
        finalResult.put(this.crossFs[field],result);
      }
      int size=Math.min(vv.size(),result.size());
      for (int i=0; i < size; i++) {
        result.set(i,vv.get(i));
      }
    }
    for (    Entry<String,ArrayList<Double>> e : finalResult.entrySet()) {
      String field=e.getKey();
      ArrayList<Double> vv=e.getValue();
      NamedList stat=new NamedList();
      int sz=vv.size();
      for (int i=0; i < sz; i++) {
        String keyname=transKeyName(i);
        if (keyname != null) {
          stat.add(keyname,vv.get(i));
        }
      }
      rtn.add(field,stat);
    }
  }
 else {
    ArrayList<byte[]> compress=new ArrayList<byte[]>();
    for (int field=0; field < this.dist.size(); field++) {
      DistinctCount vv=this.dist.get(field);
      compress.add(field,vv.toBytes());
    }
    rtn.add("dist",compress);
    rtn.add("stat",this.stat);
    rtn.add("rc",1);
  }
  return rtn;
}
