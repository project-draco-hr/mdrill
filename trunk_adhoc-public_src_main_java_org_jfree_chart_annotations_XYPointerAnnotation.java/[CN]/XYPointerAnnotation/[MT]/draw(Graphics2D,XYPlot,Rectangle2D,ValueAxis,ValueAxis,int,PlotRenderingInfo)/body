{
  PlotOrientation orientation=plot.getOrientation();
  RectangleEdge domainEdge=Plot.resolveDomainAxisLocation(plot.getDomainAxisLocation(),orientation);
  RectangleEdge rangeEdge=Plot.resolveRangeAxisLocation(plot.getRangeAxisLocation(),orientation);
  double j2DX=domainAxis.valueToJava2D(getX(),dataArea,domainEdge);
  double j2DY=rangeAxis.valueToJava2D(getY(),dataArea,rangeEdge);
  if (orientation == PlotOrientation.HORIZONTAL) {
    double temp=j2DX;
    j2DX=j2DY;
    j2DY=temp;
  }
  double startX=j2DX + Math.cos(this.angle) * this.baseRadius;
  double startY=j2DY + Math.sin(this.angle) * this.baseRadius;
  double endX=j2DX + Math.cos(this.angle) * this.tipRadius;
  double endY=j2DY + Math.sin(this.angle) * this.tipRadius;
  double arrowBaseX=endX + Math.cos(this.angle) * this.arrowLength;
  double arrowBaseY=endY + Math.sin(this.angle) * this.arrowLength;
  double arrowLeftX=arrowBaseX + Math.cos(this.angle + Math.PI / 2.0) * this.arrowWidth;
  double arrowLeftY=arrowBaseY + Math.sin(this.angle + Math.PI / 2.0) * this.arrowWidth;
  double arrowRightX=arrowBaseX - Math.cos(this.angle + Math.PI / 2.0) * this.arrowWidth;
  double arrowRightY=arrowBaseY - Math.sin(this.angle + Math.PI / 2.0) * this.arrowWidth;
  GeneralPath arrow=new GeneralPath();
  arrow.moveTo((float)endX,(float)endY);
  arrow.lineTo((float)arrowLeftX,(float)arrowLeftY);
  arrow.lineTo((float)arrowRightX,(float)arrowRightY);
  arrow.closePath();
  g2.setStroke(this.arrowStroke);
  g2.setPaint(this.arrowPaint);
  Line2D line=new Line2D.Double(startX,startY,endX,endY);
  g2.draw(line);
  g2.fill(arrow);
  double labelX=j2DX + Math.cos(this.angle) * (this.baseRadius + this.labelOffset);
  double labelY=j2DY + Math.sin(this.angle) * (this.baseRadius + this.labelOffset);
  g2.setFont(getFont());
  Shape hotspot=TextUtilities.calculateRotatedStringBounds(getText(),g2,(float)labelX,(float)labelY,getTextAnchor(),getRotationAngle(),getRotationAnchor());
  if (getBackgroundPaint() != null) {
    g2.setPaint(getBackgroundPaint());
    g2.fill(hotspot);
  }
  g2.setPaint(getPaint());
  TextUtilities.drawRotatedString(getText(),g2,(float)labelX,(float)labelY,getTextAnchor(),getRotationAngle(),getRotationAnchor());
  if (isOutlineVisible()) {
    g2.setStroke(getOutlineStroke());
    g2.setPaint(getOutlinePaint());
    g2.draw(hotspot);
  }
  String toolTip=getToolTipText();
  String url=getURL();
  if (toolTip != null || url != null) {
    addEntity(info,hotspot,rendererIndex,toolTip,url);
  }
}
