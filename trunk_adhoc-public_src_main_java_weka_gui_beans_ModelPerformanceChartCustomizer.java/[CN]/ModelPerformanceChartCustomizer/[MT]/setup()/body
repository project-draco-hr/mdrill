{
  JPanel holder=new JPanel();
  holder.setLayout(new GridLayout(6,2));
  Vector<String> comboItems=new Vector<String>();
  comboItems.add("Weka Chart Renderer");
  Set<String> pluginRenderers=PluginManager.getPluginNamesOfType("weka.gui.beans.OffscreenChartRenderer");
  if (pluginRenderers != null) {
    for (    String plugin : pluginRenderers) {
      comboItems.add(plugin);
    }
  }
  JLabel rendererLab=new JLabel("Renderer",SwingConstants.RIGHT);
  holder.add(rendererLab);
  m_rendererCombo=new JComboBox(comboItems);
  holder.add(m_rendererCombo);
  JLabel xLab=new JLabel("X-axis attribute",SwingConstants.RIGHT);
  xLab.setToolTipText("Attribute name or /first or /last or /<index>");
  m_xAxis=new EnvironmentField(m_env);
  m_xAxis.setText(m_xAxisBack);
  JLabel yLab=new JLabel("Y-axis attribute",SwingConstants.RIGHT);
  yLab.setToolTipText("Attribute name or /first or /last or /<index>");
  m_yAxis=new EnvironmentField(m_env);
  m_yAxis.setText(m_yAxisBack);
  JLabel widthLab=new JLabel("Chart width (pixels)",SwingConstants.RIGHT);
  m_width=new EnvironmentField(m_env);
  m_width.setText(m_widthBack);
  JLabel heightLab=new JLabel("Chart height (pixels)",SwingConstants.RIGHT);
  m_height=new EnvironmentField(m_env);
  m_height.setText(m_heightBack);
  final JLabel optsLab=new JLabel("Renderer options",SwingConstants.RIGHT);
  m_opts=new EnvironmentField(m_env);
  m_opts.setText(m_optsBack);
  holder.add(xLab);
  holder.add(m_xAxis);
  holder.add(yLab);
  holder.add(m_yAxis);
  holder.add(widthLab);
  holder.add(m_width);
  holder.add(heightLab);
  holder.add(m_height);
  holder.add(optsLab);
  holder.add(m_opts);
  add(holder,BorderLayout.CENTER);
  String globalInfo=m_modelPC.globalInfo();
  globalInfo+=" This dialog allows you to configure offscreen " + "rendering options. Offscreen images are passed via" + " 'image' connections.";
  JTextArea jt=new JTextArea();
  jt.setColumns(30);
  jt.setFont(new Font("SansSerif",Font.PLAIN,12));
  jt.setEditable(false);
  jt.setLineWrap(true);
  jt.setWrapStyleWord(true);
  jt.setText(globalInfo);
  jt.setBackground(getBackground());
  JPanel jp=new JPanel();
  jp.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createTitledBorder("About"),BorderFactory.createEmptyBorder(5,5,5,5)));
  jp.setLayout(new BorderLayout());
  jp.add(jt,BorderLayout.CENTER);
  add(jp,BorderLayout.NORTH);
  addButtons();
  m_rendererCombo.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      setupRendererOptsTipText(optsLab);
    }
  }
);
  m_rendererCombo.setSelectedItem(m_rendererNameBack);
  setupRendererOptsTipText(optsLab);
}
