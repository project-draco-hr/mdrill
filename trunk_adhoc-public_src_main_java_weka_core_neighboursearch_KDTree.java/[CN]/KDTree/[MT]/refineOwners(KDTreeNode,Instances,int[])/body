{
  int[] owners=new int[candidates.length];
  double minDistance=Double.POSITIVE_INFINITY;
  int ownerIndex=-1;
  Instance owner;
  int numCand=candidates.length;
  double[] distance=new double[numCand];
  boolean[] inside=new boolean[numCand];
  for (int i=0; i < numCand; i++) {
    distance[i]=distanceToHrect(node,centers.instance(candidates[i]));
    inside[i]=(distance[i] == 0.0);
    if (distance[i] < minDistance) {
      minDistance=distance[i];
      ownerIndex=i;
    }
  }
  owner=(Instance)centers.instance(candidates[ownerIndex]).copy();
  int index=0;
  for (int i=0; i < numCand; i++) {
    if ((inside[i]) || (distance[i] == distance[ownerIndex])) {
      owners[index++]=candidates[i];
    }
 else {
      Instance competitor=(Instance)centers.instance(candidates[i]).copy();
      if (!candidateIsFullOwner(node,owner,competitor)) {
        owners[index++]=candidates[i];
      }
    }
  }
  int[] result=new int[index];
  for (int i=0; i < index; i++)   result[i]=owners[i];
  return result;
}
