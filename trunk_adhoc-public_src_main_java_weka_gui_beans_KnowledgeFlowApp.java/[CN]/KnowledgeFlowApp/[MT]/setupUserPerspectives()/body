{
  for (int i=m_perspectiveToolBar.getComponentCount() - 1; i > 0; i--) {
    m_perspectiveToolBar.remove(i);
    m_perspectives.remove(i);
  }
  int index=1;
  for (  String c : VISIBLE_PERSPECTIVES) {
    KFPerspective toAdd=m_perspectiveCache.get(c);
    if (toAdd instanceof JComponent) {
      toAdd.setLoaded(true);
      m_perspectives.add(toAdd);
      String titleM=toAdd.getPerspectiveTitle();
      Icon icon=toAdd.getPerspectiveIcon();
      JToggleButton tBut=null;
      if (icon != null) {
        tBut=new JToggleButton(titleM,icon,false);
      }
 else {
        tBut=new JToggleButton(titleM,false);
      }
      tBut.setToolTipText(toAdd.getPerspectiveTipText());
      final int theIndex=index;
      tBut.addActionListener(new ActionListener(){
        public void actionPerformed(        ActionEvent e){
          setActivePerspective(theIndex);
        }
      }
);
      m_perspectiveToolBar.add(tBut);
      m_perspectiveGroup.add(tBut);
      index++;
    }
  }
  KFPerspective current=(KFPerspective)m_perspectiveHolder.getComponent(0);
  if (current != m_mainKFPerspective) {
    current.setActive(false);
    m_perspectiveHolder.remove(0);
    m_perspectiveHolder.add((JComponent)m_mainKFPerspective);
    ((JToggleButton)m_perspectiveToolBar.getComponent(0)).setSelected(true);
  }
  revalidate();
  repaint();
  notifyIsDirty();
}
