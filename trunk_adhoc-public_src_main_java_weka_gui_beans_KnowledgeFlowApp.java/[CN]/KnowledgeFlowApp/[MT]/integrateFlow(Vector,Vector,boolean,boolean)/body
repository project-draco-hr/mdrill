{
  java.awt.Color bckC=getBackground();
  m_bcSupport=new BeanContextSupport();
  m_bcSupport.setDesignTime(true);
  for (int i=0; i < beans.size(); i++) {
    BeanInstance tempB=(BeanInstance)beans.elementAt(i);
    if (tempB.getBean() instanceof Visible) {
      ((Visible)(tempB.getBean())).getVisual().addPropertyChangeListener(this);
      ((Visible)(tempB.getBean())).getVisual().setBackground(bckC);
      ((JComponent)(tempB.getBean())).setBackground(bckC);
    }
    if (tempB.getBean() instanceof BeanCommon) {
      ((BeanCommon)(tempB.getBean())).setLog(m_logPanel);
    }
    if (tempB.getBean() instanceof BeanContextChild) {
      m_bcSupport.add(tempB.getBean());
    }
  }
  if (replace) {
    BeanInstance.setBeanInstances(beans,m_beanLayout,m_mainKFPerspective.getCurrentTabIndex());
    BeanConnection.setConnections(connections,m_mainKFPerspective.getCurrentTabIndex());
  }
 else   if (notReplaceAndSourcedFromBinary) {
    BeanInstance.appendBeans(m_beanLayout,beans,m_mainKFPerspective.getCurrentTabIndex());
    BeanConnection.appendConnections(connections,m_mainKFPerspective.getCurrentTabIndex());
  }
  revalidate();
  m_beanLayout.revalidate();
  m_beanLayout.repaint();
  notifyIsDirty();
  m_selectAllB.setEnabled(BeanInstance.getBeanInstances(m_mainKFPerspective.getCurrentTabIndex()).size() > 0);
}
