{
  if (m_mainKFPerspective.getSelectedBeans(m_mainKFPerspective.getCurrentTabIndex()).size() > 0) {
    m_mainKFPerspective.setSelectedBeans(m_mainKFPerspective.getCurrentTabIndex(),new Vector());
  }
  m_sourceEventSetDescriptor=esd;
  Class listenerClass=esd.getListenerType();
  JComponent source=(JComponent)bi.getBean();
  int targetCount=0;
  Vector beanInstances=BeanInstance.getBeanInstances(m_mainKFPerspective.getCurrentTabIndex());
  for (int i=0; i < beanInstances.size(); i++) {
    JComponent bean=(JComponent)((BeanInstance)beanInstances.elementAt(i)).getBean();
    boolean connectable=false;
    boolean canContinue=false;
    if (bean != source) {
      if (bean instanceof MetaBean) {
        if (((MetaBean)bean).canAcceptConnection(listenerClass)) {
          canContinue=true;
        }
      }
 else       if (listenerClass.isInstance(bean) && bean != source) {
        canContinue=true;
      }
    }
    if (canContinue) {
      if (!(bean instanceof BeanCommon)) {
        connectable=true;
      }
 else {
        if (((BeanCommon)bean).connectionAllowed(esd)) {
          connectable=true;
        }
      }
      if (connectable) {
        if (bean instanceof Visible) {
          targetCount++;
          ((Visible)bean).getVisual().setDisplayConnectors(true);
        }
      }
    }
  }
  if (targetCount > 0) {
    if (source instanceof Visible) {
      ((Visible)source).getVisual().setDisplayConnectors(true);
      m_editElement=bi;
      Point closest=((Visible)source).getVisual().getClosestConnectorPoint(new Point(x,y));
      m_startX=(int)closest.getX();
      m_startY=(int)closest.getY();
      m_oldX=m_startX;
      m_oldY=m_startY;
      Graphics2D gx=(Graphics2D)m_beanLayout.getGraphics();
      gx.setXORMode(java.awt.Color.white);
      gx.drawLine(m_startX,m_startY,m_startX,m_startY);
      gx.dispose();
      m_mode=CONNECTING;
    }
  }
}
