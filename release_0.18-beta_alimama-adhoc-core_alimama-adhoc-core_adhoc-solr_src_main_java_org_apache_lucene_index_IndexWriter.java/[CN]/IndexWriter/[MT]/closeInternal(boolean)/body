{
  try {
    if (infoStream != null) {
      message("now flush at close waitForMerges=" + waitForMerges);
    }
    docWriter.close();
    if (!hitOOM) {
      flush(waitForMerges,true);
    }
    if (waitForMerges)     mergeScheduler.merge(this);
    mergePolicy.close();
synchronized (this) {
      finishMerges(waitForMerges);
      stopMerges=true;
    }
    mergeScheduler.close();
    if (infoStream != null)     message("now call final commit()");
    if (!hitOOM) {
      commitInternal(null);
    }
    if (infoStream != null)     message("at close: " + segString());
synchronized (this) {
      readerPool.close();
      docWriter=null;
      deleter.close();
    }
    if (writeLock != null) {
      writeLock.release();
      writeLock=null;
    }
synchronized (this) {
      closed=true;
    }
  }
 catch (  OutOfMemoryError oom) {
    handleOOM(oom,"closeInternal");
  }
 finally {
synchronized (this) {
      closing=false;
      notifyAll();
      if (!closed) {
        if (infoStream != null)         message("hit exception while closing");
      }
    }
  }
}
