{
  this.search=HigoJoinUtils.getSearch(req,this.tableName);
  this.fields=req.getParams().getParams(HigoJoinUtils.getFields(this.tableName));
  List<Query> fqlist=HigoJoinUtils.getFilterQuery(req,this.tableName);
  LOG.info("##fqlist.size()##" + fqlist.size());
  this.docset=this.search.get().getDocSet(fqlist);
  LOG.info("##joinright##" + this.docset.size());
  String fieldLeft=req.getParams().get(HigoJoinUtils.getLeftField(this.tableName));
  String fieldRigth=req.getParams().get(HigoJoinUtils.getRightField(this.tableName));
  this.join=HigoJoin.getJoin(leftSearcher,search.get(),fieldLeft,fieldRigth);
  this.ufsRight=new UnvertFields(fields,this.search.get());
  this.uifleft=UnInvertedField.getUnInvertedField(fieldLeft,this.leftSearcher);
  this.tmRigth=new TermNumToString[this.ufsRight.length];
  for (int i=0; i < this.ufsRight.length; i++) {
    tmRigth[i]=new TermNumToString(this.ufsRight,i);
  }
  groupListCache=MdrillPorcessUtils.getGroupListQueue(ufsRight.length);
}
