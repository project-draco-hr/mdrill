{
  this.parse=parse;
  this.ufs=new UnvertFields(fields,reader,searcher.getPartionKey(),searcher.getSchema());
  this.crossufs=new UnvertFields(parse.crossFs,reader,searcher.getPartionKey(),searcher.getSchema());
  this.distufs=new UnvertFields(parse.distFS,reader,searcher.getPartionKey(),searcher.getSchema());
  this.joinInvert=new HigoJoinInvert[parse.joinList.length];
  this.joinSort=new HigoJoinSort[parse.joinList.length];
  int presize=baseDocs.size();
  for (int i=0; i < parse.joinList.length; i++) {
    this.joinSort[i]=new HigoJoinSort(parse.joinList[i],req);
    this.joinInvert[i]=new HigoJoinInvert(parse.joinList[i],reader,searcher.getPartionKey(),searcher.getSchema());
    this.joinInvert[i].open(req);
    baseDocs=this.joinInvert[i].filterByRight(baseDocs);
  }
  this.baseDocs=baseDocs;
  this.cmpString=new ShardGroupByGroupbyRowCompare(parse.sort_column_type,fields,parse.crossFs,parse.distFS,this.joinSort,parse.sort_fl,parse.sort_type,parse.isdesc);
  this.cmpTermNum=new ShardGroupByTermNumCompare(fields,parse.crossFs,parse.distFS,this.joinSort,parse.sort_fl,parse.sort_type,parse.isdesc);
  this.res=new PriorityQueue<GroupbyRow>(parse.limit_offset,Collections.reverseOrder(this.cmpString));
  this.groupbySize=this.ufs.length;
  for (  HigoJoinInvert inv : this.joinInvert) {
    this.groupbySize+=inv.fieldCount();
  }
  this.groupListCache=GroupListCache.getGroupListQueue(this.groupbySize);
  this.preSet=new HashSet<GroupListCache.GroupList>(parse.preGroupList.length);
  for (int i=0; i < parse.preGroupList.length; i++) {
    this.preSet.add(makePreGroup(parse.preGroupList[i]));
  }
  this.pre=new EmptyPrecontains();
  if (this.preSet.size() > 0) {
    this.pre=new PreContains(this.preSet);
  }
  if (joinInvert.length >= 0) {
    make=new HigoJoinUtils.MakeGroupsJoin(this.groupListCache);
    ;
  }
 else {
    make=new HigoJoinUtils.MakeGroupsDefault();
  }
  groupNonEmptySize=this.ufs.listIndex.length;
  for (  HigoJoinInvert inv : joinInvert) {
    groupNonEmptySize+=inv.fieldCount();
  }
  LOG.info("##baseDocs.size## " + baseDocs.size() + "@"+ presize);
}
