{
  Instances miningSchemaI=m_miningSchema.getFieldsAsInstances();
  int maxAttWidth=0;
  for (int i=0; i < miningSchemaI.numAttributes(); i++) {
    Attribute a=miningSchemaI.attribute(i);
    if (a.name().length() > maxAttWidth) {
      maxAttWidth=a.name().length();
    }
  }
  for (int i=0; i < m_parameterList.size(); i++) {
    for (int j=0; j < miningSchemaI.numAttributes(); j++) {
      if (m_ppMatrix[i][j] != null) {
        double width=Math.log(Math.abs(m_ppMatrix[i][j].m_value)) / Math.log(10.0);
        if (width < 0) {
          width=1;
        }
        width+=2.0;
        if ((int)width > maxAttWidth) {
          maxAttWidth=(int)width;
        }
        if (miningSchemaI.attribute(j).isNominal() || miningSchemaI.attribute(j).isString()) {
          String val=miningSchemaI.attribute(j).value((int)m_ppMatrix[i][j].m_value) + " ";
          if (val.length() > maxAttWidth) {
            maxAttWidth=val.length();
          }
        }
      }
    }
  }
  int maxParamWidth="Parameter  ".length();
  for (  Parameter p : m_parameterList) {
    String temp=(p.m_label != null) ? p.m_label + " " : p.m_name + " ";
    if (temp.length() > maxParamWidth) {
      maxParamWidth=temp.length();
    }
  }
  buff.append("Predictor-to-Parameter matrix:\n");
  buff.append(PMMLUtils.pad("Predictor"," ",(maxParamWidth + (maxAttWidth * 2 + 2)) - "Predictor".length(),true));
  buff.append("\n" + PMMLUtils.pad("Parameter"," ",maxParamWidth - "Parameter".length(),false));
  for (int i=0; i < miningSchemaI.numAttributes(); i++) {
    if (i != miningSchemaI.classIndex()) {
      String attName=miningSchemaI.attribute(i).name();
      buff.append(PMMLUtils.pad(attName," ",maxAttWidth + 1 - attName.length(),true));
    }
  }
  buff.append("\n");
  for (int i=0; i < m_parameterList.size(); i++) {
    Parameter param=m_parameterList.get(i);
    String paramS=(param.m_label != null) ? param.m_label : param.m_name;
    buff.append(PMMLUtils.pad(paramS," ",maxParamWidth - paramS.length(),false));
    for (int j=0; j < miningSchemaI.numAttributes(); j++) {
      if (j != miningSchemaI.classIndex()) {
        PPCell p=m_ppMatrix[i][j];
        String val=" ";
        if (p != null) {
          if (miningSchemaI.attribute(j).isNominal() || miningSchemaI.attribute(j).isString()) {
            val=miningSchemaI.attribute(j).value((int)p.m_value);
          }
 else {
            val="" + Utils.doubleToString(p.m_value,maxAttWidth,4).trim();
          }
        }
        buff.append(PMMLUtils.pad(val," ",maxAttWidth + 1 - val.length(),true));
      }
    }
    buff.append("\n");
  }
}
