{
  Vector newVector=new Vector(12);
  newVector.addElement(new Option("\tUse unpruned tree.","U",0,"-U"));
  newVector.addElement(new Option("\tDo not collapse tree.","O",0,"-O"));
  newVector.addElement(new Option("\tSet confidence threshold for pruning.\n" + "\t(default 0.25)","C",1,"-C <pruning confidence>"));
  newVector.addElement(new Option("\tSet minimum number of instances per leaf.\n" + "\t(default 2)","M",1,"-M <minimum number of instances>"));
  newVector.addElement(new Option("\tUse reduced error pruning.","R",0,"-R"));
  newVector.addElement(new Option("\tSet number of folds for reduced error\n" + "\tpruning. One fold is used as pruning set.\n" + "\t(default 3)","N",1,"-N <number of folds>"));
  newVector.addElement(new Option("\tUse binary splits only.","B",0,"-B"));
  newVector.addElement(new Option("\tDon't perform subtree raising.","S",0,"-S"));
  newVector.addElement(new Option("\tDo not clean up after the tree has been built.","L",0,"-L"));
  newVector.addElement(new Option("\tLaplace smoothing for predicted probabilities.","A",0,"-A"));
  newVector.addElement(new Option("\tDo not use MDL correction for info gain on numeric attributes.","J",0,"-J"));
  newVector.addElement(new Option("\tSeed for random data shuffling (default 1).","Q",1,"-Q <seed>"));
  return newVector.elements();
}
