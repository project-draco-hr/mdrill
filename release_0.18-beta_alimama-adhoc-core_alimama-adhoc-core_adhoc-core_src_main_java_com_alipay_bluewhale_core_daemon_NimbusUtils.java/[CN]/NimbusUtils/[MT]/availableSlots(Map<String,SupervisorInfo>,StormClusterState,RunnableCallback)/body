{
  Set<NodePort> rtn=new HashSet<NodePort>();
  List<String> supervisorIds=stormClusterState.supervisors(callback);
  if (supervisorIds == null || supervisorInfos == null) {
    return rtn;
  }
  Map<String,List<Integer>> allSlots=new HashMap<String,List<Integer>>();
  Set<Entry<String,SupervisorInfo>> entrySet=supervisorInfos.entrySet();
  for (Iterator<Entry<String,SupervisorInfo>> it=entrySet.iterator(); it.hasNext(); ) {
    Entry<String,SupervisorInfo> entry=it.next();
    allSlots.put(entry.getKey(),entry.getValue().getWorkPorts());
  }
  Map<String,Set<Integer>> assignedSlots=assigned_Slots(stormClusterState);
  Set<Entry<String,List<Integer>>> slotsEntrySet=allSlots.entrySet();
  for (Iterator<Entry<String,List<Integer>>> it=slotsEntrySet.iterator(); it.hasNext(); ) {
    Entry<String,List<Integer>> entry=it.next();
    String supervisorid=entry.getKey();
    List<Integer> s=entry.getValue();
    if (assignedSlots != null) {
      Set<Integer> e=assignedSlots.get(entry.getKey());
      if (e != null) {
        s.removeAll(e);
      }
    }
    for (Iterator<Integer> iter=s.iterator(); iter.hasNext(); ) {
      NodePort nodeport=new NodePort(supervisorid,iter.next());
      rtn.add(nodeport);
    }
  }
  return rtn;
}
