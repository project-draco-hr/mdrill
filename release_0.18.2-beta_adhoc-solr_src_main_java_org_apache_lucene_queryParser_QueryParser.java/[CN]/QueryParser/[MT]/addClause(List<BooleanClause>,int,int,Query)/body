{
  boolean required, prohibited;
  if (clauses.size() > 0 && conj == CONJ_AND) {
    BooleanClause c=clauses.get(clauses.size() - 1);
    if (!c.isProhibited())     c.setOccur(BooleanClause.Occur.MUST);
  }
  if (clauses.size() > 0 && operator == AND_OPERATOR && conj == CONJ_OR) {
    BooleanClause c=clauses.get(clauses.size() - 1);
    if (!c.isProhibited())     c.setOccur(BooleanClause.Occur.SHOULD);
  }
  if (q == null)   return;
  if (operator == OR_OPERATOR) {
    prohibited=(mods == MOD_NOT);
    required=(mods == MOD_REQ);
    if (conj == CONJ_AND && !prohibited) {
      required=true;
    }
  }
 else {
    prohibited=(mods == MOD_NOT);
    required=(!prohibited && conj != CONJ_OR);
  }
  if (required && !prohibited)   clauses.add(newBooleanClause(q,BooleanClause.Occur.MUST));
 else   if (!required && !prohibited)   clauses.add(newBooleanClause(q,BooleanClause.Occur.SHOULD));
 else   if (!required && prohibited)   clauses.add(newBooleanClause(q,BooleanClause.Occur.MUST_NOT));
 else   throw new RuntimeException("Clause cannot be both required and prohibited");
}
