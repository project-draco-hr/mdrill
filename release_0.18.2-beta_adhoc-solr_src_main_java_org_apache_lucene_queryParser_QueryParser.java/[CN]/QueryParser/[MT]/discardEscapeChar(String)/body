{
  char[] output=new char[input.length()];
  int length=0;
  boolean lastCharWasEscapeChar=false;
  int codePointMultiplier=0;
  int codePoint=0;
  for (int i=0; i < input.length(); i++) {
    char curChar=input.charAt(i);
    if (codePointMultiplier > 0) {
      codePoint+=hexToInt(curChar) * codePointMultiplier;
      codePointMultiplier>>>=4;
      if (codePointMultiplier == 0) {
        output[length++]=(char)codePoint;
        codePoint=0;
      }
    }
 else     if (lastCharWasEscapeChar) {
      if (curChar == 'u') {
        codePointMultiplier=16 * 16 * 16;
      }
 else {
        output[length]=curChar;
        length++;
      }
      lastCharWasEscapeChar=false;
    }
 else {
      if (curChar == '\\') {
        lastCharWasEscapeChar=true;
      }
 else {
        output[length]=curChar;
        length++;
      }
    }
  }
  if (codePointMultiplier > 0) {
    throw new ParseException("Truncated unicode escape sequence.");
  }
  if (lastCharWasEscapeChar) {
    throw new ParseException("Term can not end with escape character.");
  }
  return new String(output,0,length);
}
