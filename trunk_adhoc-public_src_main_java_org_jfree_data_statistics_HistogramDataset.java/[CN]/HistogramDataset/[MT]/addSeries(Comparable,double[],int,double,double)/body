{
  if (key == null) {
    throw new IllegalArgumentException("Null 'key' argument.");
  }
  if (values == null) {
    throw new IllegalArgumentException("Null 'values' argument.");
  }
 else   if (bins < 1) {
    throw new IllegalArgumentException("The 'bins' value must be at least 1.");
  }
  double binWidth=(maximum - minimum) / bins;
  double lower=minimum;
  double upper;
  List binList=new ArrayList(bins);
  for (int i=0; i < bins; i++) {
    HistogramBin bin;
    if (i == bins - 1) {
      bin=new HistogramBin(lower,maximum);
    }
 else {
      upper=minimum + (i + 1) * binWidth;
      bin=new HistogramBin(lower,upper);
      lower=upper;
    }
    binList.add(bin);
  }
  for (int i=0; i < values.length; i++) {
    int binIndex=bins - 1;
    if (values[i] < maximum) {
      double fraction=(values[i] - minimum) / (maximum - minimum);
      if (fraction < 0.0) {
        fraction=0.0;
      }
      binIndex=(int)(fraction * bins);
      if (binIndex >= bins) {
        binIndex=bins - 1;
      }
    }
    HistogramBin bin=(HistogramBin)binList.get(binIndex);
    bin.incrementCount();
  }
  Map map=new HashMap();
  map.put("key",key);
  map.put("bins",binList);
  map.put("values.length",new Integer(values.length));
  map.put("bin width",new Double(binWidth));
  this.list.add(map);
}
