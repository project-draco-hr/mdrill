{
  ComplexExplanation result=new ComplexExplanation();
  result.setDescription("weight(" + getQuery() + " in "+ doc+ "), product of:");
  StringBuilder docFreqs=new StringBuilder();
  StringBuilder query=new StringBuilder();
  query.append('\"');
  docFreqs.append(idfExp.explain());
  for (int i=0; i < terms.size(); i++) {
    if (i != 0) {
      query.append(" ");
    }
    Term term=terms.get(i);
    query.append(term.text());
  }
  query.append('\"');
  Explanation idfExpl=new Explanation(idf,"idf(" + field + ":"+ docFreqs+ ")");
  Explanation queryExpl=new Explanation();
  queryExpl.setDescription("queryWeight(" + getQuery() + "), product of:");
  Explanation boostExpl=new Explanation(getBoost(),"boost");
  if (getBoost() != 1.0f)   queryExpl.addDetail(boostExpl);
  queryExpl.addDetail(idfExpl);
  Explanation queryNormExpl=new Explanation(queryNorm,"queryNorm");
  queryExpl.addDetail(queryNormExpl);
  queryExpl.setValue(boostExpl.getValue() * idfExpl.getValue() * queryNormExpl.getValue());
  result.addDetail(queryExpl);
  Explanation fieldExpl=new Explanation();
  fieldExpl.setDescription("fieldWeight(" + field + ":"+ query+ " in "+ doc+ "), product of:");
  Scorer scorer=scorer(reader,true,false);
  if (scorer == null) {
    return new Explanation(0.0f,"no matching docs");
  }
  Explanation tfExplanation=new Explanation();
  int d=scorer.advance(doc);
  float phraseFreq;
  if (d == doc) {
    phraseFreq=scorer.freq();
  }
 else {
    phraseFreq=0.0f;
  }
  tfExplanation.setValue(similarity.tf(phraseFreq));
  tfExplanation.setDescription("tf(phraseFreq=" + phraseFreq + ")");
  fieldExpl.addDetail(tfExplanation);
  fieldExpl.addDetail(idfExpl);
  Explanation fieldNormExpl=new Explanation();
  byte[] fieldNorms=reader.norms(field);
  float fieldNorm=fieldNorms != null ? similarity.decodeNormValue(fieldNorms[doc]) : 1.0f;
  fieldNormExpl.setValue(fieldNorm);
  fieldNormExpl.setDescription("fieldNorm(field=" + field + ", doc="+ doc+ ")");
  fieldExpl.addDetail(fieldNormExpl);
  fieldExpl.setValue(tfExplanation.getValue() * idfExpl.getValue() * fieldNormExpl.getValue());
  result.addDetail(fieldExpl);
  result.setValue(queryExpl.getValue() * fieldExpl.getValue());
  result.setMatch(tfExplanation.isMatch());
  return result;
}
