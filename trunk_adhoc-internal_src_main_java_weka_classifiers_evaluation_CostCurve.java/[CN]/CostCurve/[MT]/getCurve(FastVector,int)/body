{
  if ((predictions.size() == 0) || (((NominalPrediction)predictions.elementAt(0)).distribution().length <= classIndex)) {
    return null;
  }
  ThresholdCurve tc=new ThresholdCurve();
  Instances threshInst=tc.getCurve(predictions,classIndex);
  Instances insts=makeHeader();
  int fpind=threshInst.attribute(ThresholdCurve.FP_RATE_NAME).index();
  int tpind=threshInst.attribute(ThresholdCurve.TP_RATE_NAME).index();
  int threshind=threshInst.attribute(ThresholdCurve.THRESHOLD_NAME).index();
  double[] vals;
  double fpval, tpval, thresh;
  for (int i=0; i < threshInst.numInstances(); i++) {
    fpval=threshInst.instance(i).value(fpind);
    tpval=threshInst.instance(i).value(tpind);
    thresh=threshInst.instance(i).value(threshind);
    vals=new double[3];
    vals[0]=0;
    vals[1]=fpval;
    vals[2]=thresh;
    insts.add(new DenseInstance(1.0,vals));
    vals=new double[3];
    vals[0]=1;
    vals[1]=1.0 - tpval;
    vals[2]=thresh;
    insts.add(new DenseInstance(1.0,vals));
  }
  return insts;
}
