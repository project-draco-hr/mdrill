{
  m_fieldIndex=-1;
  if (m_fieldDefs != null) {
    m_fieldIndex=getFieldDefIndex(m_fieldName);
    if (m_fieldIndex < 0) {
      throw new Exception("[Discretize] Can't find field " + m_fieldName + " in the supplied field definitions.");
    }
    Attribute field=m_fieldDefs.get(m_fieldIndex);
    if (!field.isNumeric()) {
      throw new Exception("[Discretize] reference field " + m_fieldName + " must be continuous.");
    }
  }
  Attribute tempAtt=null;
  boolean categorical=false;
  if (m_opType == FieldMetaInfo.Optype.CONTINUOUS || m_opType == FieldMetaInfo.Optype.ORDINAL) {
    for (    DiscretizeBin d : m_bins) {
      if (Utils.isMissingValue(d.getBinValueNumeric())) {
        categorical=true;
        break;
      }
    }
  }
 else {
    categorical=true;
  }
  tempAtt=(categorical) ? new Attribute("temp",(ArrayList<String>)null) : new Attribute(m_fieldName + "_discretized(optype=continuous)");
  if (categorical) {
    for (    DiscretizeBin d : m_bins) {
      tempAtt.addStringValue(d.getBinValue());
    }
    if (m_defaultValueDefined) {
      tempAtt.addStringValue(m_defaultValue);
    }
    if (m_mapMissingDefined) {
      tempAtt.addStringValue(m_mapMissingTo);
    }
    ArrayList<String> values=new ArrayList<String>();
    for (int i=0; i < tempAtt.numValues(); i++) {
      values.add(tempAtt.value(i));
    }
    m_outputDef=new Attribute(m_fieldName + "_discretized",values);
  }
 else {
    m_outputDef=tempAtt;
  }
}
