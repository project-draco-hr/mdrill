{
  if (dlg == null) {
    dlg=new JDialog();
    dlg.setTitle("Generate Random Data Options");
    final JLabel jLbNrOfInstances=new JLabel("Nr of instances");
    final JTextField jTfNrOfInstances=new JTextField(3);
    jTfNrOfInstances.setHorizontalAlignment(JTextField.CENTER);
    jTfNrOfInstances.setText("" + m_nNrOfInstances);
    final JLabel jLbSeed=new JLabel("Random seed");
    final JTextField jTfSeed=new JTextField(3);
    jTfSeed.setHorizontalAlignment(JTextField.CENTER);
    jTfSeed.setText("" + m_nSeed);
    final JLabel jLbFile=new JLabel("Output file (optional)");
    final JTextField jTfFile=new JTextField(12);
    jTfFile.setHorizontalAlignment(JTextField.CENTER);
    jTfFile.setText(m_sFile);
    JButton jBtGo;
    jBtGo=new JButton("Generate Data");
    jBtGo.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        try {
          String tmpfilename="tmp.bif.file.xml";
          BayesNetGenerator generator=new BayesNetGenerator();
          String[] options=new String[4];
          options[0]="-M";
          options[1]="" + jTfNrOfInstances.getText();
          options[2]="-F";
          options[3]=tmpfilename;
          FileWriter outfile=new FileWriter(tmpfilename);
          StringBuffer text=new StringBuffer();
          if (m_marginCalculator == null) {
            m_marginCalculator=new MarginCalculator();
            m_marginCalculator.calcMargins(m_BayesNet);
          }
          text.append(m_marginCalculator.toXMLBIF03());
          outfile.write(text.toString());
          outfile.close();
          generator.setOptions(options);
          generator.generateRandomNetwork();
          generator.generateInstances();
          m_Instances=generator.m_Instances;
          a_learn.setEnabled(true);
          a_learnCPT.setEnabled(true);
          m_sFile=jTfFile.getText();
          if (m_sFile != null && !m_sFile.equals("")) {
            AbstractFileSaver saver=ConverterUtils.getSaverForFile(m_sFile);
            if (saver == null)             saver=new ArffSaver();
            saver.setFile(new File(m_sFile));
            saver.setInstances(m_Instances);
            saver.writeBatch();
          }
        }
 catch (        Exception e) {
          e.printStackTrace();
        }
        dlg.setVisible(false);
      }
    }
);
    JButton jBtFile=new JButton("Browse");
    jBtFile.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        ConverterFileChooser fc=new ConverterFileChooser(System.getProperty("user.dir"));
        fc.setDialogTitle("Save Instances As");
        int rval=fc.showSaveDialog(GUI.this);
        if (rval == JFileChooser.APPROVE_OPTION) {
          String filename=fc.getSelectedFile().toString();
          jTfFile.setText(filename);
        }
        dlg.setVisible(true);
      }
    }
);
    JButton jBtCancel;
    jBtCancel=new JButton("Cancel");
    jBtCancel.setMnemonic('C');
    jBtCancel.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent ae){
        dlg.setVisible(false);
      }
    }
);
    GridBagConstraints gbc=new GridBagConstraints();
    dlg.setLayout(new GridBagLayout());
    Container c=new Container();
    c.setLayout(new GridBagLayout());
    gbc.gridwidth=2;
    gbc.insets=new Insets(8,0,0,0);
    gbc.anchor=GridBagConstraints.NORTHWEST;
    gbc.gridwidth=GridBagConstraints.RELATIVE;
    gbc.fill=GridBagConstraints.HORIZONTAL;
    c.add(jLbNrOfInstances,gbc);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(jTfNrOfInstances,gbc);
    gbc.gridwidth=GridBagConstraints.RELATIVE;
    c.add(jLbSeed,gbc);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(jTfSeed,gbc);
    gbc.gridwidth=GridBagConstraints.RELATIVE;
    c.add(jLbFile,gbc);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(jTfFile,gbc);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    c.add(jBtFile,gbc);
    gbc.fill=GridBagConstraints.HORIZONTAL;
    dlg.add(c,gbc);
    dlg.add(jBtGo);
    gbc.gridwidth=GridBagConstraints.REMAINDER;
    dlg.add(jBtCancel);
  }
  dlg.setLocation(100,100);
  dlg.setVisible(true);
  dlg.setSize(dlg.getPreferredSize());
  dlg.setVisible(false);
  dlg.setVisible(true);
  dlg.repaint();
}
