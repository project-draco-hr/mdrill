{
  InputWindowToken newTarget=target;
  if (numFillerTokensToInsert > 0) {
    if (null == target) {
      newTarget=new InputWindowToken(nextInputStreamToken.cloneAttributes());
    }
 else {
      nextInputStreamToken.copyTo(target.attSource);
    }
    newTarget.offsetAtt.setOffset(newTarget.offsetAtt.startOffset(),newTarget.offsetAtt.startOffset());
    newTarget.termAtt.copyBuffer(FILLER_TOKEN,0,FILLER_TOKEN.length);
    newTarget.isFiller=true;
    --numFillerTokensToInsert;
  }
 else   if (isNextInputStreamToken) {
    if (null == target) {
      newTarget=new InputWindowToken(nextInputStreamToken.cloneAttributes());
    }
 else {
      nextInputStreamToken.copyTo(target.attSource);
    }
    isNextInputStreamToken=false;
    newTarget.isFiller=false;
  }
 else   if (!exhausted && input.incrementToken()) {
    if (null == target) {
      newTarget=new InputWindowToken(cloneAttributes());
    }
 else {
      this.copyTo(target.attSource);
    }
    if (posIncrAtt.getPositionIncrement() > 1) {
      numFillerTokensToInsert=Math.min(posIncrAtt.getPositionIncrement() - 1,maxShingleSize - 1);
      if (null == nextInputStreamToken) {
        nextInputStreamToken=cloneAttributes();
      }
 else {
        this.copyTo(nextInputStreamToken);
      }
      isNextInputStreamToken=true;
      newTarget.offsetAtt.setOffset(offsetAtt.startOffset(),offsetAtt.startOffset());
      newTarget.termAtt.copyBuffer(FILLER_TOKEN,0,FILLER_TOKEN.length);
      newTarget.isFiller=true;
      --numFillerTokensToInsert;
    }
 else {
      newTarget.isFiller=false;
    }
  }
 else {
    newTarget=null;
    exhausted=true;
  }
  return newTarget;
}
