{
  String filename=null;
  String cfsposfile=null;
  boolean extract=false;
  for (int i=0; i < args.length; ++i) {
    if (args[i].equals("-extract")) {
      extract=true;
    }
 else     if (filename == null) {
      filename=args[i];
      i++;
      cfsposfile=args[i];
    }
  }
  if (filename == null) {
    System.out.println("Usage: org.apache.lucene.index.IndexReader [-extract] <cfsfile> <cfsposfile>");
    return;
  }
  Directory dir=null;
  CompoundFileReader cfr=null;
  try {
    File file=new File(filename);
    String dirname=file.getAbsoluteFile().getParent();
    filename=file.getName();
    dir=FSDirectory.open(new File(dirname));
    cfr=new CompoundFileReader(dir,filename,cfsposfile);
    String[] files=cfr.listAll();
    ArrayUtil.mergeSort(files);
    for (int i=0; i < files.length; ++i) {
      long len=cfr.fileLength(files[i]);
      if (extract) {
        System.out.println("extract " + files[i] + " with "+ len+ " bytes to local directory...");
        IndexInput ii=cfr.openInput(files[i]);
        FileOutputStream f=new FileOutputStream(files[i]);
        byte[] buffer=new byte[1024];
        int chunk=buffer.length;
        while (len > 0) {
          final int bufLen=(int)Math.min(chunk,len);
          ii.readBytes(buffer,0,bufLen);
          f.write(buffer,0,bufLen);
          len-=bufLen;
        }
        f.close();
        ii.close();
      }
 else       System.out.println(files[i] + ": " + len+ " bytes");
    }
  }
 catch (  IOException ioe) {
    ioe.printStackTrace();
  }
 finally {
    try {
      if (dir != null)       dir.close();
      if (cfr != null)       cfr.close();
    }
 catch (    IOException ioe) {
      ioe.printStackTrace();
    }
  }
}
