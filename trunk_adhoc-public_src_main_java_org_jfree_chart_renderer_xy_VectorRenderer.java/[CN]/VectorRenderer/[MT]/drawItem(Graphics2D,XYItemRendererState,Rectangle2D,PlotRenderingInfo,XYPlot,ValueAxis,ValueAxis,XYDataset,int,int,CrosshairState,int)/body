{
  double x=dataset.getXValue(series,item);
  double y=dataset.getYValue(series,item);
  double dx=0.0;
  double dy=0.0;
  if (dataset instanceof VectorXYDataset) {
    dx=((VectorXYDataset)dataset).getVectorXValue(series,item);
    dy=((VectorXYDataset)dataset).getVectorYValue(series,item);
  }
  double xx0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
  double yy0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
  double xx1=domainAxis.valueToJava2D(x + dx,dataArea,plot.getDomainAxisEdge());
  double yy1=rangeAxis.valueToJava2D(y + dy,dataArea,plot.getRangeAxisEdge());
  Line2D line;
  PlotOrientation orientation=plot.getOrientation();
  if (orientation.equals(PlotOrientation.HORIZONTAL)) {
    line=new Line2D.Double(yy0,xx0,yy1,xx1);
  }
 else {
    line=new Line2D.Double(xx0,yy0,xx1,yy1);
  }
  g2.setPaint(getItemPaint(series,item));
  g2.setStroke(getItemStroke(series,item));
  g2.draw(line);
  double dxx=(xx1 - xx0);
  double dyy=(yy1 - yy0);
  double bx=xx0 + (1.0 - this.baseLength) * dxx;
  double by=yy0 + (1.0 - this.baseLength) * dyy;
  double cx=xx0 + (1.0 - this.headLength) * dxx;
  double cy=yy0 + (1.0 - this.headLength) * dyy;
  double angle=0.0;
  if (dxx != 0.0) {
    angle=Math.PI / 2.0 - Math.atan(dyy / dxx);
  }
  double deltaX=2.0 * Math.cos(angle);
  double deltaY=2.0 * Math.sin(angle);
  double leftx=cx + deltaX;
  double lefty=cy - deltaY;
  double rightx=cx - deltaX;
  double righty=cy + deltaY;
  GeneralPath p=new GeneralPath();
  if (orientation == PlotOrientation.VERTICAL) {
    p.moveTo((float)xx1,(float)yy1);
    p.lineTo((float)rightx,(float)righty);
    p.lineTo((float)bx,(float)by);
    p.lineTo((float)leftx,(float)lefty);
  }
 else {
    p.moveTo((float)yy1,(float)xx1);
    p.lineTo((float)righty,(float)rightx);
    p.lineTo((float)by,(float)bx);
    p.lineTo((float)lefty,(float)leftx);
  }
  p.closePath();
  g2.draw(p);
  EntityCollection entities=null;
  if (info != null) {
    entities=info.getOwner().getEntityCollection();
    if (entities != null) {
      addEntity(entities,line.getBounds(),dataset,series,item,0.0,0.0);
    }
  }
}
