{
  this.outputs=outputs;
  writer=null;
  CodecUtil.checkHeader(in,FILE_FORMAT_NAME,VERSION_INT_NUM_BYTES_PER_ARC,VERSION_INT_NUM_BYTES_PER_ARC);
  if (in.readByte() == 1) {
    int numBytes=in.readVInt();
    bytes=new byte[numBytes];
    in.readBytes(bytes,0,numBytes);
    emptyOutput=outputs.read(getBytesReader(numBytes - 1));
  }
 else {
    emptyOutput=null;
  }
  final byte t=in.readByte();
switch (t) {
case 0:
    inputType=INPUT_TYPE.BYTE1;
  break;
case 1:
inputType=INPUT_TYPE.BYTE2;
break;
case 2:
inputType=INPUT_TYPE.BYTE4;
break;
default :
throw new IllegalStateException("invalid input type " + t);
}
startNode=in.readVInt();
nodeCount=in.readVInt();
arcCount=in.readVInt();
arcWithOutputCount=in.readVInt();
bytes=new byte[in.readVInt()];
in.readBytes(bytes,0,bytes.length);
NO_OUTPUT=outputs.getNoOutput();
cacheRootArcs();
}
