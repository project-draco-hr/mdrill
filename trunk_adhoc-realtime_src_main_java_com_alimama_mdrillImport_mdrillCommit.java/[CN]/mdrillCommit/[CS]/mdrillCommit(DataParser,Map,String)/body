{
synchronized (TIMER_LOCK) {
    if (TIMER_LIST == null) {
      TIMER_LIST=new Timer();
    }
  }
  this.confPrefix=confPrefix;
  this.parse=parse;
  this.commitbatch=Integer.parseInt(String.valueOf(conf.get(confPrefix + "-commitbatch")));
  this.buffersize=Integer.parseInt(String.valueOf(conf.get(confPrefix + "-commitbuffer")));
  this.timeout=Integer.parseInt(String.valueOf(conf.get(confPrefix + "-timeoutCommit")));
  timeoutCheckcommit=new TimeOutCheck(10 * 1000l);
  this.group=new TimeCacheMap<BoltStatKey,BoltStatVal>(TIMER_LIST,Math.max(this.timeout,20),this);
  this.doclist=new ArrayList<SolrInputDocument>(300);
  this.update=new TimeCacheMap.Update<BoltStatKey,BoltStatVal>(){
    @Override public synchronized BoltStatVal update(    BoltStatKey key,    BoltStatVal old,    BoltStatVal newval){
      if (old == null) {
        return newval;
      }
      BoltStatVal rtn=old;
      rtn.merger(newval);
      return rtn;
    }
  }
;
}
