{
  int x, y, nx, ny;
  Rectangle r;
  GraphNode n;
  Dimension d=m_gp.getPreferredSize();
  x=y=nx=ny=0;
  if (d.width < m_gp.getWidth())   nx=(int)((nx + m_gp.getWidth() / 2 - d.width / 2) / scale);
  if (d.height < m_gp.getHeight())   ny=(int)((ny + m_gp.getHeight() / 2 - d.height / 2) / scale);
  r=new Rectangle(0,0,(int)(paddedNodeWidth * scale),(int)(nodeHeight * scale));
  x+=me.getX();
  y+=me.getY();
  int i;
  for (i=0; i < m_nodes.size(); i++) {
    n=(GraphNode)m_nodes.elementAt(i);
    if (n.nodeType != NORMAL)     return null;
    r.x=(int)((nx + n.x) * scale);
    r.y=(int)((ny + n.y) * scale);
    if (r.contains(x,y)) {
      if (n.probs == null)       return n.lbl;
 else       return n.lbl + " (click to view the probability dist. table)";
    }
  }
  return null;
}
