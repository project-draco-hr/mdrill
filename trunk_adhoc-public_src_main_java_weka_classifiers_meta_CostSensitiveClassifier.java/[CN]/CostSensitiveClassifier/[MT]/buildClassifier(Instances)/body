{
  getCapabilities().testWithFail(data);
  data=new Instances(data);
  data.deleteWithMissingClass();
  if (m_Classifier == null) {
    throw new Exception("No base classifier has been set!");
  }
  if (m_MatrixSource == MATRIX_ON_DEMAND) {
    String costName=data.relationName() + CostMatrix.FILE_EXTENSION;
    File costFile=new File(getOnDemandDirectory(),costName);
    if (!costFile.exists()) {
      throw new Exception("On-demand cost file doesn't exist: " + costFile);
    }
    setCostMatrix(new CostMatrix(new BufferedReader(new FileReader(costFile))));
  }
 else   if (m_CostMatrix == null) {
    m_CostMatrix=new CostMatrix(data.numClasses());
    m_CostMatrix.readOldFormat(new BufferedReader(new FileReader(m_CostFile)));
  }
  if (!m_MinimizeExpectedCost) {
    Random random=null;
    if (!(m_Classifier instanceof WeightedInstancesHandler)) {
      random=new Random(m_Seed);
    }
    data=m_CostMatrix.applyCostMatrix(data,random);
  }
  m_Classifier.buildClassifier(data);
}
