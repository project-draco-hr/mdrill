{
  if (program == null) {
    internalError("No RE program to run!");
  }
  this.search=search;
  if ((program.flags & REProgram.OPT_HASBOL) == REProgram.OPT_HASBOL) {
    if ((matchFlags & MATCH_MULTILINE) == 0) {
      return i == 0 && matchAt(i);
    }
    for (; !search.isEnd(i); i++) {
      if (isNewline(i)) {
        continue;
      }
      if (matchAt(i)) {
        return true;
      }
      for (; !search.isEnd(i); i++) {
        if (isNewline(i)) {
          break;
        }
      }
    }
    return false;
  }
  if (program.prefix == null) {
    for (; !search.isEnd(i - 1); i++) {
      if (matchAt(i)) {
        return true;
      }
    }
    return false;
  }
 else {
    boolean caseIndependent=(matchFlags & MATCH_CASEINDEPENDENT) != 0;
    char[] prefix=program.prefix;
    for (; !search.isEnd(i + prefix.length - 1); i++) {
      int j=i;
      int k=0;
      boolean match;
      do {
        match=(compareChars(search.charAt(j++),prefix[k++],caseIndependent) == 0);
      }
 while (match && k < prefix.length);
      if (k == prefix.length) {
        if (matchAt(i)) {
          return true;
        }
      }
    }
    return false;
  }
}
