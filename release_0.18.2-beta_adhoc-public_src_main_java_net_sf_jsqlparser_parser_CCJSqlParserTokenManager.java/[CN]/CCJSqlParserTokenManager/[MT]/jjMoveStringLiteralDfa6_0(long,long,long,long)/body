{
  if (((active0&=old0) | (active1&=old1)) == 0L)   return jjStartNfa_0(4,old0,old1);
  try {
    curChar=input_stream.readChar();
  }
 catch (  java.io.IOException e) {
    jjStopStringLiteralDfa_0(5,active0,active1);
    return 6;
  }
switch (curChar) {
case 67:
case 99:
    return jjMoveStringLiteralDfa7_0(active0,0L,active1,0x1L);
case 69:
case 101:
  if ((active0 & 0x2000000000000000L) != 0L)   return jjStartNfaWithStates_0(6,61,36);
return jjMoveStringLiteralDfa7_0(active0,0L,active1,0x2L);
case 76:
case 108:
if ((active0 & 0x1000000000000000L) != 0L) return jjStartNfaWithStates_0(6,60,36);
break;
case 78:
case 110:
if ((active0 & 0x4000000000000000L) != 0L) return jjStartNfaWithStates_0(6,62,36);
break;
case 84:
case 116:
return jjMoveStringLiteralDfa7_0(active0,0x8000000000000000L,active1,0L);
case 89:
case 121:
if ((active0 & 0x800000000000000L) != 0L) return jjStartNfaWithStates_0(6,59,36);
break;
default :
break;
}
return jjStartNfa_0(5,active0,active1);
}
