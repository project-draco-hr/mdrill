{
  getCapabilities().testWithFail(instances);
  instances=new Instances(instances);
  instances.deleteWithMissingClass();
  m_headerInfo=new Instances(instances,0);
  m_numClasses=instances.numClasses();
  m_numAttributes=instances.numAttributes();
  m_probOfWordGivenClass=new double[m_numClasses][];
  m_wordsPerClass=new double[m_numClasses];
  m_probOfClass=new double[m_numClasses];
  double laplace=1;
  for (int c=0; c < m_numClasses; c++) {
    m_probOfWordGivenClass[c]=new double[m_numAttributes];
    m_probOfClass[c]=laplace;
    m_wordsPerClass[c]=laplace * m_numAttributes;
    for (int att=0; att < m_numAttributes; att++) {
      m_probOfWordGivenClass[c][att]=laplace;
    }
  }
  for (int i=0; i < instances.numInstances(); i++)   updateClassifier(instances.instance(i));
}
