{
  SolrQueryRequest req=rb.req;
  SolrQueryResponse rsp=rb.rsp;
  boolean fsv=req.getParams().getBool(ResponseBuilder.FIELD_SORT_VALUES,false);
  if (fsv) {
    Sort sort=searcher.weightSort(rb.getSortSpec().getSort());
    SortField[] sortFields=sort == null ? new SortField[]{SortField.FIELD_SCORE} : sort.getSort();
    NamedList<List> sortVals=new NamedList<List>();
    Field field=new Field("dummy","",Field.Store.YES,Field.Index.NO);
    SolrIndexReader reader=searcher.getReader();
    SolrIndexReader[] readers=reader.getLeafReaders();
    SolrIndexReader subReader=reader;
    if (readers.length == 1) {
      subReader=readers[0];
      readers=null;
    }
    int[] offsets=reader.getLeafOffsets();
    for (    SortField sortField : sortFields) {
      int type=sortField.getType();
      if (type == SortField.SCORE || type == SortField.DOC)       continue;
      FieldComparator comparator=null;
      FieldComparator comparators[]=(readers == null) ? null : new FieldComparator[readers.length];
      String fieldname=sortField.getField();
      FieldType ft=fieldname == null ? null : req.getSchema().getFieldTypeNoEx(fieldname);
      DocList docList=rb.getResults().docList;
      ArrayList<Object> vals=new ArrayList<Object>(docList.size());
      DocIterator it=rb.getResults().docList.iterator();
      int offset=0;
      int idx=0;
      while (it.hasNext()) {
        int doc=it.nextDoc();
        if (readers != null) {
          idx=SolrIndexReader.readerIndex(doc,offsets);
          subReader=readers[idx];
          offset=offsets[idx];
          comparator=comparators[idx];
        }
        if (comparator == null) {
          comparator=sortField.getComparator(1,0);
          comparator.setNextReader(subReader,offset);
          if (comparators != null)           comparators[idx]=comparator;
        }
        doc-=offset;
        comparator.copy(0,doc);
        Object val=comparator.value(0);
        if (val instanceof String) {
          field.setValue((String)val);
          val=ft.toObject(field);
        }
        vals.add(val);
      }
      sortVals.add(fieldname,vals);
    }
    rsp.add("sort_values",sortVals);
  }
}
