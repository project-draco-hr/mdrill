{
  m_BayesNet=bayesNet;
  m_instances=instances;
  boolean edges[][]=new boolean[maxn() + 1][];
  boolean[][] arrows=new boolean[maxn() + 1][];
  SeparationSet[][] sepsets=new SeparationSet[maxn() + 1][];
  for (int iNode=0; iNode < maxn() + 1; iNode++) {
    edges[iNode]=new boolean[maxn()];
    arrows[iNode]=new boolean[maxn()];
    sepsets[iNode]=new SeparationSet[maxn()];
  }
  calcDependencyGraph(edges,sepsets);
  calcVeeNodes(edges,arrows,sepsets);
  calcArcDirections(edges,arrows);
  for (int iNode=0; iNode < maxn(); iNode++) {
    ParentSet oParentSet=m_BayesNet.getParentSet(iNode);
    while (oParentSet.getNrOfParents() > 0) {
      oParentSet.deleteLastParent(m_instances);
    }
    for (int iParent=0; iParent < maxn(); iParent++) {
      if (arrows[iParent][iNode]) {
        oParentSet.addParent(iParent,m_instances);
      }
    }
  }
}
