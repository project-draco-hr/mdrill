{
  ArrayList<String> fqList=new ArrayList<String>();
  if (queryStr.equals("*:*")) {
    return fqList;
  }
  JSONArray jsonStr=new JSONArray(queryStr.trim());
  for (int j=0; j < jsonStr.length(); j++) {
    JSONObject obj=jsonStr.getJSONObject(j);
    if (obj.has("subQuery")) {
      String filterType="AND";
      if (obj.has("filter")) {
        filterType=obj.getString("filter");
      }
      ArrayList<String> sublist=fqListHive(obj.getJSONArray("list").toString(),shard,isPartionByPt,filetypeMap);
      if (sublist.size() == 1) {
        fqList.add(sublist.get(0));
      }
      StringBuffer buff=new StringBuffer();
      buff.append("(");
      String joinchar="";
      for (      String fq : sublist) {
        buff.append(joinchar);
        buff.append(fq);
        joinchar=" " + filterType + " ";
      }
      buff.append(")");
      fqList.add(buff.toString());
    }
 else {
      for (Iterator iter=obj.keys(); iter.hasNext(); ) {
        String key=(String)iter.next();
        JSONObject jsonStr2=obj.getJSONObject(key);
        int operate=Integer.parseInt(jsonStr2.getString("operate"));
        String valueList=jsonStr2.getString("value");
        if (operate < 1000) {
          if (valueList.startsWith("[") && valueList.endsWith("]")) {
            JSONArray arr=new JSONArray(valueList);
            int len=arr.length();
            StringBuffer sb=new StringBuffer();
            for (int i=0; i < len; i+=1) {
              if (i > 0) {
                sb.append(",");
              }
              sb.append(arr.get(i));
            }
            valueList=sb.toString();
          }
          if (operate < 9 && operate > 4) {
            valueList=valueList.replaceAll(" ",",").replaceAll("\r",",").replaceAll("\t",",").replaceAll("\n",",");
          }
          valueList=valueList.replaceAll("\'","\\\'");
        }
        String fq=parseFqOperateHive(operate,key,valueList,shard,isPartionByPt,filetypeMap);
        if (fq != null) {
          fqList.add(fq);
        }
      }
    }
  }
  return fqList;
}
