{
  List<Rule> rules=new ArrayList<Rule>();
  String line;
  while ((line=readLine(r)) != null) {
    Matcher matcher=stripPattern.matcher(line);
    if (matcher.matches()) {
      rules.add(new Rule(matcher.group(1),Integer.parseInt(matcher.group(2)),""));
    }
 else {
      matcher=repPattern.matcher(line);
      if (matcher.matches()) {
        rules.add(new Rule(matcher.group(1),Integer.parseInt(matcher.group(2)),matcher.group(3)));
      }
 else {
        matcher=excPattern.matcher(line);
        if (matcher.matches()) {
          if (type == 0) {
            rules.add(new RuleWithSuffixExceptions(matcher.group(1),Integer.parseInt(matcher.group(2)),matcher.group(3),parseList(matcher.group(4))));
          }
 else {
            rules.add(new RuleWithSetExceptions(matcher.group(1),Integer.parseInt(matcher.group(2)),matcher.group(3),parseList(matcher.group(4))));
          }
        }
 else {
          throw new RuntimeException("Illegal Step rule specified at line " + r.getLineNumber());
        }
      }
    }
    if (line.endsWith(";"))     return rules.toArray(new Rule[rules.size()]);
  }
  return null;
}
