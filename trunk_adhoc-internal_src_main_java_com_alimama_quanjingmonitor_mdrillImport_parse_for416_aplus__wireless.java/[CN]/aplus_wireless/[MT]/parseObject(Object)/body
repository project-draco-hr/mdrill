{
  try {
    if (line == null) {
      return null;
    }
    this.lines++;
    if (this.lines > 100000) {
      this.laststartts=(System.currentTimeMillis() / 1000) - TS_MAX;
      this.lastendts=(System.currentTimeMillis() / 1000) + TS_MAX;
      this.lines=0;
    }
    byte[] d=(byte[])line;
    Aplus.AplusLog log=Aplus.AplusLog.parseFrom(d);
    if (log == null) {
      return null;
    }
    long ts=log.getTime();
    com.google.protobuf.ByteString currurlbyte=log.getUrl();
    com.google.protobuf.ByteString preurlbyte=log.getPre();
    String currurl=String.valueOf(currurlbyte == null ? "" : currurlbyte.toStringUtf8());
    String preurl=String.valueOf(preurlbyte == null ? "" : preurlbyte.toStringUtf8());
    if (ts < laststartts || ts > lastendts) {
      return null;
    }
    if (currurl.indexOf("laiwang") < 0 && preurl.indexOf("laiwang") < 0) {
      return null;
    }
    this.lines_sb++;
    if (this.lines_sb > 5000) {
      this.lines_sb=0;
      long nowts=System.currentTimeMillis();
      if (nowts - timediff > 30000) {
        timediff=nowts;
        LOG.info("parseLine_sb_" + ColsDefine.formatDayMin.format(new Date(ts * 1000)) + " "+ currurl+ "=="+ preurl+ "<<<");
      }
    }
    String url_id=ColsDefine.getNameNodecode(currurl,"p");
    String pre_id=ColsDefine.getNameNodecode(preurl,"p");
    String url_pid=ColsDefine.getNameNodecode(currurl,"tid");
    String pre_pid=ColsDefine.getNameNodecode(preurl,"tid");
    if (url_id != null && !url_id.isEmpty()) {
      return new DataIterParse(ts,log,url_id,pre_id,url_pid,pre_pid);
    }
    if (pre_id != null && !pre_id.isEmpty()) {
      return new DataIterParse(ts,log,url_id,pre_id,url_pid,pre_pid);
    }
    return null;
  }
 catch (  Throwable nfe) {
    if (groupCreateerror < 100) {
      LOG.error("InvalidEntryException:" + line,nfe);
      groupCreateerror++;
    }
    throw new InvalidEntryException("Invalid log `" + line + "'\n",nfe);
  }
}
