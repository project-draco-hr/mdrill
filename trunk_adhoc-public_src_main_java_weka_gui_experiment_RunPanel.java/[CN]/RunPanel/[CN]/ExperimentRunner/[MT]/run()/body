{
  m_StartBut.setEnabled(false);
  m_StopBut.setEnabled(true);
  if (m_ResultsPanel != null) {
    m_ResultsPanel.setExperiment(null);
  }
  try {
    if (m_ExpCopy instanceof RemoteExperiment) {
      System.err.println("Adding a listener");
      ((RemoteExperiment)m_ExpCopy).addRemoteExperimentListener(new RemoteExperimentListener(){
        public void remoteExperimentStatus(        RemoteExperimentEvent e){
          if (e.m_statusMessage) {
            statusMessage(e.m_messageString);
          }
          if (e.m_logMessage) {
            logMessage(e.m_messageString);
          }
          if (e.m_experimentFinished) {
            m_RunThread=null;
            m_StartBut.setEnabled(true);
            m_StopBut.setEnabled(false);
            statusMessage(NOT_RUNNING);
          }
        }
      }
);
    }
    logMessage("Started");
    statusMessage("Initializing...");
    m_ExpCopy.initialize();
    int errors=0;
    if (!(m_ExpCopy instanceof RemoteExperiment)) {
      statusMessage("Iterating...");
      while (m_RunThread != null && m_ExpCopy.hasMoreIterations()) {
        try {
          String current="Iteration:";
          if (m_ExpCopy.getUsePropertyIterator()) {
            int cnum=m_ExpCopy.getCurrentPropertyNumber();
            String ctype=m_ExpCopy.getPropertyArray().getClass().getComponentType().getName();
            int lastDot=ctype.lastIndexOf('.');
            if (lastDot != -1) {
              ctype=ctype.substring(lastDot + 1);
            }
            String cname=" " + ctype + "="+ (cnum + 1)+ ":"+ m_ExpCopy.getPropertyArrayValue(cnum).getClass().getName();
            current+=cname;
          }
          String dname=((File)m_ExpCopy.getDatasets().elementAt(m_ExpCopy.getCurrentDatasetNumber())).getName();
          current+=" Dataset=" + dname + " Run="+ (m_ExpCopy.getCurrentRunNumber());
          statusMessage(current);
          m_ExpCopy.nextIteration();
        }
 catch (        Exception ex) {
          errors++;
          logMessage(ex.getMessage());
          ex.printStackTrace();
          boolean continueAfterError=false;
          if (continueAfterError) {
            m_ExpCopy.advanceCounters();
          }
 else {
            m_RunThread=null;
          }
        }
      }
      statusMessage("Postprocessing...");
      m_ExpCopy.postProcess();
      if (m_RunThread == null) {
        logMessage("Interrupted");
      }
 else {
        logMessage("Finished");
      }
      if (errors == 1) {
        logMessage("There was " + errors + " error");
      }
 else {
        logMessage("There were " + errors + " errors");
      }
      statusMessage(NOT_RUNNING);
    }
 else {
      statusMessage("Remote experiment running...");
      ((RemoteExperiment)m_ExpCopy).runExperiment();
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.err.println(ex.getMessage());
    statusMessage(ex.getMessage());
  }
 finally {
    if (m_ResultsPanel != null) {
      m_ResultsPanel.setExperiment(m_ExpCopy);
    }
    if (!(m_ExpCopy instanceof RemoteExperiment)) {
      m_RunThread=null;
      m_StartBut.setEnabled(true);
      m_StopBut.setEnabled(false);
      System.err.println("Done...");
    }
  }
}
