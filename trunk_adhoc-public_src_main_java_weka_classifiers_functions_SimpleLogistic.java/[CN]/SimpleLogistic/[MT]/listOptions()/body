{
  Vector newVector=new Vector();
  newVector.addElement(new Option("\tSet fixed number of iterations for LogitBoost","I",1,"-I <iterations>"));
  newVector.addElement(new Option("\tUse stopping criterion on training set (instead of\n" + "\tcross-validation)","S",0,"-S"));
  newVector.addElement(new Option("\tUse error on probabilities (rmse) instead of\n" + "\tmisclassification error for stopping criterion","P",0,"-P"));
  newVector.addElement(new Option("\tSet maximum number of boosting iterations","M",1,"-M <iterations>"));
  newVector.addElement(new Option("\tSet parameter for heuristic for early stopping of\n" + "\tLogitBoost.\n" + "\tIf enabled, the minimum is selected greedily, stopping\n"+ "\tif the current minimum has not changed for iter iterations.\n"+ "\tBy default, heuristic is enabled with value 50. Set to\n"+ "\tzero to disable heuristic.","H",1,"-H <iterations>"));
  newVector.addElement(new Option("\tSet beta for weight trimming for LogitBoost. Set to 0 for no weight trimming.\n","W",1,"-W <beta>"));
  newVector.addElement(new Option("\tThe AIC is used to choose the best iteration (instead of CV or training error).\n","A",0,"-A"));
  return newVector.elements();
}
