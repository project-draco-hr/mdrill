{
  String addjar="add jar " + findContainingJar(this.getClass()) + ";";
  String addudf="create temporary function inhdfs_udf as 'com.alipay.offline.InHdfs_udf'; create temporary function transhigo_udf as 'com.alipay.offline.TransHigo_udf'; ;";
  String executeHql=addjar + addudf + hql;
  String[] execmd={hiveBin,"-e",executeHql};
  this.cmd=execmd;
  String casspath=findContainingJar(HiveExecute.class);
  HashMap<String,String> map=new HashMap<String,String>();
  Map<String,String> sysenv=System.getenv();
  if (sysenv != null) {
    for (    Entry<String,String> e : System.getenv().entrySet()) {
      String ekey=e.getKey();
      String evalue=e.getValue();
      if (ekey.length() > 1 && evalue.length() > 1) {
        map.put(ekey,evalue);
      }
    }
  }
  map.put("HADOOP_CLASSPATH",casspath);
  map.put("LANG","zh_CN.UTF-8");
  this.env=new String[map.size()];
  int index=0;
  for (  Entry<String,String> e : map.entrySet()) {
    env[index]=e.getKey() + "=" + e.getValue();
    index++;
  }
  this.callback.setConfdir(this.confdir);
  this.callback.init(executeHql,cmd,env);
}
