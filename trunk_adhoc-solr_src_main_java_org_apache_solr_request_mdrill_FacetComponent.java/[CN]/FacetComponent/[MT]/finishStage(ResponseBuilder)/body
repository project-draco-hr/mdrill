{
  if (!rb.doFacets) {
    return;
  }
  long t1=System.currentTimeMillis();
  FacetInfo fi=rb._facetInfo;
  if (rb.req.getParams().get("mdrill.crc.key.get",null) != null) {
    rb.rsp.add("mdrill_data",rb.crcvalue);
  }
 else {
    NamedList fieldCounts=new SimpleOrderedMap();
    DistribFieldFacet dff=fi.cross;
    int saverecords=dff.offset + dff.limit;
    GroupbyItem[] counts=dff.getPairSorted(saverecords);
    if (dff.recordcount != null) {
      GroupbyItem recordcount=dff.recordcount;
      fieldCounts.add("count",recordcount.toNamedList());
    }
    int end=dff.limit < 0 ? counts.length : Math.min(dff.offset + dff.limit,counts.length);
    ArrayList<Object> list=new ArrayList<Object>();
    for (int i=dff.offset; i < end; i++) {
      GroupbyItem item=counts[i];
      list.add(item.toNamedList());
    }
    fieldCounts.add("list",list);
    rb.rsp.add("mdrill_data",fieldCounts);
  }
  rb.rsp.add("mdrill_shard_time",rb.timetaken);
  rb.crcvalue=new HashMap<Long,String>();
  rb.timetaken=new LinkedHashMap<String,String>();
  rb._facetInfo=null;
  long t2=System.currentTimeMillis();
  LOG.info("##finishStage## time taken " + (t2 - t1));
}
