{
  int i;
  int n;
  int sourcePos;
  int targetPos;
  String event;
  boolean hidden;
  Vector conns;
  BeanConnection conn;
  StringTokenizer tok;
  Vector beanconns;
  conns=(Vector)m_BeanConnectionRelation.get(key);
  if (conns == null)   return;
  for (n=0; n < conns.size(); n++) {
    tok=new StringTokenizer(conns.get(n).toString(),",");
    conn=null;
    sourcePos=Integer.parseInt(tok.nextToken());
    targetPos=Integer.parseInt(tok.nextToken());
    event=tok.nextToken();
    hidden=stringToBoolean(tok.nextToken());
    if ((!(key instanceof MetaBean)) || (getDataType() == DATATYPE_USERCOMPONENTS)) {
      conn=createBeanConnection(sourcePos,targetPos,event,hidden);
    }
 else {
      beanconns=BeanConnection.getConnections(m_vectorIndex);
      for (i=0; i < beanconns.size(); i++) {
        conn=(BeanConnection)beanconns.get(i);
        if ((conn.getSource() == (BeanInstance)m_BeanInstances.get(sourcePos)) && (conn.getTarget() == (BeanInstance)m_BeanInstances.get(targetPos)) && (conn.getEventName().equals(event))) {
          break;
        }
        conn=null;
      }
    }
    if (key instanceof MetaBean)     setBeanConnection(conn,((MetaBean)key).getAssociatedConnections());
 else     setBeanConnection(conn,(Vector)deserialized.get(INDEX_BEANCONNECTIONS));
  }
}
