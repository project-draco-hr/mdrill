{
  BeanInstance.addBeanInstances(new Vector(),null);
  BeanConnection.addConnections(new Vector());
  JPanel p1=new JPanel();
  p1.setLayout(new BorderLayout());
  BeanLayout tabBeanLayout=new BeanLayout();
  final JScrollPane js=new JScrollPane(tabBeanLayout);
  p1.add(js,BorderLayout.CENTER);
  js.getVerticalScrollBar().setUnitIncrement(m_ScrollBarIncrementLayout);
  js.getHorizontalScrollBar().setUnitIncrement(m_ScrollBarIncrementLayout);
  configureBeanLayout(tabBeanLayout);
  m_beanLayouts.add(tabBeanLayout);
  tabBeanLayout.setSize(m_FlowWidth,m_FlowHeight);
  Dimension d=tabBeanLayout.getPreferredSize();
  tabBeanLayout.setMinimumSize(d);
  tabBeanLayout.setPreferredSize(d);
  KFLogPanel tabLogPanel=new KFLogPanel();
  setUpLogPanel(tabLogPanel);
  Dimension d2=new Dimension(100,170);
  tabLogPanel.setPreferredSize(d2);
  tabLogPanel.setMinimumSize(d2);
  m_logPanels.add(tabLogPanel);
  m_environmentSettings.add(new Environment());
  m_filePaths.add(new File("-NONE-"));
  JSplitPane p2=new JSplitPane(JSplitPane.VERTICAL_SPLIT,p1,tabLogPanel);
  p2.setOneTouchExpandable(true);
  p2.setDividerLocation(0.7);
  p2.setResizeWeight(1.0);
  JPanel splitHolder=new JPanel();
  splitHolder.setLayout(new BorderLayout());
  splitHolder.add(p2,BorderLayout.CENTER);
  m_editedList.add(new Boolean(false));
  m_executingList.add(new Boolean(false));
  m_executionThreads.add((RunThread)null);
  m_selectedBeans.add(new Vector());
  m_undoBufferList.add(new Stack<File>());
  m_flowTabs.addTab(tabTitle,splitHolder);
  int tabIndex=getNumTabs() - 1;
  m_flowTabs.setTabComponentAt(tabIndex,new CloseableTabTitle(m_flowTabs));
  setActiveTab(getNumTabs() - 1);
  m_saveB.setEnabled(true);
}
