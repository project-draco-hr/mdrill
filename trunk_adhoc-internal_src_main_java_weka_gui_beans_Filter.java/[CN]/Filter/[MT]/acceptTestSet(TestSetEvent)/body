{
  if (e.isStructureOnly())   notifyTestListeners(e);
  if (m_trainingSet != null && m_trainingSet.equalHeaders(e.getTestSet()) && m_filterThread == null) {
    try {
      if (m_state == IDLE) {
        m_state=FILTERING_TEST;
      }
      m_testingSet=e.getTestSet();
      m_filterThread=new Thread(){
        public void run(){
          try {
            if (m_testingSet != null) {
              m_visual.setAnimated();
              if (m_log != null) {
                m_log.statusMessage(statusMessagePrefix() + "Filtering test data (" + m_testingSet.relationName()+ ")");
              }
              Instances filteredTest=weka.filters.Filter.useFilter(m_testingSet,m_Filter);
              m_visual.setStatic();
              TestSetEvent ne=new TestSetEvent(weka.gui.beans.Filter.this,filteredTest);
              ne.m_setNumber=e.m_setNumber;
              ne.m_maxSetNumber=e.m_maxSetNumber;
              notifyTestListeners(ne);
            }
          }
 catch (          Exception ex) {
            ex.printStackTrace();
            if (m_log != null) {
              m_log.logMessage("[Filter] " + statusMessagePrefix() + ex.getMessage());
              m_log.statusMessage(statusMessagePrefix() + "ERROR (See log for details).");
            }
            Filter.this.stop();
          }
 finally {
            m_visual.setStatic();
            m_state=IDLE;
            if (isInterrupted()) {
              m_trainingSet=null;
              if (m_log != null) {
                m_log.logMessage("[Filter] " + statusMessagePrefix() + " test set interrupted!");
                m_log.statusMessage(statusMessagePrefix() + "INTERRUPTED");
              }
            }
 else {
              if (m_log != null) {
                m_log.statusMessage(statusMessagePrefix() + "Finished.");
              }
            }
            block(false);
          }
        }
      }
;
      m_filterThread.setPriority(Thread.MIN_PRIORITY);
      m_filterThread.start();
      block(true);
      m_filterThread=null;
      m_state=IDLE;
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
  }
}
