{
  Map<Entry,Object> innerCache;
  Object value;
  final Object readerKey=reader.getCoreCacheKey();
synchronized (readerCache) {
    innerCache=readerCache.get(readerKey);
    if (innerCache == null) {
      innerCache=new HashMap<Entry,Object>();
      readerCache.put(readerKey,innerCache);
      reader.addReaderFinishedListener(purgeReader);
      value=null;
    }
 else {
      value=innerCache.get(key);
    }
    if (value == null) {
      value=new CreationPlaceholder();
      innerCache.put(key,value);
    }
  }
  if (value instanceof CreationPlaceholder) {
synchronized (value) {
      CreationPlaceholder progress=(CreationPlaceholder)value;
      if (progress.value == null) {
        progress.value=createValue(reader,key,setDocsWithField);
synchronized (readerCache) {
          innerCache.put(key,progress.value);
        }
        if (key.custom != null && wrapper != null) {
          final PrintStream infoStream=wrapper.getInfoStream();
          if (infoStream != null) {
            printNewInsanity(infoStream,progress.value);
          }
        }
      }
      return progress.value;
    }
  }
  return value;
}
