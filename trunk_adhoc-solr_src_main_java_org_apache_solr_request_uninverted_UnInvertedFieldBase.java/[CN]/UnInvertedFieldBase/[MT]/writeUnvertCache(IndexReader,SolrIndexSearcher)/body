{
  Directory dir=searcher.getFieldcacheDir();
  String filename=field + ".fv" + CacheVersion+ "."+ LuceneUtils.crcKey(reader);
  try {
    IndexOutput output=dir.createOutput(filename);
    output.writeInt(this.nullTermNum);
    output.writeInt(this.maxTermNum);
    output.writeInt(this.numTermsInField);
    output.writeInt(this.termsInverted);
    output.writeLong(this.termInstances);
    if (index == null) {
      output.writeInt(0);
    }
 else {
      output.writeInt(index.getSize());
      for (int i=0; i < index.getSize(); i++) {
        output.writeInt(index.get(i));
      }
    }
    if (indexshort == null) {
      output.writeInt(0);
    }
 else {
      output.writeInt(indexshort.getSize());
      for (int i=0; i < indexshort.getSize(); i++) {
        output.writeInt(indexshort.get(i));
      }
    }
    if (indexbyte == null) {
      output.writeInt(0);
    }
 else {
      output.writeInt(indexbyte.getSize());
      for (int i=0; i < indexbyte.getSize(); i++) {
        output.writeInt(indexbyte.get(i));
      }
    }
    output.writeInt(UnInvertedFieldUtils.TypeIndexToInt(this.indexDatatype));
    output.writeInt(UnInvertedFieldUtils.DatatypeToInt(this.dataType));
    if (termValueLong == null) {
      output.writeInt(0);
    }
 else {
      output.writeInt(termValueLong.getSize());
      for (int i=0; i < termValueLong.getSize(); i++) {
        output.writeLong(termValueLong.get(i));
      }
    }
    if (termValueDouble == null) {
      output.writeInt(0);
    }
 else {
      output.writeInt(termValueDouble.getSize());
      for (int i=0; i < termValueDouble.getSize(); i++) {
        output.writeLong(Double.doubleToLongBits(termValueDouble.get(i)));
      }
    }
    if (tnums == null) {
      output.writeInt(0);
    }
 else {
      output.writeInt(tnums.length);
      for (int i=0; i < tnums.length; i++) {
        byte[] vuff=tnums[i];
        if (vuff == null || vuff.length == 0) {
          output.writeInt(0);
        }
 else {
          output.writeInt(vuff.length);
          output.writeBytes(vuff,vuff.length);
        }
      }
    }
    output.close();
    SolrCore.log.info("facet write success to field'" + field);
  }
 catch (  Exception e) {
    dir.deleteFile(filename);
    SolrCore.log.info("facet write fail from file '" + field,e);
  }
}
