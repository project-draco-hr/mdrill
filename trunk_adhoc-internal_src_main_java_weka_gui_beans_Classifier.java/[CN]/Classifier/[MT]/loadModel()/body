{
  try {
    if (m_fileChooser == null) {
      setupFileChooser();
    }
    int returnVal=m_fileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File loadFrom=m_fileChooser.getSelectedFile();
      if (m_fileChooser.getFileFilter() == m_binaryFilter) {
        if (!loadFrom.getName().toLowerCase().endsWith("." + FILE_EXTENSION)) {
          loadFrom=new File(loadFrom.getParent(),loadFrom.getName() + "." + FILE_EXTENSION);
        }
      }
 else       if (m_fileChooser.getFileFilter() == m_KOMLFilter) {
        if (!loadFrom.getName().toLowerCase().endsWith(KOML.FILE_EXTENSION + FILE_EXTENSION)) {
          loadFrom=new File(loadFrom.getParent(),loadFrom.getName() + KOML.FILE_EXTENSION + FILE_EXTENSION);
        }
      }
 else       if (m_fileChooser.getFileFilter() == m_XStreamFilter) {
        if (!loadFrom.getName().toLowerCase().endsWith(XStream.FILE_EXTENSION + FILE_EXTENSION)) {
          loadFrom=new File(loadFrom.getParent(),loadFrom.getName() + XStream.FILE_EXTENSION + FILE_EXTENSION);
        }
      }
      weka.classifiers.Classifier temp=null;
      Instances tempHeader=null;
      if ((KOML.isPresent()) && (loadFrom.getAbsolutePath().toLowerCase().endsWith(KOML.FILE_EXTENSION + FILE_EXTENSION))) {
        Vector v=(Vector)KOML.read(loadFrom.getAbsolutePath());
        temp=(weka.classifiers.Classifier)v.elementAt(0);
        if (v.size() == 2) {
          tempHeader=(Instances)v.elementAt(1);
        }
      }
 else       if ((XStream.isPresent()) && (loadFrom.getAbsolutePath().toLowerCase().endsWith(XStream.FILE_EXTENSION + FILE_EXTENSION))) {
        Vector v=(Vector)XStream.read(loadFrom.getAbsolutePath());
        temp=(weka.classifiers.Classifier)v.elementAt(0);
        if (v.size() == 2) {
          tempHeader=(Instances)v.elementAt(1);
        }
      }
 else {
        ObjectInputStream is=new ObjectInputStream(new BufferedInputStream(new FileInputStream(loadFrom)));
        temp=(weka.classifiers.Classifier)is.readObject();
        try {
          tempHeader=(Instances)is.readObject();
        }
 catch (        Exception ex) {
        }
        is.close();
      }
      setTrainedClassifier(temp);
      m_trainingSet=tempHeader;
      if (m_log != null) {
        m_log.statusMessage(statusMessagePrefix() + "Loaded model.");
        m_log.logMessage("[Classifier] " + statusMessagePrefix() + "Loaded classifier: "+ m_Classifier.getClass().toString());
      }
    }
  }
 catch (  Exception ex) {
    JOptionPane.showMessageDialog(Classifier.this,"Problem loading classifier.\n","Load Model",JOptionPane.ERROR_MESSAGE);
    if (m_log != null) {
      m_log.statusMessage(statusMessagePrefix() + "ERROR: unable to load " + "model (see log).");
      m_log.logMessage("[Classifier] " + statusMessagePrefix() + "Problem loading classifier. "+ ex.getMessage());
    }
  }
}
