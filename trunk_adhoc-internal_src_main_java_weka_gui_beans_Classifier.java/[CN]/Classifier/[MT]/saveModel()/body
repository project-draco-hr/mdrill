{
  try {
    if (m_fileChooser == null) {
      setupFileChooser();
    }
    int returnVal=m_fileChooser.showSaveDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
      File saveTo=m_fileChooser.getSelectedFile();
      String fn=saveTo.getAbsolutePath();
      if (m_fileChooser.getFileFilter() == m_binaryFilter) {
        if (!fn.toLowerCase().endsWith("." + FILE_EXTENSION)) {
          fn+="." + FILE_EXTENSION;
        }
      }
 else       if (m_fileChooser.getFileFilter() == m_KOMLFilter) {
        if (!fn.toLowerCase().endsWith(KOML.FILE_EXTENSION + FILE_EXTENSION)) {
          fn+=KOML.FILE_EXTENSION + FILE_EXTENSION;
        }
      }
 else       if (m_fileChooser.getFileFilter() == m_XStreamFilter) {
        if (!fn.toLowerCase().endsWith(XStream.FILE_EXTENSION + FILE_EXTENSION)) {
          fn+=XStream.FILE_EXTENSION + FILE_EXTENSION;
        }
      }
      saveTo=new File(fn);
      if ((KOML.isPresent()) && saveTo.getAbsolutePath().toLowerCase().endsWith(KOML.FILE_EXTENSION + FILE_EXTENSION)) {
        SerializedModelSaver.saveKOML(saveTo,m_Classifier,(m_trainingSet != null) ? new Instances(m_trainingSet,0) : null);
      }
 else       if ((XStream.isPresent()) && saveTo.getAbsolutePath().toLowerCase().endsWith(XStream.FILE_EXTENSION + FILE_EXTENSION)) {
        SerializedModelSaver.saveXStream(saveTo,m_Classifier,(m_trainingSet != null) ? new Instances(m_trainingSet,0) : null);
      }
 else {
        ObjectOutputStream os=new ObjectOutputStream(new BufferedOutputStream(new FileOutputStream(saveTo)));
        os.writeObject(m_Classifier);
        if (m_trainingSet != null) {
          Instances header=new Instances(m_trainingSet,0);
          os.writeObject(header);
        }
        os.close();
      }
      if (m_log != null) {
        m_log.statusMessage(statusMessagePrefix() + "Model saved.");
        m_log.logMessage("[Classifier] " + statusMessagePrefix() + " Saved classifier "+ getCustomName());
      }
    }
  }
 catch (  Exception ex) {
    JOptionPane.showMessageDialog(Classifier.this,"Problem saving classifier.\n","Save Model",JOptionPane.ERROR_MESSAGE);
    if (m_log != null) {
      m_log.statusMessage(statusMessagePrefix() + "ERROR: unable to" + " save model (see log).");
      m_log.logMessage("[Classifier] " + statusMessagePrefix() + " Problem saving classifier "+ getCustomName()+ ex.getMessage());
    }
  }
}
