{
  NodeList nodelist;
  nodelist=selectAllNames(doc);
  if (nodelist.getLength() > 0) {
    sName=((CharacterData)(nodelist.item(0).getFirstChild())).getData();
  }
  nodelist=selectAllVariables(doc);
  int nNodes=nodelist.getLength();
  FastVector attInfo=new FastVector(nNodes);
  m_nPositionX=new int[nodelist.getLength()];
  m_nPositionY=new int[nodelist.getLength()];
  for (int iNode=0; iNode < nodelist.getLength(); iNode++) {
    FastVector valueslist;
    valueslist=selectOutCome(nodelist.item(iNode));
    int nValues=valueslist.size();
    FastVector nomStrings=new FastVector(nValues + 1);
    for (int iValue=0; iValue < nValues; iValue++) {
      Node node=((Node)valueslist.elementAt(iValue)).getFirstChild();
      String sValue=((CharacterData)(node)).getData();
      if (sValue == null) {
        sValue="Value" + (iValue + 1);
      }
      nomStrings.addElement(sValue);
    }
    FastVector nodelist2;
    nodelist2=selectName(nodelist.item(iNode));
    if (nodelist2.size() == 0) {
      throw new Exception("No name specified for variable");
    }
    String sNodeName=((CharacterData)(((Node)nodelist2.elementAt(0)).getFirstChild())).getData();
    weka.core.Attribute att=new weka.core.Attribute(sNodeName,nomStrings);
    attInfo.addElement(att);
    valueslist=selectProperty(nodelist.item(iNode));
    nValues=valueslist.size();
    for (int iValue=0; iValue < nValues; iValue++) {
      Node node=((Node)valueslist.elementAt(iValue)).getFirstChild();
      String sValue=((CharacterData)(node)).getData();
      if (sValue.startsWith("position")) {
        int i0=sValue.indexOf('(');
        int i1=sValue.indexOf(',');
        int i2=sValue.indexOf(')');
        String sX=sValue.substring(i0 + 1,i1).trim();
        String sY=sValue.substring(i1 + 1,i2).trim();
        try {
          m_nPositionX[iNode]=(int)Integer.parseInt(sX);
          m_nPositionY[iNode]=(int)Integer.parseInt(sY);
        }
 catch (        NumberFormatException e) {
          System.err.println("Wrong number format in position :(" + sX + ","+ sY+ ")");
          m_nPositionX[iNode]=0;
          m_nPositionY[iNode]=0;
        }
      }
    }
  }
  m_Instances=new Instances(sName,attInfo,100);
  m_Instances.setClassIndex(nNodes - 1);
  setUseADTree(false);
  initStructure();
}
