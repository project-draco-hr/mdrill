{
  try {
    if (props != null)     PROPERTIES=props;
 else     PROPERTIES=Utils.readProperties(PROPERTY_FILE);
    String drivers=PROPERTIES.getProperty("jdbcDriver","jdbc.idbDriver");
    if (drivers == null) {
      throw new Exception("No database drivers (JDBC) specified");
    }
    StringTokenizer st=new StringTokenizer(drivers,", ");
    while (st.hasMoreTokens()) {
      String driver=st.nextToken();
      boolean result;
      try {
        Class.forName(driver);
        DRIVERS.addElement(driver);
        result=true;
      }
 catch (      Exception e) {
        result=false;
      }
      if (m_Debug || (!result && !DRIVERS_ERRORS.contains(driver)))       System.err.println("Trying to add database driver (JDBC): " + driver + " - "+ (result ? "Success!" : "Warning, not in CLASSPATH?"));
      if (!result)       DRIVERS_ERRORS.add(driver);
    }
  }
 catch (  Exception ex) {
    System.err.println("Problem reading properties. Fix before continuing.");
    System.err.println(ex);
  }
  m_DatabaseURL=PROPERTIES.getProperty("jdbcURL","jdbc:idb=experiments.prp");
  m_stringType=PROPERTIES.getProperty("CREATE_STRING","LONGVARCHAR");
  m_intType=PROPERTIES.getProperty("CREATE_INT","INT");
  m_doubleType=PROPERTIES.getProperty("CREATE_DOUBLE","DOUBLE");
  m_checkForUpperCaseNames=PROPERTIES.getProperty("checkUpperCaseNames","false").equals("true");
  m_checkForLowerCaseNames=PROPERTIES.getProperty("checkLowerCaseNames","false").equals("true");
  m_setAutoCommit=PROPERTIES.getProperty("setAutoCommit","false").equals("true");
  m_createIndex=PROPERTIES.getProperty("createIndex","false").equals("true");
  setKeywords(PROPERTIES.getProperty("Keywords","AND,ASC,BY,DESC,FROM,GROUP,INSERT,ORDER,SELECT,UPDATE,WHERE"));
  setKeywordsMaskChar(PROPERTIES.getProperty("KeywordsMaskChar","_"));
}
