{
  StringBuffer replaceBlock=new StringBuffer();
  String sourceBlock=new String(block,offset,length);
  Matcher m=pattern.matcher(sourceBlock);
  int lastMatchOffset=0, lastDiff=0;
  while (m.find()) {
    m.appendReplacement(replaceBlock,replacement);
    int diff=replaceBlock.length() - lastMatchOffset - lastDiff- (m.end(0) - lastMatchOffset);
    if (diff != 0) {
      int prevCumulativeDiff=getLastCumulativeDiff();
      if (diff > 0) {
        for (int i=0; i < diff; i++) {
          addOffCorrectMap(nextCharCounter - length + m.end(0) + i - prevCumulativeDiff,prevCumulativeDiff - 1 - i);
        }
      }
 else {
        addOffCorrectMap(nextCharCounter - length + m.end(0) + diff - prevCumulativeDiff,prevCumulativeDiff - diff);
      }
    }
    lastMatchOffset=m.end(0);
    lastDiff=diff;
  }
  m.appendTail(replaceBlock);
  return replaceBlock.toString();
}
