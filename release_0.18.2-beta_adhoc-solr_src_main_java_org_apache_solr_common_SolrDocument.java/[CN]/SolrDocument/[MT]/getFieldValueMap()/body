{
  return new Map<String,Object>(){
    /** 
 * Get the field Value 
 */
    public Object get(    Object key){
      return getFirstValue((String)key);
    }
    public boolean containsKey(    Object key){
      return _fields.containsKey(key);
    }
    public Set<String> keySet(){
      return _fields.keySet();
    }
    public int size(){
      return _fields.size();
    }
    public boolean isEmpty(){
      return _fields.isEmpty();
    }
    public void clear(){
      throw new UnsupportedOperationException();
    }
    public boolean containsValue(    Object value){
      throw new UnsupportedOperationException();
    }
    public Set<java.util.Map.Entry<String,Object>> entrySet(){
      throw new UnsupportedOperationException();
    }
    public void putAll(    Map<? extends String,? extends Object> t){
      throw new UnsupportedOperationException();
    }
    public Collection<Object> values(){
      throw new UnsupportedOperationException();
    }
    public Collection<Object> put(    String key,    Object value){
      throw new UnsupportedOperationException();
    }
    public Collection<Object> remove(    Object key){
      throw new UnsupportedOperationException();
    }
    @Override public String toString(){
      return _fields.toString();
    }
  }
;
}
