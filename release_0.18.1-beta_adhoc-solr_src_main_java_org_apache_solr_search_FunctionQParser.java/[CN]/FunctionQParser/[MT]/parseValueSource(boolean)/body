{
  ValueSource valueSource;
  int ch=sp.peek();
  if (ch >= '0' && ch <= '9' || ch == '.' || ch == '+' || ch == '-') {
    Number num=sp.getNumber();
    if (num instanceof Long) {
      valueSource=new LongConstValueSource(num.longValue());
    }
 else     if (num instanceof Double) {
      valueSource=new DoubleConstValueSource(num.doubleValue());
    }
 else {
      valueSource=new ConstValueSource(num.floatValue());
    }
  }
 else   if (ch == '"' || ch == '\'') {
    valueSource=new LiteralValueSource(sp.getQuotedString());
  }
 else   if (ch == '$') {
    sp.pos++;
    String param=sp.getId();
    String val=getParam(param);
    if (val == null) {
      throw new ParseException("Missing param " + param + " while parsing function '"+ sp.val+ "'");
    }
    QParser subParser=subQuery(val,"func");
    if (subParser instanceof FunctionQParser) {
      ((FunctionQParser)subParser).setParseMultipleSources(true);
    }
    Query subQuery=subParser.getQuery();
    if (subQuery instanceof FunctionQuery) {
      valueSource=((FunctionQuery)subQuery).getValueSource();
    }
 else {
      valueSource=new QueryValueSource(subQuery,0.0f);
    }
  }
 else {
    String id=sp.getId();
    if (sp.opt("(")) {
      ValueSourceParser argParser=req.getCore().getValueSourceParser(id);
      if (argParser == null) {
        throw new ParseException("Unknown function " + id + " in FunctionQuery("+ sp+ ")");
      }
      valueSource=argParser.parse(this);
      sp.expect(")");
    }
 else {
      SchemaField f=req.getSchema().getField(id);
      valueSource=f.getType().getValueSource(f,this);
    }
  }
  if (doConsumeDelimiter)   consumeArgumentDelimiter();
  return valueSource;
}
