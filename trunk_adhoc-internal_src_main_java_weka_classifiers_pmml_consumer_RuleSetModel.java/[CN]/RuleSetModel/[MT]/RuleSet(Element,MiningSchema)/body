{
  String recordCount=ruleSetNode.getAttribute("recordCount");
  if (recordCount != null && recordCount.length() > 0) {
    m_recordCount=Double.parseDouble(recordCount);
  }
  String nbCorrect=ruleSetNode.getAttribute("nbCorrect");
  if (nbCorrect != null & nbCorrect.length() > 0) {
    m_nbCorrect=Double.parseDouble(nbCorrect);
  }
  String defaultScore=ruleSetNode.getAttribute("defaultScore");
  if (defaultScore != null && defaultScore.length() > 0) {
    m_defaultScore=defaultScore;
    Attribute classAtt=miningSchema.getFieldsAsInstances().classAttribute();
    if (classAtt == null) {
      throw new Exception("[RuleSet] class attribute not set!");
    }
    if (classAtt.isNumeric()) {
      m_defaultPrediction=Double.parseDouble(defaultScore);
    }
 else {
      if (classAtt.indexOfValue(defaultScore) < 0) {
        throw new Exception("[RuleSet] class value " + defaultScore + " not found!");
      }
      m_defaultPrediction=classAtt.indexOfValue(defaultScore);
    }
  }
  String defaultConfidence=ruleSetNode.getAttribute("defaultConfidence");
  if (defaultConfidence != null && defaultConfidence.length() > 0) {
    m_defaultConfidence=Double.parseDouble(defaultConfidence);
  }
  NodeList selectionNL=ruleSetNode.getElementsByTagName("RuleSelectionMethod");
  for (int i=0; i < selectionNL.getLength(); i++) {
    Node selectN=selectionNL.item(i);
    if (selectN.getNodeType() == Node.ELEMENT_NODE) {
      Element sN=(Element)selectN;
      String criterion=sN.getAttribute("criterion");
      for (      RuleSelectionMethod m : RuleSelectionMethod.values()) {
        if (m.toString().equals(criterion)) {
          m_availableRuleSelectionMethods.add(m);
          if (i == 0) {
            m_currentMethod=m;
          }
        }
      }
    }
  }
  if (miningSchema.getFieldsAsInstances().classAttribute().isNominal()) {
    NodeList scoreChildren=ruleSetNode.getChildNodes();
    for (int i=0; i < scoreChildren.getLength(); i++) {
      Node child=scoreChildren.item(i);
      if (child.getNodeType() == Node.ELEMENT_NODE) {
        String tagName=((Element)child).getTagName();
        if (tagName.equals("ScoreDistribution")) {
          TreeModel.ScoreDistribution newDist=new TreeModel.ScoreDistribution((Element)child,miningSchema,m_recordCount);
          m_scoreDistributions.add(newDist);
        }
      }
    }
    if (Utils.isMissingValue(m_recordCount)) {
      double baseCount=0;
      for (      TreeModel.ScoreDistribution s : m_scoreDistributions) {
        baseCount+=s.getRecordCount();
      }
      for (      TreeModel.ScoreDistribution s : m_scoreDistributions) {
        s.deriveConfidenceValue(baseCount);
      }
    }
  }
  NodeList ruleChildren=ruleSetNode.getChildNodes();
  for (int i=0; i < ruleChildren.getLength(); i++) {
    Node child=ruleChildren.item(i);
    if (child.getNodeType() == Node.ELEMENT_NODE) {
      String tagName=((Element)child).getTagName();
      if (tagName.equals("SimpleRule")) {
        Rule tempRule=new SimpleRule(((Element)child),miningSchema);
        m_rules.add(tempRule);
      }
 else       if (tagName.equals("CompoundRule")) {
        Rule tempRule=new CompoundRule(((Element)child),miningSchema);
        m_rules.add(tempRule);
      }
    }
  }
}
