{
  if (m_Indices == null) {
    setOutputFormat(null);
    return;
  }
  FastVector newAtts;
  int newClassIndex;
  StringBuffer attributeName;
  Instances outputFormat;
  FastVector vals;
  newClassIndex=getInputFormat().classIndex();
  newAtts=new FastVector();
  for (int j=0; j < getInputFormat().numAttributes(); j++) {
    Attribute att=getInputFormat().attribute(j);
    if ((!att.isNominal()) || (j == getInputFormat().classIndex())) {
      newAtts.addElement(att.copy());
    }
 else {
      if (j < getInputFormat().classIndex())       newClassIndex+=att.numValues() - 2;
      for (int k=1; k < att.numValues(); k++) {
        attributeName=new StringBuffer(att.name() + "=");
        for (int l=k; l < att.numValues(); l++) {
          if (l > k) {
            attributeName.append(',');
          }
          attributeName.append(att.value(m_Indices[j][l]));
        }
        if (m_Numeric) {
          newAtts.addElement(new Attribute(attributeName.toString()));
        }
 else {
          vals=new FastVector(2);
          vals.addElement("f");
          vals.addElement("t");
          newAtts.addElement(new Attribute(attributeName.toString(),vals));
        }
      }
    }
  }
  outputFormat=new Instances(getInputFormat().relationName(),newAtts,0);
  outputFormat.setClassIndex(newClassIndex);
  setOutputFormat(outputFormat);
}
