{
  StringBuffer resultBuf;
  int indentionLen;
  String indentionStr;
  String part;
  String tmpStr;
  if ((content.indexOf(m_StartTag[index]) == -1) || (content.indexOf(m_EndTag[index]) == -1)) {
    println("No start and/or end tags found: " + m_StartTag[index] + "/"+ m_EndTag[index]);
    return content;
  }
  resultBuf=new StringBuffer();
  while (content.length() > 0) {
    if (content.indexOf(m_StartTag[index]) > -1) {
      part=content.substring(0,content.indexOf(m_StartTag[index]));
      if (part.endsWith("\"")) {
        resultBuf.append(part);
        resultBuf.append(m_StartTag[index]);
        content=content.substring(part.length() + m_StartTag[index].length());
      }
 else {
        tmpStr=part.substring(part.lastIndexOf("\n") + 1);
        indentionLen=getIndentionLength(tmpStr);
        indentionStr=getIndentionString(tmpStr);
        part=part.substring(0,part.lastIndexOf("\n") + 1);
        resultBuf.append(part);
        resultBuf.append(indent(m_StartTag[index],indentionLen,indentionStr) + "\n");
        resultBuf.append(indent(generateJavadoc(index),indentionLen,indentionStr));
        resultBuf.append(indent(m_EndTag[index],indentionLen,indentionStr));
        content=content.substring(content.indexOf(m_EndTag[index]));
        content=content.substring(m_EndTag[index].length());
      }
    }
 else {
      resultBuf.append(content);
      content="";
    }
  }
  return resultBuf.toString().trim();
}
