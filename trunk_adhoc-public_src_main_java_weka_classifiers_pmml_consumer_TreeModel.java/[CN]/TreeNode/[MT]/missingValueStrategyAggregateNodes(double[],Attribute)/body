{
  if (classAtt.isNumeric()) {
    throw new Exception("[TreeNode] missing value strategy aggregate nodes, " + "but class is numeric!");
  }
  double[] preds=null;
  TreeNode trueNode=null;
  boolean strategyInvoked=false;
  int nodeCount=0;
  for (  TreeNode c : m_childNodes) {
    if (c.getPredicate().evaluate(instance) == Predicate.Eval.TRUE) {
      if (trueNode == null) {
        trueNode=c;
      }
      nodeCount++;
    }
 else     if (c.getPredicate().evaluate(instance) == Predicate.Eval.UNKNOWN) {
      strategyInvoked=true;
      nodeCount++;
    }
  }
  if (strategyInvoked) {
    double[] aggregatedCounts=freqCountsForAggNodesStrategy(instance,classAtt);
    Utils.normalize(aggregatedCounts);
    preds=aggregatedCounts;
  }
 else {
    if (trueNode != null) {
      preds=trueNode.score(instance,classAtt);
    }
 else {
      doNoTrueChild(classAtt,preds);
    }
  }
  return preds;
}
