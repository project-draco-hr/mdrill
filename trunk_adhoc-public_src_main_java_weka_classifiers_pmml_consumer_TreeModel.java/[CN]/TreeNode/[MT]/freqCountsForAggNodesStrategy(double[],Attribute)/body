{
  double[] counts=new double[classAtt.numValues()];
  if (m_childNodes.size() > 0) {
    for (    TreeNode c : m_childNodes) {
      if (c.getPredicate().evaluate(instance) == Predicate.Eval.TRUE || c.getPredicate().evaluate(instance) == Predicate.Eval.UNKNOWN) {
        double[] temp=c.freqCountsForAggNodesStrategy(instance,classAtt);
        for (int i=0; i < classAtt.numValues(); i++) {
          counts[i]+=temp[i];
        }
      }
    }
  }
 else {
    if (m_scoreDistributions.size() == 0) {
      throw new Exception("[TreeModel] missing value strategy aggregate nodes:" + " no score distributions at leaf " + m_ID);
    }
    for (    ScoreDistribution s : m_scoreDistributions) {
      counts[s.getClassLabelIndex()]=s.getRecordCount();
    }
  }
  return counts;
}
