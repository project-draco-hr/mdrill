{
  if (m_previousY[0] == -1) {
    int iw=m_plotPanel.getWidth();
    int ih=m_plotPanel.getHeight();
    m_osi=m_plotPanel.createImage(iw,ih);
    Graphics m=m_osi.getGraphics();
    m.setColor(m_BackgroundColor);
    m.fillRect(0,0,iw,ih);
    m_previousY[0]=convertToPanelY(0);
    m_iheight=ih;
    m_iwidth=iw;
  }
  if (dataPoint.length - 1 != m_previousY.length) {
    m_previousY=new double[dataPoint.length - 1];
    for (int i=0; i < dataPoint.length - 1; i++) {
      m_previousY[i]=convertToPanelY(0);
    }
  }
  Graphics osg=m_osi.getGraphics();
  Graphics g=m_plotPanel.getGraphics();
  osg.copyArea(m_refreshWidth,0,m_iwidth - m_refreshWidth,m_iheight,-m_refreshWidth,0);
  osg.setColor(m_BackgroundColor);
  osg.fillRect(m_iwidth - m_refreshWidth,0,m_iwidth,m_iheight);
  if (m_yScaleUpdate) {
    String maxVal=numToString(m_oldMax);
    String minVal=numToString(m_oldMin);
    String midVal=numToString((m_oldMax - m_oldMin) / 2.0);
    if (m_labelMetrics == null) {
      m_labelMetrics=g.getFontMetrics(m_labelFont);
    }
    osg.setFont(m_labelFont);
    int wmx=m_labelMetrics.stringWidth(maxVal);
    int wmn=m_labelMetrics.stringWidth(minVal);
    int wmd=m_labelMetrics.stringWidth(midVal);
    int hf=m_labelMetrics.getAscent();
    osg.setColor(m_colorList[m_colorList.length - 1]);
    osg.drawString(maxVal,m_iwidth - wmx,hf - 2);
    osg.drawString(midVal,m_iwidth - wmd,(m_iheight / 2) + (hf / 2));
    osg.drawString(minVal,m_iwidth - wmn,m_iheight - 1);
    m_yScaleUpdate=false;
  }
  double pos;
  for (int i=0; i < dataPoint.length - 1; i++) {
    osg.setColor(m_colorList[(i % m_colorList.length)]);
    pos=convertToPanelY(dataPoint[i]);
    osg.drawLine(m_iwidth - m_refreshWidth,(int)m_previousY[i],m_iwidth - 1,(int)pos);
    m_previousY[i]=pos;
    if (dataPoint[dataPoint.length - 1] % m_xValFreq == 0) {
      String val=numToString(dataPoint[i]);
      if (m_labelMetrics == null) {
        m_labelMetrics=g.getFontMetrics(m_labelFont);
      }
      int hf=m_labelMetrics.getAscent();
      if (pos - hf < 0) {
        pos+=hf;
      }
      int w=m_labelMetrics.stringWidth(val);
      osg.setFont(m_labelFont);
      osg.drawString(val,m_iwidth - w,(int)pos);
    }
  }
  if (dataPoint[dataPoint.length - 1] % m_xValFreq == 0) {
    String xVal="" + (int)dataPoint[dataPoint.length - 1];
    osg.setColor(m_colorList[m_colorList.length - 1]);
    int w=m_labelMetrics.stringWidth(xVal);
    osg.setFont(m_labelFont);
    osg.drawString(xVal,m_iwidth - w,m_iheight - 1);
  }
  g.drawImage(m_osi,0,0,m_plotPanel);
}
