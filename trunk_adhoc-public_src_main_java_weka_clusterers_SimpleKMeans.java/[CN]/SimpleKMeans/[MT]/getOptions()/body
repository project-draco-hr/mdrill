{
  int i;
  Vector result;
  String[] options;
  result=new Vector();
  if (m_initializeWithKMeansPlusPlus) {
    result.add("-P");
  }
  if (m_displayStdDevs) {
    result.add("-V");
  }
  if (m_dontReplaceMissing) {
    result.add("-M");
  }
  result.add("-N");
  result.add("" + getNumClusters());
  result.add("-A");
  result.add((m_DistanceFunction.getClass().getName() + " " + Utils.joinOptions(m_DistanceFunction.getOptions())).trim());
  result.add("-I");
  result.add("" + getMaxIterations());
  if (m_PreserveOrder) {
    result.add("-O");
  }
  if (m_FastDistanceCalc) {
    result.add("-fast");
  }
  options=super.getOptions();
  for (i=0; i < options.length; i++)   result.add(options[i]);
  return (String[])result.toArray(new String[result.size()]);
}
