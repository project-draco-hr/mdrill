{
  int len=strlen(key,start);
  if (p == 0) {
    p=freenode++;
    eq[p]=val;
    length++;
    hi[p]=0;
    if (len > 0) {
      sc[p]=0xFFFF;
      lo[p]=(char)kv.alloc(len + 1);
      strcpy(kv.getArray(),lo[p],key,start);
    }
 else {
      sc[p]=0;
      lo[p]=0;
    }
    return p;
  }
  if (sc[p] == 0xFFFF) {
    char pp=freenode++;
    lo[pp]=lo[p];
    eq[pp]=eq[p];
    lo[p]=0;
    if (len > 0) {
      sc[p]=kv.get(lo[pp]);
      eq[p]=pp;
      lo[pp]++;
      if (kv.get(lo[pp]) == 0) {
        lo[pp]=0;
        sc[pp]=0;
        hi[pp]=0;
      }
 else {
        sc[pp]=0xFFFF;
      }
    }
 else {
      sc[pp]=0xFFFF;
      hi[p]=pp;
      sc[p]=0;
      eq[p]=val;
      length++;
      return p;
    }
  }
  char s=key[start];
  if (s < sc[p]) {
    lo[p]=insert(lo[p],key,start,val);
  }
 else   if (s == sc[p]) {
    if (s != 0) {
      eq[p]=insert(eq[p],key,start + 1,val);
    }
 else {
      eq[p]=val;
    }
  }
 else {
    hi[p]=insert(hi[p],key,start,val);
  }
  return p;
}
