{
  int addm=(m_AdditionalMeasures != null) ? m_AdditionalMeasures.length : 0;
  String[] resultNames=new String[RESULT_SIZE + addm];
  int current=0;
  resultNames[current++]="Number_of_training_instances";
  resultNames[current++]="Number_of_testing_instances";
  resultNames[current++]="Number_correct";
  resultNames[current++]="Number_incorrect";
  resultNames[current++]="Number_unclassified";
  resultNames[current++]="Percent_correct";
  resultNames[current++]="Percent_incorrect";
  resultNames[current++]="Percent_unclassified";
  resultNames[current++]="Total_cost";
  resultNames[current++]="Average_cost";
  resultNames[current++]="Mean_absolute_error";
  resultNames[current++]="Root_mean_squared_error";
  resultNames[current++]="Relative_absolute_error";
  resultNames[current++]="Root_relative_squared_error";
  resultNames[current++]="SF_prior_entropy";
  resultNames[current++]="SF_scheme_entropy";
  resultNames[current++]="SF_entropy_gain";
  resultNames[current++]="SF_mean_prior_entropy";
  resultNames[current++]="SF_mean_scheme_entropy";
  resultNames[current++]="SF_mean_entropy_gain";
  resultNames[current++]="KB_information";
  resultNames[current++]="KB_mean_information";
  resultNames[current++]="KB_relative_information";
  resultNames[current++]="Elapsed_Time_training";
  resultNames[current++]="Elapsed_Time_testing";
  resultNames[current++]="UserCPU_Time_training";
  resultNames[current++]="UserCPU_Time_testing";
  resultNames[current++]="Serialized_Model_Size";
  resultNames[current++]="Serialized_Train_Set_Size";
  resultNames[current++]="Serialized_Test_Set_Size";
  resultNames[current++]="Summary";
  for (int i=0; i < addm; i++) {
    resultNames[current++]=m_AdditionalMeasures[i];
  }
  if (current != RESULT_SIZE + addm) {
    throw new Error("ResultNames didn't fit RESULT_SIZE");
  }
  return resultNames;
}
