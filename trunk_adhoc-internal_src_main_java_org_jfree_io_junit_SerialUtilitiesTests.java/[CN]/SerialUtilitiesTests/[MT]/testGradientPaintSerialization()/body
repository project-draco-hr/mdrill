{
  final Paint p1=new GradientPaint(0.0f,0.0f,Color.blue,100.0f,200.0f,Color.red);
  Paint p2=null;
  try {
    final ByteArrayOutputStream buffer=new ByteArrayOutputStream();
    final ObjectOutputStream out=new ObjectOutputStream(buffer);
    SerialUtilities.writePaint(p1,out);
    out.close();
    final ByteArrayInputStream bias=new ByteArrayInputStream(buffer.toByteArray());
    final ObjectInputStream in=new ObjectInputStream(bias);
    p2=SerialUtilities.readPaint(in);
    in.close();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  final GradientPaint gp1=(GradientPaint)p1;
  final GradientPaint gp2=(GradientPaint)p2;
  assertEquals(gp1.getColor1(),gp2.getColor1());
  assertEquals(gp1.getPoint1(),gp2.getPoint1());
  assertEquals(gp1.getColor2(),gp2.getColor2());
  assertEquals(gp1.getPoint2(),gp2.getPoint2());
  assertEquals(gp1.isCyclic(),gp2.isCyclic());
}
