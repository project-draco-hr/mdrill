{
  getCapabilities().testWithFail(instances);
  instances=new Instances(instances);
  instances.deleteWithMissingClass();
  m_NumClasses=instances.numClasses();
  m_ClassType=instances.classAttribute().type();
  m_Train=new Instances(instances,0,instances.numInstances());
  if ((m_WindowSize > 0) && (instances.numInstances() > m_WindowSize)) {
    m_Train=new Instances(m_Train,m_Train.numInstances() - m_WindowSize,m_WindowSize);
  }
  m_NumAttributesUsed=0.0;
  for (int i=0; i < m_Train.numAttributes(); i++) {
    if ((i != m_Train.classIndex()) && (m_Train.attribute(i).isNominal() || m_Train.attribute(i).isNumeric())) {
      m_NumAttributesUsed+=1.0;
    }
  }
  m_NNSearch.setInstances(m_Train);
  m_kNNValid=false;
  m_defaultModel=new ZeroR();
  m_defaultModel.buildClassifier(instances);
}
