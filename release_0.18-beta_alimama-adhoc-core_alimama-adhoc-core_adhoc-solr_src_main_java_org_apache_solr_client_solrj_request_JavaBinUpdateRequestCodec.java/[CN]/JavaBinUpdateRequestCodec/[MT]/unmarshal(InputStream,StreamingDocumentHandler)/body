{
  final UpdateRequest updateRequest=new UpdateRequest();
  List<List<NamedList>> doclist;
  List<String> delById;
  List<String> delByQ;
  final NamedList[] namedList=new NamedList[1];
  JavaBinCodec codec=new JavaBinCodec(){
    private boolean seenOuterMostDocIterator=false;
    @Override public NamedList readNamedList(    FastInputStream dis) throws IOException {
      int sz=readSize(dis);
      NamedList nl=new NamedList();
      if (namedList[0] == null) {
        namedList[0]=nl;
      }
      for (int i=0; i < sz; i++) {
        String name=(String)readVal(dis);
        Object val=readVal(dis);
        nl.add(name,val);
      }
      return nl;
    }
    @Override public List readIterator(    FastInputStream fis) throws IOException {
      if (seenOuterMostDocIterator)       return super.readIterator(fis);
      seenOuterMostDocIterator=true;
      return readOuterMostDocIterator(fis);
    }
    private List readOuterMostDocIterator(    FastInputStream fis) throws IOException {
      NamedList params=(NamedList)namedList[0].getVal(0);
      updateRequest.setParams(new ModifiableSolrParams(SolrParams.toSolrParams(params)));
      if (handler == null)       return super.readIterator(fis);
      while (true) {
        Object o=readVal(fis);
        if (o == END_OBJ)         break;
        handler.document(listToSolrInputDocument((List<NamedList>)o),updateRequest);
      }
      return Collections.EMPTY_LIST;
    }
  }
;
  codec.unmarshal(is);
  delById=(List<String>)namedList[0].get("delById");
  delByQ=(List<String>)namedList[0].get("delByQ");
  doclist=(List<List<NamedList>>)namedList[0].get("docs");
  if (doclist != null && !doclist.isEmpty()) {
    List<SolrInputDocument> solrInputDocs=new ArrayList<SolrInputDocument>();
    for (    List<NamedList> n : doclist) {
      solrInputDocs.add(listToSolrInputDocument(n));
    }
    updateRequest.add(solrInputDocs);
  }
  if (delById != null) {
    for (    String s : delById) {
      updateRequest.deleteById(s);
    }
  }
  if (delByQ != null) {
    for (    String s : delByQ) {
      updateRequest.deleteByQuery(s);
    }
  }
  return updateRequest;
}
