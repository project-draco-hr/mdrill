{
  Vector result=new Vector();
  result.addElement(new Option("Save raw split evaluator output.","D",0,"-D"));
  result.addElement(new Option("\tThe filename where raw output will be stored.\n" + "\tIf a directory name is specified then then individual\n" + "\toutputs will be gzipped, otherwise all output will be\n"+ "\tzipped to the named file. Use in conjuction with -D.\n"+ "\t(default: splitEvalutorOut.zip)","O",1,"-O <file/directory name/path>"));
  result.addElement(new Option("\tThe full class name of a SplitEvaluator.\n" + "\teg: weka.experiment.ClassifierSplitEvaluator","W",1,"-W <class name>"));
  result.addElement(new Option("\tSet when data is to be randomized.","R",0,"-R"));
  result.addElement(new Option("\tThe directory containing the test sets.\n" + "\t(default: current directory)","dir",1,"-dir <directory>"));
  result.addElement(new Option("\tAn optional prefix for the test sets (before the relation name).\n" + "(default: empty string)","prefix",1,"-prefix <string>"));
  result.addElement(new Option("\tThe suffix to append to the test set.\n" + "\t(default: " + DEFAULT_SUFFIX + ")","suffix",1,"-suffix <string>"));
  result.addElement(new Option("\tThe regular expression to search the relation name with.\n" + "\tNot used if an empty string.\n" + "\t(default: empty string)","find",1,"-find <regular expression>"));
  result.addElement(new Option("\tThe replacement string for the all the matches of '-find'.\n" + "\t(default: empty string)","replace",1,"-replace <string>"));
  if ((m_SplitEvaluator != null) && (m_SplitEvaluator instanceof OptionHandler)) {
    result.addElement(new Option("","",0,"\nOptions specific to split evaluator " + m_SplitEvaluator.getClass().getName() + ":"));
    Enumeration enu=((OptionHandler)m_SplitEvaluator).listOptions();
    while (enu.hasMoreElements())     result.addElement(enu.nextElement());
  }
  return result.elements();
}
