{
  StringBuffer text=new StringBuffer();
  text.append(getBIFHeader());
  text.append("\n");
  text.append("\n");
  text.append("<BIF VERSION=\"0.3\">\n");
  text.append("<NETWORK>\n");
  text.append("<NAME>" + XMLNormalize(m_Instances.relationName()) + "</NAME>\n");
  for (int iNode=0; iNode < nodes.size(); iNode++) {
    int nNode=(Integer)nodes.elementAt(iNode);
    text.append("<VARIABLE TYPE=\"nature\">\n");
    text.append("<NAME>" + XMLNormalize(m_Instances.attribute(nNode).name()) + "</NAME>\n");
    for (int iValue=0; iValue < m_Instances.attribute(nNode).numValues(); iValue++) {
      text.append("<OUTCOME>" + XMLNormalize(m_Instances.attribute(nNode).value(iValue)) + "</OUTCOME>\n");
    }
    text.append("<PROPERTY>position = (" + getPositionX(nNode) + ","+ getPositionY(nNode)+ ")</PROPERTY>\n");
    text.append("</VARIABLE>\n");
  }
  for (int iNode=0; iNode < nodes.size(); iNode++) {
    int nNode=(Integer)nodes.elementAt(iNode);
    text.append("<DEFINITION>\n");
    text.append("<FOR>" + XMLNormalize(m_Instances.attribute(nNode).name()) + "</FOR>\n");
    for (int iParent=0; iParent < m_ParentSets[nNode].getNrOfParents(); iParent++) {
      text.append("<GIVEN>" + XMLNormalize(m_Instances.attribute(m_ParentSets[nNode].getParent(iParent)).name()) + "</GIVEN>\n");
    }
    text.append("<TABLE>\n");
    for (int iParent=0; iParent < m_ParentSets[nNode].getCardinalityOfParents(); iParent++) {
      for (int iValue=0; iValue < m_Instances.attribute(nNode).numValues(); iValue++) {
        text.append(m_Distributions[nNode][iParent].getProbability(iValue));
        text.append(' ');
      }
      text.append('\n');
    }
    text.append("</TABLE>\n");
    text.append("</DEFINITION>\n");
  }
  text.append("</NETWORK>\n");
  text.append("</BIF>\n");
  return text.toString();
}
