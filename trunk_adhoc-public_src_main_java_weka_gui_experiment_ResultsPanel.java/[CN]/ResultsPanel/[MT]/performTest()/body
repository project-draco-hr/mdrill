{
  String sigStr=m_SigTex.getText();
  if (sigStr.length() != 0) {
    m_TTester.setSignificanceLevel((new Double(sigStr)).doubleValue());
  }
 else {
    m_TTester.setSignificanceLevel(ExperimenterDefaults.getSignificance());
  }
  m_TTester.setShowStdDevs(m_ShowStdDevs.isSelected());
  if (m_Instances.attribute(m_SortCombo.getSelectedItem().toString()) != null)   m_TTester.setSortColumn(m_Instances.attribute(m_SortCombo.getSelectedItem().toString()).index());
 else   m_TTester.setSortColumn(-1);
  int compareCol=m_CompareCombo.getSelectedIndex();
  int tType=m_TestsList.getSelectedIndex();
  String name=(new SimpleDateFormat("HH:mm:ss - ")).format(new Date()) + (String)m_CompareCombo.getSelectedItem() + " - "+ (String)m_TestsList.getSelectedValue();
  StringBuffer outBuff=new StringBuffer();
  outBuff.append(m_TTester.header(compareCol));
  outBuff.append("\n");
  m_History.addResult(name,outBuff);
  m_History.setSingle(name);
  m_TTester.setDisplayedResultsets(m_DisplayedList.getSelectedIndices());
  m_TTester.setResultMatrix(m_ResultMatrix);
  try {
    if (tType < m_TTester.getNumResultsets()) {
      outBuff.append(m_TTester.multiResultsetFull(tType,compareCol));
    }
 else     if (tType == m_TTester.getNumResultsets()) {
      outBuff.append(m_TTester.multiResultsetSummary(compareCol));
    }
 else {
      outBuff.append(m_TTester.multiResultsetRanking(compareCol));
    }
    outBuff.append("\n");
  }
 catch (  Exception ex) {
    outBuff.append(ex.getMessage() + "\n");
  }
  m_History.updateResult(name);
}
