{
  if (predictions == null || predictions.get(0).size() == 0) {
    throw new Exception("No predictions have been seen yet!");
  }
  List<double[]> result=new ArrayList<double[]>();
  for (int i=0; i < m_targetFields.size(); i++) {
    List<NumericPrediction> preds=predictions.get(i);
    List<Double> posErrs=new ArrayList<Double>();
    List<Double> negErrs=new ArrayList<Double>();
    for (    NumericPrediction p : preds) {
      if (!Utils.isMissingValue(p.error())) {
        if (p.error() < 0) {
          negErrs.add(new Double(Math.abs(p.error())));
        }
        if (p.error() > 0) {
          posErrs.add(new Double(p.error()));
        }
      }
    }
    Collections.sort(posErrs);
    Collections.sort(negErrs);
    double[] bounds=new double[2];
    bounds[0]=Utils.missingValue();
    bounds[1]=Utils.missingValue();
    if (posErrs.size() > 0 && negErrs.size() > 0) {
      double cL=1.0 - confidenceLevel;
      int posPosition=(int)Math.round(posErrs.size() * cL);
      if (posPosition < 1) {
        posPosition=1;
      }
      int negPosition=(int)Math.round(negErrs.size() * cL);
      if (negPosition < 1) {
        negPosition=1;
      }
      double upperBound=negErrs.get(negErrs.size() - negPosition);
      double lowerBound=posErrs.get(posErrs.size() - posPosition);
      lowerBound=-lowerBound;
      bounds[0]=lowerBound;
      bounds[1]=upperBound;
    }
    result.add(bounds);
  }
  return result;
}
