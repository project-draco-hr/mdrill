{
  String fontFamily=this.getFont().getFamily();
  Font newFont=new Font(fontFamily,Font.PLAIN,10);
  JPanel hp=new JPanel();
  hp.setFont(newFont);
  int numPlots=Math.min(m_visualizeDataSet.numAttributes(),m_maxPlots);
  int gridHeight=numPlots / m_gridWidth;
  if (numPlots % m_gridWidth != 0) {
    gridHeight++;
  }
  hp.setLayout(new GridLayout(gridHeight,4));
  m_plots=new ArrayList<AttributeVisualizationPanel>();
  for (int i=0; i < numPlots; i++) {
    JPanel temp=new JPanel();
    temp.setLayout(new BorderLayout());
    temp.setBorder(BorderFactory.createTitledBorder(m_visualizeDataSet.attribute(i).name()));
    AttributeVisualizationPanel ap=new AttributeVisualizationPanel();
    m_plots.add(ap);
    ap.setInstances(m_visualizeDataSet);
    if (m_coloringIndex < 0 && m_visualizeDataSet.classIndex() >= 0) {
      ap.setColoringIndex(m_visualizeDataSet.classIndex());
    }
 else {
      ap.setColoringIndex(m_coloringIndex);
    }
    temp.add(ap,BorderLayout.CENTER);
    ap.setAttribute(i);
    hp.add(temp);
  }
  Dimension d=new Dimension(830,gridHeight * 100);
  hp.setMinimumSize(d);
  hp.setMaximumSize(d);
  hp.setPreferredSize(d);
  JScrollPane scroller=new JScrollPane(hp);
  return scroller;
}
