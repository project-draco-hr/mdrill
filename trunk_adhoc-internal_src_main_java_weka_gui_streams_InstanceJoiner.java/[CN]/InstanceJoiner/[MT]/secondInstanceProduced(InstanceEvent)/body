{
  Object source=e.getSource();
  if (source instanceof InstanceProducer) {
    try {
      if (!b_FirstInputFinished) {
        throw new Exception(this.getClass().getName() + "::secondInstanceProduced() - Input received from" + " second stream before first stream finished");
      }
      InstanceProducer a=(InstanceProducer)source;
switch (e.getID()) {
case InstanceEvent.FORMAT_AVAILABLE:
        if (b_Debug) {
          System.err.println(this.getClass().getName() + "::secondInstanceProduced() - Format available");
        }
      if (!(a.outputFormat()).equalHeaders(outputFormat())) {
        throw new Exception(this.getClass().getName() + "::secondInstanceProduced() - incompatible instance streams\n" + (a.outputFormat()).equalHeadersMsg(outputFormat()));
      }
    break;
case InstanceEvent.INSTANCE_AVAILABLE:
  if (b_Debug) {
    System.err.println(this.getClass().getName() + "::secondInstanceProduced() - Instance available");
  }
input(a.outputPeek());
break;
case InstanceEvent.BATCH_FINISHED:
if (b_Debug) {
System.err.println(this.getClass().getName() + "::secondInstanceProduced() - End of instance batch");
}
batchFinished();
break;
default :
System.err.println(this.getClass().getName() + "::secondInstanceProduced() - unknown event type");
break;
}
}
 catch (Exception ex) {
System.err.println(ex.getMessage());
}
}
 else {
System.err.println(this.getClass().getName() + "::secondInstanceProduced() - Unknown source object type");
}
}
