{
  m_installing=true;
  m_installBut.setEnabled(false);
  m_unofficialBut.setEnabled(false);
  m_uninstallBut.setEnabled(false);
  m_refreshCacheBut.setEnabled(false);
  m_availableBut.setEnabled(false);
  m_allBut.setEnabled(false);
  m_installedBut.setEnabled(false);
  ProgressPrintStream pps=new ProgressPrintStream(this);
  m_progress.setMaximum(m_packageNamesToUninstall.size() * 5);
  for (int zz=0; zz < m_packageNamesToUninstall.size(); zz++) {
    String packageName=m_packageNamesToUninstall.get(zz);
    boolean explorerPropertiesExist=WekaPackageManager.installedPackageResourceExists(packageName,"Explorer.props");
    if (!m_forceBut.isSelected()) {
      List<Package> compromised=new ArrayList<Package>();
      List<Package> installedPackages;
      try {
        installedPackages=WekaPackageManager.getInstalledPackages();
      }
 catch (      Exception e) {
        e.printStackTrace();
        displayErrorDialog("Can't determine which packages are installed!",e);
        m_unsuccessfulUninstalls.add(packageName);
        continue;
      }
      for (      Package p : installedPackages) {
        List<Dependency> tempDeps;
        try {
          tempDeps=p.getDependencies();
        }
 catch (        Exception e) {
          e.printStackTrace();
          displayErrorDialog("Problem determining dependencies for package : " + p.getName(),e);
          m_unsuccessfulUninstalls.add(packageName);
          continue;
        }
        for (        Dependency d : tempDeps) {
          if (d.getTarget().getPackage().getName().equals(packageName)) {
            compromised.add(p);
            break;
          }
        }
      }
      if (compromised.size() > 0) {
        StringBuffer message=new StringBuffer();
        message.append("The following installed packages depend on " + packageName + " :\n\n");
        for (        Package p : compromised) {
          message.append("\t" + p.getName() + "\n");
        }
        message.append("\nDo you wish to proceed?");
        int result=JOptionPane.showConfirmDialog(PackageManager.this,message.toString(),"Weka Package Manager",JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.NO_OPTION) {
          continue;
        }
      }
    }
    try {
      if (explorerPropertiesExist) {
        WekaPackageManager.removeExplorerProps(packageName);
      }
      WekaPackageManager.uninstallPackage(packageName,true,pps);
    }
 catch (    Exception e) {
      e.printStackTrace();
      displayErrorDialog("Unable to uninstall package: " + packageName,e);
      m_unsuccessfulUninstalls.add(packageName);
      continue;
    }
  }
  WekaPackageManager.refreshGOEProperties();
  return null;
}
