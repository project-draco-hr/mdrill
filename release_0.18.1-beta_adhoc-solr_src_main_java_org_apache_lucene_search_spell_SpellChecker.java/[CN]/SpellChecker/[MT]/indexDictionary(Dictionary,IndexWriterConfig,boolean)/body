{
synchronized (modifyCurrentIndexLock) {
    ensureOpen();
    final Directory dir=this.spellIndex;
    final IndexWriter writer=new IndexWriter(dir,config);
    IndexSearcher indexSearcher=obtainSearcher();
    final List<IndexReader> readers=new ArrayList<IndexReader>();
    if (searcher.maxDoc() > 0) {
      ReaderUtil.gatherSubReaders(readers,searcher.getIndexReader());
    }
    boolean isEmpty=readers.isEmpty();
    try {
      Iterator<String> iter=dict.getWordsIterator();
      terms:       while (iter.hasNext()) {
        String word=iter.next();
        int len=word.length();
        if (len < 3) {
          continue;
        }
        if (!isEmpty) {
          Term term=F_WORD_TERM.createTerm(word);
          for (          IndexReader ir : readers) {
            if (ir.docFreq(term) > 0) {
              continue terms;
            }
          }
        }
        Document doc=createDocument(word,getMin(len),getMax(len));
        writer.addDocument(doc);
      }
    }
  finally {
      releaseSearcher(indexSearcher);
    }
    if (fullMerge) {
      writer.forceMerge(1);
    }
    writer.close();
    swapSearcher(dir);
  }
}
