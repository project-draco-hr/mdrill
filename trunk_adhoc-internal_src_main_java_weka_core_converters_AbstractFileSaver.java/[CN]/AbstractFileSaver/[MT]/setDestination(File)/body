{
  boolean success=false;
  String tempOut=file.getPath();
  try {
    if (m_env == null) {
      m_env=Environment.getSystemWide();
    }
    tempOut=m_env.substitute(tempOut);
  }
 catch (  Exception ex) {
  }
  file=new File(tempOut);
  String out=file.getAbsolutePath();
  if (m_outputFile != null) {
    try {
      if (file.exists()) {
        if (!file.delete())         throw new IOException("File already exists.");
      }
      if (out.lastIndexOf(File.separatorChar) == -1) {
        success=file.createNewFile();
      }
 else {
        String outPath=out.substring(0,out.lastIndexOf(File.separatorChar));
        File dir=new File(outPath);
        if (dir.exists())         success=file.createNewFile();
 else {
          dir.mkdirs();
          success=file.createNewFile();
        }
      }
      if (success) {
        if (m_useRelativePath) {
          try {
            m_outputFile=Utils.convertToRelativePath(file);
          }
 catch (          Exception e) {
            m_outputFile=file;
          }
        }
 else {
          m_outputFile=file;
        }
        setDestination(new FileOutputStream(m_outputFile));
      }
    }
 catch (    Exception ex) {
      throw new IOException("Cannot create a new output file (Reason: " + ex.toString() + "). Standard out is used.");
    }
 finally {
      if (!success) {
        System.err.println("Cannot create a new output file. Standard out is used.");
        m_outputFile=null;
      }
    }
  }
}
