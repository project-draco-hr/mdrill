{
  if (abortErrorMessage != null) {
    ((HttpServletResponse)response).sendError(500,abortErrorMessage);
    return;
  }
  if (request instanceof HttpServletRequest) {
    HttpServletRequest req=(HttpServletRequest)request;
    HttpServletResponse resp=(HttpServletResponse)response;
    SolrRequestHandler handler=null;
    SolrQueryRequest solrReq=null;
    SolrCore core=null;
    String corename="";
    try {
      req.setAttribute("org.apache.solr.CoreContainer",cores);
      String path=req.getServletPath();
      if (req.getPathInfo() != null) {
        path+=req.getPathInfo();
      }
      int idx=path.indexOf(':');
      if (idx > 0) {
        path=path.substring(0,idx);
      }
      idx=path.indexOf("/",1);
      if (idx > 1) {
        corename=path.substring(1,idx);
        core=cores.getCore(corename);
        if (core != null) {
          path=path.substring(idx);
        }
      }
      if (core == null) {
        corename="";
        core=cores.getCore("");
      }
      if (core != null) {
        final SolrConfig config=core.getSolrConfig();
        SolrRequestParsers parser=null;
        parser=parsers.get(config);
        if (parser == null) {
          parser=new SolrRequestParsers(config);
          parsers.put(config,parser);
        }
        if (handler == null && path.length() > 1) {
          handler=core.getRequestHandler(path);
          if (handler == null && parser.isHandleSelect()) {
            if ("/select".equals(path) || "/select/".equals(path)) {
              solrReq=parser.parse(core,path,req);
              String qt=solrReq.getParams().get(CommonParams.QT);
              handler=core.getRequestHandler(qt);
              if (handler == null) {
                throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"unknown handler: " + qt);
              }
            }
          }
        }
        if (handler != null) {
          if (solrReq == null) {
            solrReq=parser.parse(core,path,req);
          }
          final Method reqMethod=Method.getMethod(req.getMethod());
          HttpCacheHeaderUtil.setCacheControlHeader(config,resp,reqMethod);
          if (config.getHttpCachingConfig().isNever304() || !HttpCacheHeaderUtil.doCacheHeaderValidation(solrReq,req,reqMethod,resp)) {
            SolrQueryResponse solrRsp=new SolrQueryResponse();
            this.execute(req,handler,solrReq,solrRsp);
            HttpCacheHeaderUtil.checkHttpCachingVeto(solrRsp,resp,reqMethod);
            QueryResponseWriter responseWriter=core.getQueryResponseWriter(solrReq);
            writeResponse(solrRsp,response,responseWriter,solrReq,reqMethod);
          }
          return;
        }
      }
      log.debug("no handler or core retrieved for " + path + ", follow through...");
    }
 catch (    Throwable ex) {
      sendError((HttpServletResponse)response,ex);
      return;
    }
 finally {
      if (solrReq != null) {
        solrReq.close();
      }
      if (core != null) {
        core.close();
      }
    }
  }
  chain.doFilter(request,response);
}
