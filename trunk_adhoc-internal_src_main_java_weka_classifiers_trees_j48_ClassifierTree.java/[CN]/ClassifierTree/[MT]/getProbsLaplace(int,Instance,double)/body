{
  double prob=0;
  if (m_isLeaf) {
    return weight * localModel().classProbLaplace(classIndex,instance,-1);
  }
 else {
    int treeIndex=localModel().whichSubset(instance);
    if (treeIndex == -1) {
      double[] weights=localModel().weights(instance);
      for (int i=0; i < m_sons.length; i++) {
        if (!son(i).m_isEmpty) {
          prob+=son(i).getProbsLaplace(classIndex,instance,weights[i] * weight);
        }
      }
      return prob;
    }
 else {
      if (son(treeIndex).m_isEmpty) {
        return weight * localModel().classProbLaplace(classIndex,instance,treeIndex);
      }
 else {
        return son(treeIndex).getProbsLaplace(classIndex,instance,weight);
      }
    }
  }
}
