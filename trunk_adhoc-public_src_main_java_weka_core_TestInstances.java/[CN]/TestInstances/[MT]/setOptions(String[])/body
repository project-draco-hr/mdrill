{
  String tmpStr;
  Class cls;
  CapabilitiesHandler handler;
  boolean initialized;
  initialized=false;
  tmpStr=Utils.getOption('W',options);
  if (tmpStr.length() > 0) {
    cls=Class.forName(tmpStr);
    if (ClassDiscovery.hasInterface(CapabilitiesHandler.class,cls)) {
      initialized=true;
      handler=(CapabilitiesHandler)cls.newInstance();
      if (handler instanceof OptionHandler)       ((OptionHandler)handler).setOptions(Utils.partitionOptions(options));
      setHandler(handler);
      this.assign(forCapabilities(handler.getCapabilities()));
    }
 else {
      throw new IllegalArgumentException("Class '" + tmpStr + "' is not a CapabilitiesHandler!");
    }
  }
  tmpStr=Utils.getOption("relation",options);
  if (tmpStr.length() != 0)   setRelation(tmpStr);
 else   if (!initialized)   setRelation("Testdata");
  tmpStr=Utils.getOption("seed",options);
  if (tmpStr.length() != 0)   setSeed(Integer.parseInt(tmpStr));
 else   if (!initialized)   setSeed(1);
  tmpStr=Utils.getOption("num-instances",options);
  if (tmpStr.length() != 0)   setNumInstances(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumInstances(20);
  setNoClass(Utils.getFlag("no-class",options));
  if (!getNoClass()) {
    tmpStr=Utils.getOption("class-type",options);
    if (tmpStr.length() != 0)     setClassType(Integer.parseInt(tmpStr));
 else     if (!initialized)     setClassType(Attribute.NOMINAL);
    tmpStr=Utils.getOption("class-values",options);
    if (tmpStr.length() != 0)     setNumClasses(Integer.parseInt(tmpStr));
 else     if (!initialized)     setNumClasses(2);
    tmpStr=Utils.getOption("class-index",options);
    if (tmpStr.length() != 0)     setClassIndex(Integer.parseInt(tmpStr));
 else     if (!initialized)     setClassIndex(-1);
  }
  tmpStr=Utils.getOption("nominal",options);
  if (tmpStr.length() != 0)   setNumNominal(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumNominal(1);
  tmpStr=Utils.getOption("nominal-values",options);
  if (tmpStr.length() != 0)   setNumNominalValues(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumNominalValues(2);
  tmpStr=Utils.getOption("numeric",options);
  if (tmpStr.length() != 0)   setNumNumeric(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumNumeric(0);
  tmpStr=Utils.getOption("string",options);
  if (tmpStr.length() != 0)   setNumString(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumString(0);
  tmpStr=Utils.getOption("words",options);
  if (tmpStr.length() != 0)   setWords(tmpStr);
 else   if (!initialized)   setWords(arrayToList(DEFAULT_WORDS));
  if (Utils.getOptionPos("word-separators",options) > -1) {
    tmpStr=Utils.getOption("word-separators",options);
    setWordSeparators(tmpStr);
  }
 else   if (!initialized) {
    setWordSeparators(DEFAULT_SEPARATORS);
  }
  tmpStr=Utils.getOption("date",options);
  if (tmpStr.length() != 0)   setNumDate(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumDate(0);
  tmpStr=Utils.getOption("relational",options);
  if (tmpStr.length() != 0)   setNumRelational(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumRelational(0);
  tmpStr=Utils.getOption("relational-nominal",options);
  if (tmpStr.length() != 0)   setNumRelationalNominal(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumRelationalNominal(1);
  tmpStr=Utils.getOption("relational-nominal-values",options);
  if (tmpStr.length() != 0)   setNumRelationalNominalValues(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumRelationalNominalValues(2);
  tmpStr=Utils.getOption("relational-numeric",options);
  if (tmpStr.length() != 0)   setNumRelationalNumeric(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumRelationalNumeric(0);
  tmpStr=Utils.getOption("relational-string",options);
  if (tmpStr.length() != 0)   setNumRelationalString(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumRelationalString(0);
  tmpStr=Utils.getOption("num-instances-relational",options);
  if (tmpStr.length() != 0)   setNumInstancesRelational(Integer.parseInt(tmpStr));
 else   if (!initialized)   setNumInstancesRelational(10);
  if (!initialized)   setMultiInstance(Utils.getFlag("multi-instance",options));
}
