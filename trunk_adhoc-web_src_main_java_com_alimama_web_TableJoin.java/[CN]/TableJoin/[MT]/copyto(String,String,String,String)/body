{
  JSONObject jsonObj=new JSONObject();
  HashMap<String,String> tableInfo=getTableInfo(uuid);
  if (tableInfo == null) {
    Map stormconf=Utils.readStormConfig();
    String hdpConf=(String)stormconf.get("hadoop.conf.dir");
    String connstr=(String)stormconf.get("higo.download.offline.conn");
    String uname=(String)stormconf.get("higo.download.offline.username");
    String passwd=(String)stormconf.get("higo.download.offline.passwd");
    MySqlConn conn=new MySqlConn(connstr,uname,passwd);
    MysqlInfo info=new MysqlInfo(conn);
    HashMap<String,String> result2=info.get(uuid);
    if (result2 != null) {
      tableInfo=new HashMap<String,String>();
      tableInfo.put("tableShowName",result2.get("jobname"));
      tableInfo.put("tableName",result2.get("uuid"));
      tableInfo.put("colsShowName",result2.get("cols"));
      tableInfo.put("colsName","");
      tableInfo.put("colsType","");
      tableInfo.put("splitString","default");
      tableInfo.put("memo",String.valueOf(result2.get("memo")));
      tableInfo.put("txtStorePath",result2.get("storedir"));
      tableInfo.put("indexStorePath","");
      tableInfo.put("status","INDEX");
      tableInfo.put("username",result2.get("username"));
      tableInfo.put("createtime",result2.get("starttime"));
      tableInfo.put("lastuptime",result2.get("endtime"));
      tableInfo.put("joins","");
      tableInfo.put("percent","Stage-2 map = 100%,  reduce = 100%");
      tableInfo.put("resultkb",result2.get("resultkb"));
      tableInfo.put("download_uuid","");
      tableInfo.put("copy_uuid",uuid);
    }
  }
  tableInfo.put("memo",String.valueOf(memo));
  if (tableInfo == null || tableInfo.isEmpty()) {
    jsonObj.put("code","0");
    jsonObj.put("message","???????????????");
  }
 else   if (tableInfo.get("status").equals("INDEXING")) {
    jsonObj.put("code","0");
    jsonObj.put("message","??????????????????????????????");
    return jsonObj.toString();
  }
 else {
    JSONArray list=new JSONArray();
    for (    String username : mailto.split(",")) {
      JSONObject result=createByMap(tableInfo,uuid,username);
      list.put(result);
    }
    jsonObj.put("code","1");
    jsonObj.put("data",list);
  }
  if (callback != null && callback.length() > 0) {
    return callback + "(" + jsonObj.toString()+ ")";
  }
 else {
    return jsonObj.toString();
  }
}
