{
  String joins="";
  if (moduleName != null && moduleName.length() > 0) {
    joins=" and joins like '%" + moduleName + ":%' ";
  }
  SimpleDateFormat fmt=new SimpleDateFormat("yyyyMMdd");
  Map stormconf=Utils.readStormConfig();
  String connstr=(String)stormconf.get("higo.download.offline.conn");
  String uname=(String)stormconf.get("higo.download.offline.username");
  String passwd=(String)stormconf.get("higo.download.offline.passwd");
  MySqlConn m_fpsql=new MySqlConn(connstr,uname,passwd);
  Connection conn=m_fpsql.getConn();
  Statement stmt=conn.createStatement();
  String strsqlJoin="select count(*) as cnt" + " from adhoc_joins where username='" + username.replaceAll("'","") + "' and status<>'DEL' and (copy_uuid is null or copy_uuid='') "+ joins+ " ";
  StringBuffer bufferSql=new StringBuffer();
  if (type == 0) {
    String strsqlJoin2="select count(*) as cnt" + " from adhoc_joins where username='" + username.replaceAll("'","") + "' and status<>'DEL' and (copy_uuid is not null and copy_uuid<>'')   "+ joins+ "  ";
    String strsqlDownload="select count(*) as cnt" + " from adhoc_download where username='" + username.replaceAll("'","") + "' and status<>'DEL' ";
    bufferSql.append("select sum(cnt) as cnt");
    bufferSql.append(" from (" + strsqlJoin + " union "+ strsqlDownload+ " union "+ strsqlJoin2+ ") tmp  limit 10 ");
  }
  if (type == 1) {
    bufferSql.append(strsqlJoin + " and status='INDEX' and resultkb<=512000  order by createtime desc limit 10 ");
  }
  String sql=bufferSql.toString();
  ResultSet res=stmt.executeQuery(sql);
  HashMap<String,String> rtn=new HashMap<String,String>();
  rtn.put("_exehql",sql);
  while (res.next()) {
    rtn.put("cnt",String.valueOf(res.getInt("cnt")));
  }
  m_fpsql.close();
  return rtn;
}
