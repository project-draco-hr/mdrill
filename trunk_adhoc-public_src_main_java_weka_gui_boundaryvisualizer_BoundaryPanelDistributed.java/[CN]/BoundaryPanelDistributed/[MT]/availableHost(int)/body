{
  if (hostNum >= 0) {
    if (m_remoteHostFailureCounts[hostNum] < MAX_FAILURES) {
      m_remoteHostsQueue.push(new Integer(hostNum));
    }
 else {
      notifyListeners(false,true,false,"Max failures exceeded for host " + ((String)m_remoteHosts.elementAt(hostNum)) + ". Removed from host list.");
      m_removedHosts++;
    }
  }
  if (m_failedCount == (MAX_FAILURES * m_remoteHosts.size())) {
    m_plottingAborted=true;
    notifyListeners(false,true,true,"Plotting aborted! Max failures " + "exceeded on all remote hosts.");
    return;
  }
  if (m_subExpQueue.size() == 0 && (m_remoteHosts.size() == (m_remoteHostsQueue.size() + m_removedHosts))) {
    if (m_plotTrainingData) {
      plotTrainingData();
    }
    notifyListeners(false,true,true,"Plotting completed successfully.");
    return;
  }
  if (checkForAllFailedHosts()) {
    return;
  }
  if (m_plottingAborted && (m_remoteHostsQueue.size() + m_removedHosts) == m_remoteHosts.size()) {
    notifyListeners(false,true,true,"Plotting aborted. All remote tasks " + "finished.");
  }
  if (!m_subExpQueue.empty() && !m_plottingAborted) {
    if (!m_remoteHostsQueue.empty()) {
      int availHost, waitingTask;
      try {
        availHost=((Integer)m_remoteHostsQueue.pop()).intValue();
        waitingTask=((Integer)m_subExpQueue.pop()).intValue();
        launchNext(waitingTask,availHost);
      }
 catch (      Exception ex) {
        ex.printStackTrace();
      }
    }
  }
}
