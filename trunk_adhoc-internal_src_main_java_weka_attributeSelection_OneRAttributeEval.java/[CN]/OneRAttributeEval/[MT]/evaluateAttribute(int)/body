{
  int[] featArray=new int[2];
  double errorRate;
  Evaluation o_Evaluation;
  Remove delTransform=new Remove();
  delTransform.setInvertSelection(true);
  Instances trainCopy=new Instances(m_trainInstances);
  featArray[0]=attribute;
  featArray[1]=trainCopy.classIndex();
  delTransform.setAttributeIndicesArray(featArray);
  delTransform.setInputFormat(trainCopy);
  trainCopy=Filter.useFilter(trainCopy,delTransform);
  o_Evaluation=new Evaluation(trainCopy);
  String[] oneROpts={"-B","" + getMinimumBucketSize()};
  Classifier oneR=AbstractClassifier.forName("weka.classifiers.rules.OneR",oneROpts);
  if (m_evalUsingTrainingData) {
    oneR.buildClassifier(trainCopy);
    o_Evaluation.evaluateModel(oneR,trainCopy);
  }
 else {
    o_Evaluation.crossValidateModel(oneR,trainCopy,m_folds,new Random(m_randomSeed));
  }
  errorRate=o_Evaluation.errorRate();
  return (1 - errorRate) * 100.0;
}
