{
  int seed=1, folds=10;
  String foldsString, seedString, searchName;
  String classString;
  String searchClassName;
  String[] searchOptions=null;
  ASSearch searchMethod=null;
  boolean doCrossVal=false;
  int classIndex=-1;
  boolean helpRequested=false;
  AttributeSelection trainSelector=new AttributeSelection();
  try {
    if (Utils.getFlag('h',options)) {
      helpRequested=true;
    }
    if (train.classIndex() != -1)     classIndex=train.classIndex() + 1;
    classString=Utils.getOption('c',options);
    if (classString.length() != 0) {
      if (classString.equals("first")) {
        classIndex=1;
      }
 else       if (classString.equals("last")) {
        classIndex=train.numAttributes();
      }
 else {
        classIndex=Integer.parseInt(classString);
      }
    }
    if ((classIndex != -1) && ((classIndex == 0) || (classIndex > train.numAttributes()))) {
      throw new Exception("Class index out of range.");
    }
    if (classIndex != -1) {
      train.setClassIndex(classIndex - 1);
    }
 else {
    }
    foldsString=Utils.getOption('x',options);
    if (foldsString.length() != 0) {
      folds=Integer.parseInt(foldsString);
      doCrossVal=true;
    }
    trainSelector.setFolds(folds);
    trainSelector.setXval(doCrossVal);
    seedString=Utils.getOption('n',options);
    if (seedString.length() != 0) {
      seed=Integer.parseInt(seedString);
    }
    trainSelector.setSeed(seed);
    searchName=Utils.getOption('s',options);
    if ((searchName.length() == 0) && (!(ASEvaluator instanceof AttributeEvaluator))) {
      throw new Exception("No search method given.");
    }
    if (searchName.length() != 0) {
      searchName=searchName.trim();
      int breakLoc=searchName.indexOf(' ');
      searchClassName=searchName;
      String searchOptionsString="";
      if (breakLoc != -1) {
        searchClassName=searchName.substring(0,breakLoc);
        searchOptionsString=searchName.substring(breakLoc).trim();
        searchOptions=Utils.splitOptions(searchOptionsString);
      }
    }
 else {
      try {
        searchClassName=new String("weka.attributeSelection.Ranker");
        searchMethod=(ASSearch)Class.forName(searchClassName).newInstance();
      }
 catch (      Exception e) {
        throw new Exception("Can't create Ranker object");
      }
    }
    if (searchMethod == null) {
      searchMethod=ASSearch.forName(searchClassName,searchOptions);
    }
    trainSelector.setSearch(searchMethod);
  }
 catch (  Exception e) {
    throw new Exception('\n' + e.getMessage() + makeOptionString(ASEvaluator,searchMethod));
  }
  try {
    if (ASEvaluator instanceof OptionHandler) {
      ((OptionHandler)ASEvaluator).setOptions(options);
    }
  }
 catch (  Exception e) {
    throw new Exception("\n" + e.getMessage() + makeOptionString(ASEvaluator,searchMethod));
  }
  try {
    Utils.checkForRemainingOptions(options);
  }
 catch (  Exception e) {
    throw new Exception('\n' + e.getMessage() + makeOptionString(ASEvaluator,searchMethod));
  }
  if (helpRequested) {
    System.out.println(makeOptionString(ASEvaluator,searchMethod));
    System.exit(0);
  }
  trainSelector.setEvaluator(ASEvaluator);
  trainSelector.SelectAttributes(train);
  return trainSelector.toResultsString();
}
