{
  int maxIndex=Utils.maxIndex(m_ClassDistribution);
  String classValue=m_Info.classAttribute().value(maxIndex);
  num++;
  if (m_Attribute == -1) {
    text.append("N" + Integer.toHexString(hashCode()) + " [label=\""+ num+ ": "+ classValue+ "\""+ "shape=box]\n");
  }
 else {
    text.append("N" + Integer.toHexString(hashCode()) + " [label=\""+ num+ ": "+ classValue+ "\"]\n");
    for (int i=0; i < m_Successors.length; i++) {
      text.append("N" + Integer.toHexString(hashCode()) + "->"+ "N"+ Integer.toHexString(m_Successors[i].hashCode())+ " [label=\""+ m_Info.attribute(m_Attribute).name());
      if (m_Info.attribute(m_Attribute).isNumeric()) {
        if (i == 0) {
          text.append(" < " + Utils.doubleToString(m_SplitPoint,2));
        }
 else {
          text.append(" >= " + Utils.doubleToString(m_SplitPoint,2));
        }
      }
 else {
        text.append(" = " + m_Info.attribute(m_Attribute).value(i));
      }
      text.append("\"]\n");
      num=m_Successors[i].toGraph(text,num);
    }
  }
  return num;
}
