{
  if (info != null) {
    _groupResponse=new GroupResponse();
    int size=info.size();
    for (int i=0; i < size; i++) {
      String fieldName=info.getName(i);
      Object fieldGroups=info.getVal(i);
      SimpleOrderedMap<Object> simpleOrderedMap=(SimpleOrderedMap<Object>)fieldGroups;
      Object oMatches=simpleOrderedMap.get("matches");
      Object oNGroups=simpleOrderedMap.get("ngroups");
      Object oGroups=simpleOrderedMap.get("groups");
      Object queryCommand=simpleOrderedMap.get("doclist");
      if (oMatches == null) {
        continue;
      }
      if (oGroups != null) {
        Integer iMatches=(Integer)oMatches;
        ArrayList<Object> groupsArr=(ArrayList<Object>)oGroups;
        GroupCommand groupedCommand;
        if (oNGroups != null) {
          Integer iNGroups=(Integer)oNGroups;
          groupedCommand=new GroupCommand(fieldName,iMatches,iNGroups);
        }
 else {
          groupedCommand=new GroupCommand(fieldName,iMatches);
        }
        for (        Object oGrp : groupsArr) {
          SimpleOrderedMap grpMap=(SimpleOrderedMap)oGrp;
          Object sGroupValue=grpMap.get("groupValue");
          SolrDocumentList doclist=(SolrDocumentList)grpMap.get("doclist");
          Group group=new Group(sGroupValue != null ? sGroupValue.toString() : null,doclist);
          groupedCommand.add(group);
        }
        _groupResponse.add(groupedCommand);
      }
 else       if (queryCommand != null) {
        Integer iMatches=(Integer)oMatches;
        GroupCommand groupCommand=new GroupCommand(fieldName,iMatches);
        SolrDocumentList docList=(SolrDocumentList)queryCommand;
        groupCommand.add(new Group(fieldName,docList));
        _groupResponse.add(groupCommand);
      }
    }
  }
}
