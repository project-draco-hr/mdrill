{
  double[] tempClassDist2;
  double[] newDist;
  DecisionTableHashKey thekey;
  if (instA != null) {
    thekey=new DecisionTableHashKey(instA);
  }
 else {
    thekey=new DecisionTableHashKey(inst,inst.numAttributes(),false);
  }
  tempClassDist2=(double[])m_entries.get(thekey);
  if (tempClassDist2 == null) {
    if (m_classIsNominal) {
      newDist=new double[m_theInstances.classAttribute().numValues()];
      for (int i=0; i < m_theInstances.classAttribute().numValues(); i++) {
        newDist[i]=1.0;
      }
      newDist[(int)inst.classValue()]=inst.weight();
      m_entries.put(thekey,newDist);
    }
 else {
      newDist=new double[2];
      newDist[0]=inst.classValue() * inst.weight();
      newDist[1]=inst.weight();
      m_entries.put(thekey,newDist);
    }
  }
 else {
    if (m_classIsNominal) {
      tempClassDist2[(int)inst.classValue()]+=inst.weight();
      m_entries.put(thekey,tempClassDist2);
    }
 else {
      tempClassDist2[0]+=(inst.classValue() * inst.weight());
      tempClassDist2[1]+=inst.weight();
      m_entries.put(thekey,tempClassDist2);
    }
  }
}
