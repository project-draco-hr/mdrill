{
  if (isinit.get()) {
    if (FetchAdid2PidWireLess.times.incrementAndGet() < 1000) {
      return FetchAdid2PidWireLess.lastCache.get();
    }
    FetchAdid2PidWireLess.times.set(0);
    Long nowts=System.currentTimeMillis();
    if (nowts - FetchAdid2PidWireLess.ts.get() < FetchAdid2PidWireLess.maxdiff) {
      return FetchAdid2PidWireLess.lastCache.get();
    }
  }
  Long nowts=System.currentTimeMillis();
synchronized (FetchAdid2PidWireLess.lock) {
    if (isinit.get()) {
      if (nowts - FetchAdid2PidWireLess.ts.get() < FetchAdid2PidWireLess.maxdiff) {
        return FetchAdid2PidWireLess.lastCache.get();
      }
    }
    for (int j=0; j < 100; j++) {
      HashMap<String,String> rtn=new HashMap<String,String>();
      try {
        String strday=ColsDefine.formatDay.format(new Date(System.currentTimeMillis() - 1000l * 3600 * 24));
        String fqstr="[{\"thedate\":{\"operate\":1,\"value\":[\"" + strday + "\"]}}]";
        String jsonstr=MdrillService.result("ods_quanjing_416_wireless_pid",null,"0","10000",fqstr,null,"putin_date,pid,lwfrom,count(*)","putin_date,pid,lwfrom","count(*)","desc",null,null);
        LOG.info("fetch " + j + "@"+ jsonstr);
        JSONObject jsonObj=new JSONObject(jsonstr);
        if (!jsonObj.getString("code").equals("1")) {
          sleep();
          continue;
        }
        JSONArray list=jsonObj.getJSONObject("data").getJSONArray("docs");
        if (list.length() == 0) {
          sleep();
          continue;
        }
        for (int i=0; i < list.length(); i++) {
          try {
            JSONObject item=list.getJSONObject(i);
            String delivey_date=String.valueOf(item.get("putin_date"));
            String adid=String.valueOf(item.get("lwfrom"));
            String pid=String.valueOf(item.get("pid"));
            rtn.put(delivey_date + "@" + adid,pid);
          }
 catch (          Exception e) {
            LOG.info("fetch parse error",e);
          }
        }
        FetchAdid2PidWireLess.lastCache.set(rtn);
        FetchAdid2PidWireLess.ts.set(System.currentTimeMillis());
        isinit.set(true);
        LOG.info("fetch_result:" + FetchAdid2PidWireLess.lastCache.toString());
        return rtn;
      }
 catch (      Exception e) {
        LOG.info("fetch error",e);
        sleep();
      }
    }
  }
  return FetchAdid2PidWireLess.lastCache.get();
}
