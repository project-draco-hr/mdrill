{
  Container result=null;
  if (m_GUIType == GUI_MDI) {
    final ChildFrameMDI frame=new ChildFrameMDI(parent,title);
    frame.setLayout(layout);
    if (c != null)     frame.getContentPane().add(c,layoutConstraints);
    frame.setJMenuBar(menu);
    frame.pack();
    if ((width > -1) && (height > -1))     frame.setSize(width,height);
    frame.validate();
    if (listener) {
      frame.addInternalFrameListener(new InternalFrameAdapter(){
        public void internalFrameClosing(        InternalFrameEvent e){
          frame.dispose();
        }
      }
);
    }
    if (visible) {
      frame.setVisible(true);
      try {
        frame.setSelected(true);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    result=frame;
  }
 else   if (m_GUIType == GUI_SDI) {
    final ChildFrameSDI frame=new ChildFrameSDI(parent,title);
    frame.setLayout(layout);
    if (c != null)     frame.getContentPane().add(c,layoutConstraints);
    frame.setJMenuBar(menu);
    frame.pack();
    if ((width > -1) && (height > -1))     frame.setSize(width,height);
    frame.validate();
    int screenHeight=getGraphicsConfiguration().getBounds().height;
    int screenWidth=getGraphicsConfiguration().getBounds().width;
    frame.setLocation((screenWidth - frame.getBounds().width) / 2,(screenHeight - frame.getBounds().height) / 2);
    if (listener) {
      frame.addWindowListener(new WindowAdapter(){
        public void windowClosing(        WindowEvent e){
          frame.dispose();
        }
      }
);
    }
    if (visible)     frame.setVisible(true);
    result=frame;
  }
  return result;
}
