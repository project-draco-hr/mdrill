{
  Instance result;
  int i;
  double val;
  double factor;
  result=(Instance)instance.copy();
  if (m_Decimals > -1)   factor=StrictMath.pow(10,m_Decimals);
 else   factor=1;
  for (i=0; i < result.numAttributes(); i++) {
    if (!result.attribute(i).isNumeric())     continue;
    if (!m_Cols.isInRange(i))     continue;
    if ((result.classIndex() == i) && (!m_IncludeClass))     continue;
    if (result.value(i) < m_MinThreshold) {
      if (getDebug())       System.out.println("Too small: " + result.value(i) + " -> "+ m_MinDefault);
      result.setValue(i,m_MinDefault);
    }
 else     if (result.value(i) > m_MaxThreshold) {
      if (getDebug())       System.out.println("Too big: " + result.value(i) + " -> "+ m_MaxDefault);
      result.setValue(i,m_MaxDefault);
    }
 else     if ((result.value(i) - m_CloseTo < m_CloseToTolerance) && (m_CloseTo - result.value(i) < m_CloseToTolerance) && (result.value(i) != m_CloseTo)) {
      if (getDebug())       System.out.println("Too close: " + result.value(i) + " -> "+ m_CloseToDefault);
      result.setValue(i,m_CloseToDefault);
    }
    if (m_Decimals > -1) {
      val=result.value(i);
      val=StrictMath.round(val * factor) / factor;
      result.setValue(i,val);
    }
  }
  return result;
}
