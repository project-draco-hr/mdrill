{
  String tmpStr;
  tmpStr=Utils.getOption("min",options);
  if (tmpStr.length() != 0)   setMinThreshold(Double.parseDouble(tmpStr));
 else   setMinThreshold(-Double.MAX_VALUE);
  tmpStr=Utils.getOption("min-default",options);
  if (tmpStr.length() != 0)   setMinDefault(Double.parseDouble(tmpStr));
 else   setMinDefault(-Double.MAX_VALUE);
  tmpStr=Utils.getOption("max",options);
  if (tmpStr.length() != 0)   setMaxThreshold(Double.parseDouble(tmpStr));
 else   setMaxThreshold(Double.MAX_VALUE);
  tmpStr=Utils.getOption("max-default",options);
  if (tmpStr.length() != 0)   setMaxDefault(Double.parseDouble(tmpStr));
 else   setMaxDefault(Double.MAX_VALUE);
  tmpStr=Utils.getOption("closeto",options);
  if (tmpStr.length() != 0)   setCloseTo(Double.parseDouble(tmpStr));
 else   setCloseTo(0);
  tmpStr=Utils.getOption("closeto-default",options);
  if (tmpStr.length() != 0)   setCloseToDefault(Double.parseDouble(tmpStr));
 else   setCloseToDefault(0);
  tmpStr=Utils.getOption("closeto-tolerance",options);
  if (tmpStr.length() != 0)   setCloseToTolerance(Double.parseDouble(tmpStr));
 else   setCloseToTolerance(1E-6);
  tmpStr=Utils.getOption("R",options);
  if (tmpStr.length() != 0)   setAttributeIndices(tmpStr);
 else   setAttributeIndices("first-last");
  setInvertSelection(Utils.getFlag("V",options));
  setIncludeClass(Utils.getFlag("include-class",options));
  tmpStr=Utils.getOption("decimals",options);
  if (tmpStr.length() != 0)   setDecimals(Integer.parseInt(tmpStr));
 else   setDecimals(-1);
  super.setOptions(options);
}
