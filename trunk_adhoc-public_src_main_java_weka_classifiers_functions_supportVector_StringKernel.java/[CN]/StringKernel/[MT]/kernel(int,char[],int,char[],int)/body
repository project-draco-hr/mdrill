{
  if (Math.min(endIndexS + 1,endIndexT + 1) < n)   return getReturnValue(n);
  double result=0;
  for (int iS=endIndexS; iS > n - 2; iS--) {
    double buf=0;
    char x=s[iS];
    for (int j=0; j <= endIndexT; j++) {
      if (t[j] == x) {
        buf+=kernelHelper(n - 1,s,iS - 1,t,j - 1);
      }
    }
    result+=buf * m_powersOflambda[2];
  }
  return result;
}
