{
  int i=(int)(index >> 6);
  final int subIndex;
  long word;
  if (i >= wlen) {
    i=wlen - 1;
    if (i < 0)     return -1;
    subIndex=63;
    word=bits[i];
  }
 else {
    if (i < 0)     return -1;
    subIndex=(int)index & 0x3f;
    word=(bits[i] << (63 - subIndex));
  }
  if (word != 0) {
    return (((long)i) << 6) + subIndex - Long.numberOfLeadingZeros(word);
  }
  while (--i >= 0) {
    word=bits[i];
    if (word != 0) {
      return (((long)i) << 6) + 63 - Long.numberOfLeadingZeros(word);
    }
  }
  return -1;
}
