{
  double sumForColumn, sumForRow, total=0, columnEntropy=0, rowEntropy=0, entropyConditionedOnRows=0, infoGain=0;
  for (int i=0; i < matrix[0].length; i++) {
    sumForColumn=0;
    for (int j=0; j < matrix.length; j++) {
      sumForColumn+=matrix[j][i];
    }
    columnEntropy+=lnFunc(sumForColumn);
    total+=sumForColumn;
  }
  columnEntropy-=lnFunc(total);
  for (int i=0; i < matrix.length; i++) {
    sumForRow=0;
    for (int j=0; j < matrix[0].length; j++) {
      sumForRow+=matrix[i][j];
      entropyConditionedOnRows+=lnFunc(matrix[i][j]);
    }
    rowEntropy+=lnFunc(sumForRow);
  }
  entropyConditionedOnRows-=rowEntropy;
  rowEntropy-=lnFunc(total);
  infoGain=columnEntropy - entropyConditionedOnRows;
  if (Utils.eq(columnEntropy,0) || Utils.eq(rowEntropy,0))   return 0;
  return 2.0 * (infoGain / (columnEntropy + rowEntropy));
}
