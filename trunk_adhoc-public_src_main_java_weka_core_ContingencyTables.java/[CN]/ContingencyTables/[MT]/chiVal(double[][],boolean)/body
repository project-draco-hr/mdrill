{
  int df, nrows, ncols, row, col;
  double[] rtotal, ctotal;
  double expect=0, chival=0, n=0;
  boolean yates=true;
  nrows=matrix.length;
  ncols=matrix[0].length;
  rtotal=new double[nrows];
  ctotal=new double[ncols];
  for (row=0; row < nrows; row++) {
    for (col=0; col < ncols; col++) {
      rtotal[row]+=matrix[row][col];
      ctotal[col]+=matrix[row][col];
      n+=matrix[row][col];
    }
  }
  df=(nrows - 1) * (ncols - 1);
  if ((df > 1) || (!useYates)) {
    yates=false;
  }
 else   if (df <= 0) {
    return 0;
  }
  chival=0.0;
  for (row=0; row < nrows; row++) {
    if (Utils.gr(rtotal[row],0)) {
      for (col=0; col < ncols; col++) {
        if (Utils.gr(ctotal[col],0)) {
          expect=(ctotal[col] * rtotal[row]) / n;
          chival+=chiCell(matrix[row][col],expect,yates);
        }
      }
    }
  }
  return chival;
}
