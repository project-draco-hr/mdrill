{
  m_nodes=new FastVector();
  int nNodes=nodes.size();
  m_att=new Attribute[nNodes];
  m_CPT=new Estimator[nNodes][];
  m_ParentSet=new ParentSet[nNodes];
  m_nPosX=new int[nNodes];
  m_nPosY=new int[nNodes];
  m_deleteArcActions=new FastVector();
  for (int iNode=0; iNode < nodes.size(); iNode++) {
    int nTargetNode=(Integer)nodes.elementAt(iNode);
    m_nodes.addElement(nTargetNode);
    m_att[iNode]=m_Instances.attribute(nTargetNode);
    try {
      SerializedObject so=new SerializedObject(m_Distributions[nTargetNode]);
      m_CPT[iNode]=(Estimator[])so.getObject();
      ;
      so=new SerializedObject(m_ParentSets[nTargetNode]);
      m_ParentSet[iNode]=(ParentSet)so.getObject();
    }
 catch (    Exception e) {
      e.printStackTrace();
    }
    m_nPosX[iNode]=getPositionX(nTargetNode);
    m_nPosY[iNode]=getPositionY(nTargetNode);
    for (int iNode2=0; iNode2 < getNrOfNodes(); iNode2++) {
      if (!nodes.contains(iNode2) && m_ParentSets[iNode2].contains(nTargetNode)) {
        m_deleteArcActions.addElement(new DeleteArcAction(nTargetNode,iNode2));
      }
    }
  }
}
