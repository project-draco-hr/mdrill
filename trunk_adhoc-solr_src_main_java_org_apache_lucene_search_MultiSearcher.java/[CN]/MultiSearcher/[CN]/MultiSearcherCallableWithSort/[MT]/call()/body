{
  final TopFieldDocs docs=searchable.search(weight,filter,nDocs,sort);
  for (int j=0; j < docs.fields.length; j++) {
    if (docs.fields[j].getType() == SortField.DOC) {
      for (int j2=0; j2 < docs.scoreDocs.length; j2++) {
        FieldDoc fd=(FieldDoc)docs.scoreDocs[j2];
        fd.fields[j]=Integer.valueOf(((Integer)fd.fields[j]).intValue() + starts[i]);
      }
      break;
    }
  }
  lock.lock();
  try {
    hq.setFields(docs.fields);
  }
  finally {
    lock.unlock();
  }
  final ScoreDoc[] scoreDocs=docs.scoreDocs;
  for (int j=0; j < scoreDocs.length; j++) {
    final FieldDoc fieldDoc=(FieldDoc)scoreDocs[j];
    fieldDoc.doc+=starts[i];
    lock.lock();
    try {
      if (fieldDoc == hq.insertWithOverflow(fieldDoc))       break;
    }
  finally {
      lock.unlock();
    }
  }
  return docs;
}
