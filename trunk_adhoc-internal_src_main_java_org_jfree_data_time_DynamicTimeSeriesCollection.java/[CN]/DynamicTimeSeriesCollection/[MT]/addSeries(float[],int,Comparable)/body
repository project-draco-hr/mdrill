{
  invalidateRangeInfo();
  int i;
  if (values == null) {
    throw new IllegalArgumentException("TimeSeriesDataset.addSeries(): " + "cannot add null array of values.");
  }
  if (seriesNumber >= this.valueHistory.length) {
    throw new IllegalArgumentException("TimeSeriesDataset.addSeries(): " + "cannot add more series than specified in c'tor");
  }
  if (this.valueHistory[seriesNumber] == null) {
    this.valueHistory[seriesNumber]=new ValueSequence(this.historyCount);
    this.seriesCount++;
  }
  int srcLength=values.length;
  int copyLength=this.historyCount;
  boolean fillNeeded=false;
  if (srcLength < this.historyCount) {
    fillNeeded=true;
    copyLength=srcLength;
  }
  for (i=0; i < copyLength; i++) {
    this.valueHistory[seriesNumber].enterData(i,values[i]);
  }
  if (fillNeeded) {
    for (i=copyLength; i < this.historyCount; i++) {
      this.valueHistory[seriesNumber].enterData(i,0.0f);
    }
  }
  if (seriesKey != null) {
    this.seriesKeys[seriesNumber]=seriesKey;
  }
  fireSeriesChanged();
}
