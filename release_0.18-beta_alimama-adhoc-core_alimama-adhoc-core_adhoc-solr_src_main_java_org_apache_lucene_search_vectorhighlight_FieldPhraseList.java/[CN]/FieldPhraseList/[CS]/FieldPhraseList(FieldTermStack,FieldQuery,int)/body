{
  final String field=fieldTermStack.getFieldName();
  LinkedList<TermInfo> phraseCandidate=new LinkedList<TermInfo>();
  QueryPhraseMap currMap=null;
  QueryPhraseMap nextMap=null;
  while (!fieldTermStack.isEmpty() && (phraseList.size() < phraseLimit)) {
    phraseCandidate.clear();
    TermInfo ti=fieldTermStack.pop();
    currMap=fieldQuery.getFieldTermMap(field,ti.getText());
    if (currMap == null)     continue;
    phraseCandidate.add(ti);
    while (true) {
      ti=fieldTermStack.pop();
      nextMap=null;
      if (ti != null)       nextMap=currMap.getTermMap(ti.getText());
      if (ti == null || nextMap == null) {
        if (ti != null)         fieldTermStack.push(ti);
        if (currMap.isValidTermOrPhrase(phraseCandidate)) {
          addIfNoOverlap(new WeightedPhraseInfo(phraseCandidate,currMap.getBoost(),currMap.getTermOrPhraseNumber()));
        }
 else {
          while (phraseCandidate.size() > 1) {
            fieldTermStack.push(phraseCandidate.removeLast());
            currMap=fieldQuery.searchPhrase(field,phraseCandidate);
            if (currMap != null) {
              addIfNoOverlap(new WeightedPhraseInfo(phraseCandidate,currMap.getBoost(),currMap.getTermOrPhraseNumber()));
              break;
            }
          }
        }
        break;
      }
 else {
        phraseCandidate.add(ti);
        currMap=nextMap;
      }
    }
  }
}
