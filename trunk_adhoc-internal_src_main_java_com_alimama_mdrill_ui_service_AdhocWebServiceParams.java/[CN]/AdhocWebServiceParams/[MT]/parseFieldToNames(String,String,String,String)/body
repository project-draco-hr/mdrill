{
  HashMap<String,ArrayList<String>> fieldToName=new HashMap<String,ArrayList<String>>();
  ArrayList<String> groupFields=WebServiceParams.groupFields(groupby);
  ArrayList<String> showFields=WebServiceParams.showHiveFields(fl);
  HigoAdhocJoinParams[] joins=AdhocWebServiceParams.parseJoinsHive(leftjoin,null);
  String daycols=AdhocWebServiceParams.parseDayCols("dt",groupFields,showFields);
  ArrayList<String> fieldlist=new ArrayList<String>();
  if (joins.length <= 0) {
    for (    String field : groupFields) {
      fieldlist.add(field);
    }
    for (    String field : showFields) {
      if (!groupFields.contains(field)) {
        fieldlist.add(field);
      }
    }
  }
 else {
    for (    String field : groupFields) {
      fieldlist.add(field);
    }
    for (    String field : showFields) {
      StateField showfield=WebServiceParams.parseStat(field);
      if (!groupFields.contains(showfield.realField)) {
        if (!showfield.isstat) {
          fieldlist.add(field);
        }
      }
    }
    for (int i=0; i < joins.length; i++) {
      HigoAdhocJoinParams jp=joins[i];
      for (      String field : jp.fl) {
        fieldlist.add(jp.tablename + "." + field);
      }
    }
    for (    String field : showFields) {
      StateField showfield=WebServiceParams.parseStat(field);
      if (!groupFields.contains(showfield.realField)) {
        if (showfield.isstat) {
          fieldlist.add(field);
        }
      }
    }
  }
  ArrayList<String> fieldNamelist=new ArrayList<String>();
  String[] pcols=params == null ? new String[0] : new String(daycols + params.replaceAll("???????????????","").replaceAll("???.*$","")).split(",");
  for (  String s : pcols) {
    if (!AdhocOfflineService.isStatFields(s)) {
      fieldNamelist.add(s);
    }
  }
  for (  String s : pcols) {
    if (AdhocOfflineService.isStatFields(s)) {
      fieldNamelist.add(s);
    }
  }
  fieldToName.put("field",fieldlist);
  fieldToName.put("namelist",fieldNamelist);
  return fieldToName;
}
