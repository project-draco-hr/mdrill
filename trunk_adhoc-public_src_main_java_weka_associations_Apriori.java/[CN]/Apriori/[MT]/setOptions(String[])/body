{
  resetOptions();
  String numRulesString=Utils.getOption('N',options), minConfidenceString=Utils.getOption('C',options), deltaString=Utils.getOption('D',options), maxSupportString=Utils.getOption('U',options), minSupportString=Utils.getOption('M',options), significanceLevelString=Utils.getOption('S',options), classIndexString=Utils.getOption('c',options);
  String metricTypeString=Utils.getOption('T',options);
  if (metricTypeString.length() != 0) {
    setMetricType(new SelectedTag(Integer.parseInt(metricTypeString),TAGS_SELECTION));
  }
  if (numRulesString.length() != 0) {
    m_numRules=Integer.parseInt(numRulesString);
  }
  if (classIndexString.length() != 0) {
    if (classIndexString.equalsIgnoreCase("last")) {
      m_classIndex=-1;
    }
 else     if (classIndexString.equalsIgnoreCase("first")) {
      m_classIndex=0;
    }
 else {
      m_classIndex=Integer.parseInt(classIndexString);
    }
  }
  if (minConfidenceString.length() != 0) {
    m_minMetric=(new Double(minConfidenceString)).doubleValue();
  }
  if (deltaString.length() != 0) {
    m_delta=(new Double(deltaString)).doubleValue();
  }
  if (maxSupportString.length() != 0) {
    setUpperBoundMinSupport((new Double(maxSupportString)).doubleValue());
  }
  if (minSupportString.length() != 0) {
    m_lowerBoundMinSupport=(new Double(minSupportString)).doubleValue();
  }
  if (significanceLevelString.length() != 0) {
    m_significanceLevel=(new Double(significanceLevelString)).doubleValue();
  }
  m_outputItemSets=Utils.getFlag('I',options);
  m_car=Utils.getFlag('A',options);
  m_verbose=Utils.getFlag('V',options);
  m_treatZeroAsMissing=Utils.getFlag('Z',options);
  setRemoveAllMissingCols(Utils.getFlag('R',options));
}
