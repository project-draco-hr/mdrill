{
  reset();
  super.setOptions(options);
  String lossString=Utils.getOption('F',options);
  if (lossString.length() != 0) {
    setLossFunction(new SelectedTag(Integer.parseInt(lossString),TAGS_SELECTION));
  }
  String lambdaString=Utils.getOption('R',options);
  if (lambdaString.length() > 0) {
    setLambda(Double.parseDouble(lambdaString));
  }
  String learningRateString=Utils.getOption('L',options);
  if (learningRateString.length() > 0) {
    setLearningRate(Double.parseDouble(learningRateString));
  }
  String epochsString=Utils.getOption("E",options);
  if (epochsString.length() > 0) {
    setEpochs(Integer.parseInt(epochsString));
  }
  setUseWordFrequencies(Utils.getFlag("W",options));
  String pruneFreqS=Utils.getOption("P",options);
  if (pruneFreqS.length() > 0) {
    setPeriodicPruning(Integer.parseInt(pruneFreqS));
  }
  String minFreq=Utils.getOption("M",options);
  if (minFreq.length() > 0) {
    setMinWordFrequency(Double.parseDouble(minFreq));
  }
  String normFreqS=Utils.getOption("norm",options);
  if (normFreqS.length() > 0) {
    setNorm(Double.parseDouble(normFreqS));
  }
  String lnormFreqS=Utils.getOption("lnorm",options);
  if (lnormFreqS.length() > 0) {
    setLNorm(Double.parseDouble(lnormFreqS));
  }
  setLowercaseTokens(Utils.getFlag("lowercase",options));
  setUseStopList(Utils.getFlag("S",options));
  String stopwordsS=Utils.getOption("stopwords",options);
  if (stopwordsS.length() > 0) {
    setStopwords(new File(stopwordsS));
  }
 else {
    setStopwords(null);
  }
  String tokenizerString=Utils.getOption("tokenizer",options);
  if (tokenizerString.length() == 0) {
    setTokenizer(new WordTokenizer());
  }
 else {
    String[] tokenizerSpec=Utils.splitOptions(tokenizerString);
    if (tokenizerSpec.length == 0)     throw new Exception("Invalid tokenizer specification string");
    String tokenizerName=tokenizerSpec[0];
    tokenizerSpec[0]="";
    Tokenizer tokenizer=(Tokenizer)Class.forName(tokenizerName).newInstance();
    if (tokenizer instanceof OptionHandler)     ((OptionHandler)tokenizer).setOptions(tokenizerSpec);
    setTokenizer(tokenizer);
  }
  String stemmerString=Utils.getOption("stemmer",options);
  if (stemmerString.length() == 0) {
    setStemmer(null);
  }
 else {
    String[] stemmerSpec=Utils.splitOptions(stemmerString);
    if (stemmerSpec.length == 0)     throw new Exception("Invalid stemmer specification string");
    String stemmerName=stemmerSpec[0];
    stemmerSpec[0]="";
    Stemmer stemmer=(Stemmer)Class.forName(stemmerName).newInstance();
    if (stemmer instanceof OptionHandler)     ((OptionHandler)stemmer).setOptions(stemmerSpec);
    setStemmer(stemmer);
  }
}
