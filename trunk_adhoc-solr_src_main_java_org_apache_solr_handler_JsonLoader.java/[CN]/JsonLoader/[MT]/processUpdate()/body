{
  int ev=parser.nextEvent();
  while (ev != JSONParser.EOF) {
switch (ev) {
case JSONParser.ARRAY_START:
      handleAdds();
    break;
case JSONParser.STRING:
  if (parser.wasKey()) {
    String v=parser.getString();
    if (v.equals(XmlUpdateRequestHandler.ADD)) {
      int ev2=parser.nextEvent();
      if (ev2 == JSONParser.OBJECT_START) {
        processor.processAdd(parseAdd());
      }
 else       if (ev2 == JSONParser.ARRAY_START) {
        handleAdds();
      }
 else {
        assertEvent(ev2,JSONParser.OBJECT_START);
      }
    }
 else     if (v.equals(XmlUpdateRequestHandler.COMMIT)) {
      CommitUpdateCommand cmd=new CommitUpdateCommand(false);
      cmd.waitFlush=cmd.waitSearcher=true;
      parseCommitOptions(cmd);
      processor.processCommit(cmd);
    }
 else     if (v.equals(XmlUpdateRequestHandler.OPTIMIZE)) {
      CommitUpdateCommand cmd=new CommitUpdateCommand(true);
      cmd.waitFlush=cmd.waitSearcher=true;
      parseCommitOptions(cmd);
      processor.processCommit(cmd);
    }
 else     if (v.equals(XmlUpdateRequestHandler.DELETE)) {
      processor.processDelete(parseDelete());
    }
 else     if (v.equals(XmlUpdateRequestHandler.ROLLBACK)) {
      processor.processRollback(parseRollback());
    }
 else {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Unknown command: " + v + " ["+ parser.getPosition()+ "]");
    }
    break;
  }
case JSONParser.LONG:
case JSONParser.NUMBER:
case JSONParser.BIGNUMBER:
case JSONParser.BOOLEAN:
case JSONParser.NULL:
log.info("can't have a value here! " + JSONParser.getEventString(ev) + " "+ parser.getPosition());
case JSONParser.OBJECT_START:
case JSONParser.OBJECT_END:
case JSONParser.ARRAY_END:
break;
default :
log.info("Noggit UNKNOWN_EVENT_ID:" + ev);
break;
}
ev=parser.nextEvent();
}
}
