{
  if (text == null || text.equals("")) {
    return null;
  }
  final float[] textAdj=deriveTextBoundsAnchorOffsets(g2,text,textAnchor);
  if (logger.isDebugEnabled()) {
    logger.debug("TextBoundsAnchorOffsets = " + textAdj[0] + ", "+ textAdj[1]);
  }
  final float[] rotateAdj=deriveRotationAnchorOffsets(g2,text,rotationAnchor);
  if (logger.isDebugEnabled()) {
    logger.debug("RotationAnchorOffsets = " + rotateAdj[0] + ", "+ rotateAdj[1]);
  }
  final Shape result=calculateRotatedStringBounds(text,g2,x + textAdj[0],y + textAdj[1],angle,x + textAdj[0] + rotateAdj[0],y + textAdj[1] + rotateAdj[1]);
  return result;
}
