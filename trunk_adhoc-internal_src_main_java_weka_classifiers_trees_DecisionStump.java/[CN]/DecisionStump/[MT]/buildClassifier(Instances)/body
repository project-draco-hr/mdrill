{
  double bestVal=Double.MAX_VALUE, currVal;
  double bestPoint=-Double.MAX_VALUE;
  int bestAtt=-1, numClasses;
  getCapabilities().testWithFail(instances);
  instances=new Instances(instances);
  instances.deleteWithMissingClass();
  if (instances.numAttributes() == 1) {
    System.err.println("Cannot build model (only class attribute present in data!), " + "using ZeroR model instead!");
    m_ZeroR=new weka.classifiers.rules.ZeroR();
    m_ZeroR.buildClassifier(instances);
    return;
  }
 else {
    m_ZeroR=null;
  }
  double[][] bestDist=new double[3][instances.numClasses()];
  m_Instances=new Instances(instances);
  if (m_Instances.classAttribute().isNominal()) {
    numClasses=m_Instances.numClasses();
  }
 else {
    numClasses=1;
  }
  boolean first=true;
  for (int i=0; i < m_Instances.numAttributes(); i++) {
    if (i != m_Instances.classIndex()) {
      m_Distribution=new double[3][numClasses];
      if (m_Instances.attribute(i).isNominal()) {
        currVal=findSplitNominal(i);
      }
 else {
        currVal=findSplitNumeric(i);
      }
      if ((first) || (currVal < bestVal)) {
        bestVal=currVal;
        bestAtt=i;
        bestPoint=m_SplitPoint;
        for (int j=0; j < 3; j++) {
          System.arraycopy(m_Distribution[j],0,bestDist[j],0,numClasses);
        }
      }
      first=false;
    }
  }
  m_AttIndex=bestAtt;
  m_SplitPoint=bestPoint;
  m_Distribution=bestDist;
  if (m_Instances.classAttribute().isNominal()) {
    for (int i=0; i < m_Distribution.length; i++) {
      double sumCounts=Utils.sum(m_Distribution[i]);
      if (sumCounts == 0) {
        System.arraycopy(m_Distribution[2],0,m_Distribution[i],0,m_Distribution[2].length);
        Utils.normalize(m_Distribution[i]);
      }
 else {
        Utils.normalize(m_Distribution[i],sumCounts);
      }
    }
  }
  m_Instances=new Instances(m_Instances,0);
}
