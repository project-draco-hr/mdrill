{
  String stormroot=StormConfig.supervisor_stormdist_root(conf,topologyId);
  String stormjar=StormConfig.supervisor_stormjar_path(stormroot);
  Map stormConf=StormConfig.read_supervisor_storm_conf(conf,topologyId);
  String[] classpath=(new String(StormUtils.current_classpath() + ":" + stormjar)).split(":");
  String execute=(String)stormConf.get("worker.classpath.exclude");
  ArrayList<String> finalclasspath=new ArrayList<String>();
  for (  String s : classpath) {
    if (execute == null || !s.matches(execute)) {
      finalclasspath.add(s);
    }
  }
  StringBuffer classpathBuffer=new StringBuffer();
  String joinchar="";
  for (  String s : finalclasspath) {
    classpathBuffer.append(joinchar);
    classpathBuffer.append(s);
    joinchar=":";
  }
  String childopts="";
  if (conf.get(Config.WORKER_CHILDOPTS) != null) {
    childopts="" + conf.get(Config.WORKER_CHILDOPTS);
  }
  if (conf.get(Config.WORKER_CHILDOPTS + "." + port) != null) {
    childopts="" + conf.get(Config.WORKER_CHILDOPTS + "." + port);
  }
  if (stormConf.get(Config.TOPOLOGY_WORKER_CHILDOPTS) != null) {
    childopts=" " + stormConf.get(Config.TOPOLOGY_WORKER_CHILDOPTS);
  }
  if (stormConf.get(Config.TOPOLOGY_WORKER_CHILDOPTS + "." + port) != null) {
    childopts=" " + stormConf.get(Config.TOPOLOGY_WORKER_CHILDOPTS + "." + port);
  }
  String stormhome=System.getProperty("storm.home");
  if (stormhome == null) {
    stormhome=".";
  }
  childopts=childopts.replace("%ID%",port.toString());
  childopts=childopts.replaceAll("%port%",port.toString());
  childopts=childopts.replaceAll("%storm.home%",stormhome);
  String logFileName="worker-" + port + ".log";
  StringBuilder commandSB=new StringBuilder();
  commandSB.append("java -server ");
  commandSB.append(childopts);
  commandSB.append(" -Djava.library.path=");
  commandSB.append((String)conf.get(Config.JAVA_LIBRARY_PATH));
  commandSB.append(" -Dlogfile.name=");
  commandSB.append(logFileName);
  commandSB.append(" -Dstorm.home=");
  commandSB.append(stormhome);
  commandSB.append(" -Dlog4j.configuration=storm.log.properties");
  commandSB.append(" -cp ");
  commandSB.append(classpathBuffer.toString());
  commandSB.append(" com.alipay.bluewhale.core.work.Worker ");
  commandSB.append(topologyId);
  commandSB.append(" ");
  commandSB.append(supervisorId);
  commandSB.append(" ");
  commandSB.append(port);
  commandSB.append(" ");
  commandSB.append(workerId);
  LOG.info("Launching worker with command: " + commandSB);
  Map<String,String> environment=new HashMap<String,String>();
  environment.put("LD_LIBRARY_PATH",(String)conf.get(Config.JAVA_LIBRARY_PATH));
  try {
    ArrayList<String> killlist=findByJavaPort.findProcess(port);
    if (killlist != null) {
      for (int i=0; i < 3; i++) {
        for (        String pid : killlist) {
          StormUtils.ensure_process_killed(Integer.parseInt(pid));
        }
        Thread.sleep(300);
      }
    }
  }
 catch (  Throwable e) {
    LOG.error("killlist",e);
  }
  StormUtils.launch_work_process(commandSB.toString(),environment);
}
