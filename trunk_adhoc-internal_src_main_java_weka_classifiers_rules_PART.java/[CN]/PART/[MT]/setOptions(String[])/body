{
  m_unpruned=Utils.getFlag('U',options);
  m_reducedErrorPruning=Utils.getFlag('R',options);
  m_binarySplits=Utils.getFlag('B',options);
  m_useMDLcorrection=!Utils.getFlag('J',options);
  String confidenceString=Utils.getOption('C',options);
  if (confidenceString.length() != 0) {
    if (m_reducedErrorPruning) {
      throw new Exception("Setting CF doesn't make sense " + "for reduced error pruning.");
    }
 else {
      m_CF=(new Float(confidenceString)).floatValue();
      if ((m_CF <= 0) || (m_CF >= 1)) {
        throw new Exception("CF has to be greater than zero and smaller than one!");
      }
    }
  }
 else {
    m_CF=0.25f;
  }
  String numFoldsString=Utils.getOption('N',options);
  if (numFoldsString.length() != 0) {
    if (!m_reducedErrorPruning) {
      throw new Exception("Setting the number of folds" + " does only make sense for" + " reduced error pruning.");
    }
 else {
      m_numFolds=Integer.parseInt(numFoldsString);
    }
  }
 else {
    m_numFolds=3;
  }
  String minNumString=Utils.getOption('M',options);
  if (minNumString.length() != 0) {
    m_minNumObj=Integer.parseInt(minNumString);
  }
 else {
    m_minNumObj=2;
  }
  String seedString=Utils.getOption('Q',options);
  if (seedString.length() != 0) {
    m_Seed=Integer.parseInt(seedString);
  }
 else {
    m_Seed=1;
  }
}
