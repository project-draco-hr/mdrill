{
  if (m_sInitalBIFFile != null && !m_sInitalBIFFile.equals("")) {
    BIFReader initialNet=new BIFReader().processFile(m_sInitalBIFFile);
    for (int iAttribute=0; iAttribute < instances.numAttributes(); iAttribute++) {
      int iNode=initialNet.getNode(bayesNet.getNodeName(iAttribute));
      for (int iParent=0; iParent < initialNet.getNrOfParents(iAttribute); iParent++) {
        String sParent=initialNet.getNodeName(initialNet.getParent(iNode,iParent));
        int nParent=0;
        while (nParent < bayesNet.getNrOfNodes() && !bayesNet.getNodeName(nParent).equals(sParent)) {
          nParent++;
        }
        if (nParent < bayesNet.getNrOfNodes()) {
          bayesNet.getParentSet(iAttribute).addParent(nParent,instances);
        }
 else {
          System.err.println("Warning: Node " + sParent + " is ignored. It is found in initial network but not in data set.");
        }
      }
    }
  }
 else   if (m_bInitAsNaiveBayes) {
    int iClass=instances.classIndex();
    for (int iAttribute=0; iAttribute < instances.numAttributes(); iAttribute++) {
      if (iAttribute != iClass) {
        bayesNet.getParentSet(iAttribute).addParent(iClass,instances);
      }
    }
  }
  search(bayesNet,instances);
  if (m_bMarkovBlanketClassifier) {
    doMarkovBlanketCorrection(bayesNet,instances);
  }
}
