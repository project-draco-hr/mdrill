{
  m_ElementEditor=null;
  m_ListModel=null;
  removeAll();
  if ((o != null) && (o.getClass().isArray())) {
    Class elementClass=o.getClass().getComponentType();
    PropertyEditor editor=PropertyEditorManager.findEditor(elementClass);
    Component view=null;
    ListCellRenderer lcr=new DefaultListCellRenderer();
    if (editor != null) {
      if (editor instanceof GenericObjectEditor) {
        ((GenericObjectEditor)editor).setClassType(elementClass);
      }
      if (Array.getLength(o) > 0) {
        editor.setValue(makeCopy(Array.get(o,0)));
      }
 else {
        if (editor instanceof GenericObjectEditor) {
          ((GenericObjectEditor)editor).setDefaultValue();
        }
 else {
          try {
            if (editor instanceof FileEditor) {
              editor.setValue(new java.io.File("-NONE-"));
            }
 else {
              editor.setValue(elementClass.newInstance());
            }
          }
 catch (          Exception ex) {
            m_ElementEditor=null;
            System.err.println(ex.getMessage());
            add(m_Label,BorderLayout.CENTER);
            m_Support.firePropertyChange("",null,null);
            validate();
            return;
          }
        }
      }
      if (editor.isPaintable() && editor.supportsCustomEditor()) {
        view=new PropertyPanel(editor);
        lcr=new EditorListCellRenderer(editor.getClass(),elementClass);
      }
 else       if (editor.getTags() != null) {
        view=new PropertyValueSelector(editor);
      }
 else       if (editor.getAsText() != null) {
        view=new PropertyText(editor);
      }
    }
    if (view == null) {
      System.err.println("No property editor for class: " + elementClass.getName());
    }
 else {
      m_ElementEditor=editor;
      try {
        m_Editor=editor.getClass().newInstance();
      }
 catch (      InstantiationException e1) {
        e1.printStackTrace();
      }
catch (      IllegalAccessException e1) {
        e1.printStackTrace();
      }
      m_ListModel=new DefaultListModel();
      m_ElementClass=elementClass;
      for (int i=0; i < Array.getLength(o); i++) {
        m_ListModel.addElement(Array.get(o,i));
      }
      m_ElementList.setCellRenderer(lcr);
      m_ElementList.setModel(m_ListModel);
      if (m_ListModel.getSize() > 0) {
        m_ElementList.setSelectedIndex(0);
      }
 else {
        m_DeleteBut.setEnabled(false);
        m_EditBut.setEnabled(false);
      }
      m_UpBut.setEnabled(JListHelper.canMoveDown(m_ElementList));
      m_DownBut.setEnabled(JListHelper.canMoveDown(m_ElementList));
      JPanel panel=new JPanel();
      panel.setLayout(new BorderLayout());
      panel.add(view,BorderLayout.CENTER);
      panel.add(m_AddBut,BorderLayout.EAST);
      add(panel,BorderLayout.NORTH);
      add(new JScrollPane(m_ElementList),BorderLayout.CENTER);
      JPanel panel2=new JPanel();
      panel2.setLayout(new GridLayout(1,4));
      panel2.add(m_DeleteBut);
      panel2.add(m_EditBut);
      panel2.add(m_UpBut);
      panel2.add(m_DownBut);
      add(panel2,BorderLayout.SOUTH);
      m_ElementEditor.addPropertyChangeListener(new PropertyChangeListener(){
        public void propertyChange(        PropertyChangeEvent e){
          repaint();
        }
      }
);
    }
  }
  if (m_ElementEditor == null) {
    add(m_Label,BorderLayout.CENTER);
  }
  m_Support.firePropertyChange("",null,null);
  validate();
}
