{
  List<LookupResult> res=new ArrayList<LookupResult>();
  List<String> list;
  int count=onlyMorePopular ? num * 2 : num;
  if (usePrefix) {
    list=trie.matchPrefix(key,count);
  }
 else {
    list=trie.matchAlmost(key,count);
  }
  if (list == null || list.size() == 0) {
    return res;
  }
  int maxCnt=Math.min(num,list.size());
  if (onlyMorePopular) {
    LookupPriorityQueue queue=new LookupPriorityQueue(num);
    for (    String s : list) {
      float freq=(Float)trie.get(s);
      queue.insertWithOverflow(new LookupResult(s,freq));
    }
    for (    LookupResult lr : queue.getResults()) {
      res.add(lr);
    }
  }
 else {
    for (int i=0; i < maxCnt; i++) {
      String s=list.get(i);
      float freq=(Float)trie.get(s);
      res.add(new LookupResult(s,freq));
    }
  }
  return res;
}
