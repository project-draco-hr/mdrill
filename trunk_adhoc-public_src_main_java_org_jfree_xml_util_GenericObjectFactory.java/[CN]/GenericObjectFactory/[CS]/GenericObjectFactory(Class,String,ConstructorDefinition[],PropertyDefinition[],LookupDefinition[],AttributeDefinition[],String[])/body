{
  if (c == null) {
    throw new NullPointerException("BaseClass cannot be null.");
  }
  this.baseClass=c;
  this.registerName=registerName;
  this.propertyInfos=new HashMap();
  this.propertyValues=new HashMap();
  this.constructorDefinitions=constructors;
  this.propertyDefinitions=propertyDefinitions;
  this.lookupDefinitions=lookupDefinitions;
  this.attributeDefinitions=attributeDefinitions;
  this.orderedPropertyNames=orderedPropertyNames;
  try {
    final BeanInfo chartBeaninfo=Introspector.getBeanInfo(c,Object.class);
    final PropertyDescriptor[] pd=chartBeaninfo.getPropertyDescriptors();
    for (int i=0; i < pd.length; i++) {
      this.propertyInfos.put(pd[i].getName(),pd[i]);
    }
  }
 catch (  IntrospectionException ioe) {
    throw new ObjectDescriptionException("This is an ugly solution right now ... dirty hack attack");
  }
}
