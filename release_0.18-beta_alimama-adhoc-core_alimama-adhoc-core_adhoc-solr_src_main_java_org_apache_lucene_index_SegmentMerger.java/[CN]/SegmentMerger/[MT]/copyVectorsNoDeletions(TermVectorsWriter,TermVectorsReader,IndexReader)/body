{
  final int maxDoc=reader.maxDoc();
  if (matchingVectorsReader != null) {
    int docCount=0;
    while (docCount < maxDoc) {
      int len=Math.min(MAX_RAW_MERGE_DOCS,maxDoc - docCount);
      matchingVectorsReader.rawDocs(rawDocLengths,rawDocLengths2,docCount,len);
      termVectorsWriter.addRawDocuments(matchingVectorsReader,rawDocLengths,rawDocLengths2,len);
      docCount+=len;
      checkAbort.work(300 * len);
    }
  }
 else {
    for (int docNum=0; docNum < maxDoc; docNum++) {
      TermFreqVector[] vectors=reader.getTermFreqVectors(docNum);
      termVectorsWriter.addAllDocVectors(vectors);
      checkAbort.work(300);
    }
  }
}
