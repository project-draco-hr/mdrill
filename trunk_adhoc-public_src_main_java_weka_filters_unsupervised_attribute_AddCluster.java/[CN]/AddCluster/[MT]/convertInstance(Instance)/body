{
  Instance original, processed;
  original=instance;
  double[] instanceVals=new double[instance.numAttributes() + 1];
  for (int j=0; j < instance.numAttributes(); j++) {
    instanceVals[j]=original.value(j);
  }
  Instance filteredI=null;
  if (m_removeAttributes != null) {
    m_removeAttributes.input(instance);
    filteredI=m_removeAttributes.output();
  }
 else {
    filteredI=instance;
  }
  try {
    instanceVals[instance.numAttributes()]=m_ActualClusterer.clusterInstance(filteredI);
  }
 catch (  Exception e) {
    instanceVals[instance.numAttributes()]=Utils.missingValue();
  }
  if (original instanceof SparseInstance) {
    processed=new SparseInstance(original.weight(),instanceVals);
  }
 else {
    processed=new DenseInstance(original.weight(),instanceVals);
  }
  processed.setDataset(instance.dataset());
  copyValues(processed,false,instance.dataset(),getOutputFormat());
  processed.setDataset(getOutputFormat());
  push(processed);
}
