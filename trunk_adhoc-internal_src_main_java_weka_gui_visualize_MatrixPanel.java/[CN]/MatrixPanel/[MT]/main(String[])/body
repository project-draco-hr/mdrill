{
  final JFrame jf=new JFrame("Weka Explorer: MatrixPanel");
  final JButton setBt=new JButton("Set Instances");
  Instances data=null;
  try {
    if (args.length == 1)     data=new Instances(new BufferedReader(new FileReader(args[0])));
 else {
      System.out.println("Usage: MatrixPanel <arff file>");
      System.exit(-1);
    }
  }
 catch (  IOException ex) {
    ex.printStackTrace();
    System.exit(-1);
  }
  final MatrixPanel mp=new MatrixPanel();
  mp.setInstances(data);
  setBt.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      JFileChooser chooser=new JFileChooser(new java.io.File(System.getProperty("user.dir")));
      ExtensionFileFilter myfilter=new ExtensionFileFilter("arff","Arff data files");
      chooser.setFileFilter(myfilter);
      int returnVal=chooser.showOpenDialog(jf);
      if (returnVal == JFileChooser.APPROVE_OPTION) {
        try {
          System.out.println("You chose to open this file: " + chooser.getSelectedFile().getName());
          Instances in=new Instances(new FileReader(chooser.getSelectedFile().getAbsolutePath()));
          mp.setInstances(in);
        }
 catch (        Exception ex) {
          ex.printStackTrace();
        }
      }
    }
  }
);
  jf.getContentPane().setLayout(new BorderLayout());
  jf.getContentPane().add(mp,BorderLayout.CENTER);
  jf.getContentPane().add(setBt,BorderLayout.SOUTH);
  jf.getContentPane().setFont(new java.awt.Font("SansSerif",java.awt.Font.PLAIN,11));
  jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  jf.setSize(800,600);
  jf.setVisible(true);
  jf.repaint();
}
