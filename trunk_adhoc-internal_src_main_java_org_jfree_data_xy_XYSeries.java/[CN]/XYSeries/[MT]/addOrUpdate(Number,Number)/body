{
  if (x == null) {
    throw new IllegalArgumentException("Null 'x' argument.");
  }
  if (this.allowDuplicateXValues) {
    add(x,y);
    return null;
  }
  XYDataItem overwritten=null;
  int index=indexOf(x);
  if (index >= 0) {
    XYDataItem existing=(XYDataItem)this.data.get(index);
    try {
      overwritten=(XYDataItem)existing.clone();
    }
 catch (    CloneNotSupportedException e) {
      throw new SeriesException("Couldn't clone XYDataItem!");
    }
    boolean iterate=false;
    double oldY=existing.getYValue();
    if (!Double.isNaN(oldY)) {
      iterate=oldY <= this.minY || oldY >= this.maxY;
    }
    existing.setY(y);
    if (iterate) {
      findBoundsByIteration();
    }
 else     if (y != null) {
      double yy=y.doubleValue();
      this.minY=minIgnoreNaN(this.minY,yy);
      this.maxY=minIgnoreNaN(this.maxY,yy);
    }
  }
 else {
    XYDataItem item=new XYDataItem(x,y);
    if (this.autoSort) {
      this.data.add(-index - 1,item);
    }
 else {
      this.data.add(item);
    }
    updateBoundsForAddedItem(item);
    if (getItemCount() > this.maximumItemCount) {
      XYDataItem removed=(XYDataItem)this.data.remove(0);
      updateBoundsForRemovedItem(removed);
    }
  }
  fireSeriesChanged();
  return overwritten;
}
