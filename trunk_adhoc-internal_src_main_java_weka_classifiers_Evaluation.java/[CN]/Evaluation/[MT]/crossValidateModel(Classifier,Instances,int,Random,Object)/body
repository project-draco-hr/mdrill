{
  data=new Instances(data);
  data.randomize(random);
  if (data.classAttribute().isNominal()) {
    data.stratify(numFolds);
  }
  AbstractOutput classificationOutput=null;
  if (forPredictionsPrinting.length > 0) {
    classificationOutput=(AbstractOutput)forPredictionsPrinting[0];
    classificationOutput.setHeader(data);
    classificationOutput.printHeader();
  }
  for (int i=0; i < numFolds; i++) {
    Instances train=data.trainCV(numFolds,i,random);
    setPriors(train);
    Classifier copiedClassifier=AbstractClassifier.makeCopy(classifier);
    copiedClassifier.buildClassifier(train);
    Instances test=data.testCV(numFolds,i);
    evaluateModel(copiedClassifier,test,forPredictionsPrinting);
  }
  m_NumFolds=numFolds;
  if (classificationOutput != null)   classificationOutput.printFooter();
}
