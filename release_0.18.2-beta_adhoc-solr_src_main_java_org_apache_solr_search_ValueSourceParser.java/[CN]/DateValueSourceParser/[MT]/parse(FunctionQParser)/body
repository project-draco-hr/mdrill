{
  String first=fp.parseArg();
  String second=fp.parseArg();
  if (first == null)   first="NOW";
  Date d1=getDate(fp,first);
  ValueSource v1=d1 == null ? getValueSource(fp,first) : null;
  Date d2=getDate(fp,second);
  ValueSource v2=d2 == null ? getValueSource(fp,second) : null;
  final long ms1=(d1 == null) ? 0 : d1.getTime();
  final long ms2=(d2 == null) ? 0 : d2.getTime();
  if (d1 != null && v2 == null) {
    return new LongConstValueSource(ms1 - ms2);
  }
  if (v1 != null && v2 == null && d2 == null) {
    return v1;
  }
  if (d1 != null && v2 != null)   return new DualFloatFunction(new LongConstValueSource(ms1),v2){
    @Override protected String name(){
      return "ms";
    }
    @Override protected float func(    int doc,    DocValues aVals,    DocValues bVals){
      return ms1 - bVals.longVal(doc);
    }
  }
;
  if (v1 != null && d2 != null)   return new DualFloatFunction(v1,new LongConstValueSource(ms2)){
    @Override protected String name(){
      return "ms";
    }
    @Override protected float func(    int doc,    DocValues aVals,    DocValues bVals){
      return aVals.longVal(doc) - ms2;
    }
  }
;
  if (v1 != null && v2 != null)   return new DualFloatFunction(v1,v2){
    @Override protected String name(){
      return "ms";
    }
    @Override protected float func(    int doc,    DocValues aVals,    DocValues bVals){
      return aVals.longVal(doc) - bVals.longVal(doc);
    }
  }
;
  return null;
}
