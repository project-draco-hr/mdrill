{
  queryStr=query(queryStr);
  ArrayList<String> fqList=new ArrayList<String>();
  JSONArray jsonStr=new JSONArray(queryStr.trim());
  for (int j=0; j < jsonStr.length(); j++) {
    JSONObject obj=jsonStr.getJSONObject(j);
    if (obj.has("subQuery")) {
      String filterType="AND";
      if (obj.has("filter")) {
        filterType=obj.getString("filter").toUpperCase();
      }
      ArrayList<String> sublist=fqList(isnothedate,obj.getJSONArray("list").toString(),shard,fieldColumntypeMap);
      if (sublist.size() == 0) {
        continue;
      }
      if (sublist.size() == 1) {
        fqList.add(sublist.get(0));
      }
      StringBuffer buff=new StringBuffer();
      buff.append("(");
      String joinchar="";
      for (      String fq : sublist) {
        buff.append(joinchar);
        buff.append(fq);
        joinchar=" " + filterType + " ";
      }
      buff.append(")");
      fqList.add(buff.toString());
    }
 else {
      for (Iterator iter=obj.keys(); iter.hasNext(); ) {
        String field=(String)iter.next();
        if (isnothedate && "thedate".equals(field)) {
          continue;
        }
        JSONObject jsonStr2=obj.getJSONObject(field);
        int operate=Integer.parseInt(jsonStr2.getString("operate"));
        String valueList=parseFqValue(jsonStr2.getString("value"),operate);
        String fq=parseFqOperate(operate,field,valueList,shard,fieldColumntypeMap);
        if (fq != null) {
          fqList.add(fq);
        }
      }
    }
  }
  return fqList;
}
