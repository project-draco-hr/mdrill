{
  if (key.equals("thedate")) {
    value2=value2.replaceAll("-","");
  }
  String ft="string";
  if (fieldColumntypeMap != null && fieldColumntypeMap.containsKey(key)) {
    ft=fieldColumntypeMap.get(key);
  }
  boolean isdate=false;
  if (ft.equals("tdate") || ft.equals("date")) {
    isdate=true;
  }
switch (operate) {
case 1:
{
      if (isdate) {
        return key + ":" + TdateFormat.transformSolrMetacharactor(TdateFormat.ensureTdateForSearch(value2));
      }
      return key + ":" + TdateFormat.transformSolrMetacharactor(value2);
    }
case 2:
{
    if (isdate) {
      return "-" + key + ":"+ TdateFormat.transformSolrMetacharactor(TdateFormat.ensureTdateForSearch(value2));
    }
    return "-" + key + ":"+ TdateFormat.transformSolrMetacharactor(value2);
  }
case 3:
{
  if (isdate) {
    return key + ":[" + TdateFormat.ensureTdateForSearch(value2)+ " TO 2098-09-09T00:00:00Z]";
  }
  return key + ":[" + value2+ " TO *]";
}
case 4:
{
if (isdate) {
  return key + ":[* TO " + TdateFormat.ensureTdateForSearch(value2)+ "]";
}
return key + ":[* TO " + value2+ "]";
}
case 13:
{
if (isdate) {
return key + ":{" + TdateFormat.ensureTdateForSearch(value2)+ " TO 2098-09-09T00:00:00Z}";
}
return key + ":{" + value2+ " TO *}";
}
case 14:
{
if (isdate) {
return key + ":{* TO " + TdateFormat.ensureTdateForSearch(value2)+ "}";
}
return key + ":{* TO " + value2+ "}";
}
case 5:
case 6:
case 7:
case 8:
{
boolean isNotIn=(operate == 7 || operate == 8);
String[] listStrs=filterListStr(ft,value2.split(","));
if (listStrs.length > 20 && !isNotIn) {
return uploadInHdfs(listStrs,key,shard);
}
 else {
StringBuffer sb=new StringBuffer();
if (isNotIn) {
sb.append("-");
}
sb.append(key);
sb.append(":(");
for (String v : listStrs) {
sb.append(TdateFormat.transformSolrMetacharactorNoLike(v));
sb.append(" ");
}
sb.append(")");
return sb.toString();
}
}
case 9:
{
String[] listStrs=value2.split(",");
if (listStrs.length == 2 && listStrs[0] != null && listStrs[1] != null) {
if (listStrs[0].equals(listStrs[1])) {
if (isdate) {
return key + ":" + TdateFormat.transformSolrMetacharactor(TdateFormat.ensureTdateForSearch(listStrs[0]));
}
return key + ":" + TdateFormat.transformSolrMetacharactor(listStrs[0]);
}
 else {
if (isdate) {
return key + ":[" + TdateFormat.ensureTdateForSearch(listStrs[0])+ " TO "+ TdateFormat.ensureTdateForSearch(listStrs[1])+ "]";
}
return key + ":[" + listStrs[0]+ " TO "+ listStrs[1]+ "]";
}
}
break;
}
case 1000:
{
return value2;
}
}
return null;
}
