{
  StringBuffer line;
  int cInt;
  char c;
  int numAtt;
  ArrayList<Attribute> atts;
  int i;
  String relName;
  if (m_sourceReader == null)   throw new IOException("No source has been specified");
  if (m_structure == null) {
    m_Buffer=new Vector<double[]>();
    try {
      numAtt=0;
      line=new StringBuffer();
      while ((cInt=m_sourceReader.read()) != -1) {
        c=(char)cInt;
        if ((c == '\n') || (c == '\r')) {
          if (line.length() > 0) {
            m_Buffer.add(libsvmToArray(line.toString()));
            numAtt=determineNumAttributes(line.toString(),numAtt);
          }
          line=new StringBuffer();
        }
 else {
          line.append(c);
        }
      }
      if (line.length() != 0) {
        m_Buffer.add(libsvmToArray(line.toString()));
        numAtt=determineNumAttributes(line.toString(),numAtt);
      }
      atts=new ArrayList<Attribute>(numAtt);
      for (i=0; i < numAtt - 1; i++)       atts.add(new Attribute("att_" + (i + 1)));
      atts.add(new Attribute("class"));
      if (!m_URL.equals("http://"))       relName=m_URL;
 else       relName=m_File;
      m_structure=new Instances(relName,atts,0);
      m_structure.setClassIndex(m_structure.numAttributes() - 1);
    }
 catch (    Exception ex) {
      ex.printStackTrace();
      throw new IOException("Unable to determine structure as libsvm: " + ex);
    }
  }
  return new Instances(m_structure,0);
}
