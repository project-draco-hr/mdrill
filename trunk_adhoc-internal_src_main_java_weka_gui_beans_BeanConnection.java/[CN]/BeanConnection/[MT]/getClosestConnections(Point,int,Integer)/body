{
  int tabIndex=0;
  if (tab.length > 0) {
    tabIndex=tab[0].intValue();
  }
  Vector connections=TABBED_CONNECTIONS.get(tabIndex);
  Vector closestConnections=new Vector();
  for (int i=0; i < connections.size(); i++) {
    BeanConnection bc=(BeanConnection)connections.elementAt(i);
    BeanInstance source=bc.getSource();
    BeanInstance target=bc.getTarget();
    EventSetDescriptor srcEsd=bc.getSourceEventSetDescriptor();
    BeanVisual sourceVisual=(source.getBean() instanceof Visible) ? ((Visible)source.getBean()).getVisual() : null;
    BeanVisual targetVisual=(target.getBean() instanceof Visible) ? ((Visible)target.getBean()).getVisual() : null;
    if (sourceVisual != null && targetVisual != null) {
      Point bestSourcePt=sourceVisual.getClosestConnectorPoint(new Point((target.getX() + (target.getWidth() / 2)),(target.getY() + (target.getHeight() / 2))));
      Point bestTargetPt=targetVisual.getClosestConnectorPoint(new Point((source.getX() + (source.getWidth() / 2)),(source.getY() + (source.getHeight() / 2))));
      int minx=(int)Math.min(bestSourcePt.getX(),bestTargetPt.getX());
      int maxx=(int)Math.max(bestSourcePt.getX(),bestTargetPt.getX());
      int miny=(int)Math.min(bestSourcePt.getY(),bestTargetPt.getY());
      int maxy=(int)Math.max(bestSourcePt.getY(),bestTargetPt.getY());
      if (pt.getX() >= minx - delta && pt.getX() <= maxx + delta && pt.getY() >= miny - delta && pt.getY() <= maxy + delta) {
        double a=bestSourcePt.getY() - bestTargetPt.getY();
        double b=bestTargetPt.getX() - bestSourcePt.getX();
        double c=(bestSourcePt.getX() * bestTargetPt.getY()) - (bestTargetPt.getX() * bestSourcePt.getY());
        double distance=Math.abs((a * pt.getX()) + (b * pt.getY()) + c);
        distance/=Math.abs(Math.sqrt((a * a) + (b * b)));
        if (distance <= delta) {
          closestConnections.addElement(bc);
        }
      }
    }
  }
  return closestConnections;
}
