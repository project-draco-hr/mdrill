{
  String directoryPath=getDirectory().getAbsolutePath();
  Attribute classAtt=structure.classAttribute();
  if (m_filesByClass == null) {
    m_filesByClass=new ArrayList<LinkedList<String>>();
    for (int i=0; i < classAtt.numValues(); i++) {
      File classDir=new File(directoryPath + File.separator + classAtt.value(i));
      String[] files=classDir.list();
      LinkedList<String> classDocs=new LinkedList<String>();
      for (      String cd : files) {
        File txt=new File(directoryPath + File.separator + classAtt.value(i)+ File.separator+ cd);
        if (txt.isFile()) {
          classDocs.add(cd);
        }
      }
      m_filesByClass.add(classDocs);
    }
  }
  int count=0;
  LinkedList<String> classContents=m_filesByClass.get(m_lastClassDir);
  boolean found=(classContents.size() > 0);
  while (classContents.size() == 0) {
    m_lastClassDir++;
    count++;
    if (m_lastClassDir == structure.classAttribute().numValues()) {
      m_lastClassDir=0;
    }
    classContents=m_filesByClass.get(m_lastClassDir);
    if (classContents.size() > 0) {
      found=true;
      break;
    }
    if (count == structure.classAttribute().numValues()) {
      break;
    }
  }
  if (found) {
    String nextDoc=classContents.poll();
    File txt=new File(directoryPath + File.separator + classAtt.value(m_lastClassDir)+ File.separator+ nextDoc);
    BufferedReader is;
    if (m_charSet == null || m_charSet.length() == 0) {
      is=new BufferedReader(new InputStreamReader(new FileInputStream(txt)));
    }
 else {
      is=new BufferedReader(new InputStreamReader(new FileInputStream(txt),m_charSet));
    }
    StringBuffer txtStr=new StringBuffer();
    int c;
    while ((c=is.read()) != -1) {
      txtStr.append((char)c);
    }
    double[] newInst=null;
    if (m_OutputFilename)     newInst=new double[3];
 else     newInst=new double[2];
    if (getRetainStringValues()) {
      newInst[0]=(double)structure.attribute(0).addStringValue(txtStr.toString());
    }
 else {
      newInst[0]=0;
      structure.attribute(0).setStringValue(txtStr.toString());
    }
    if (m_OutputFilename) {
      if (getRetainStringValues()) {
        newInst[1]=(double)structure.attribute(1).addStringValue(txt.getAbsolutePath());
      }
 else {
        newInst[1]=0;
        structure.attribute(1).setStringValue(txt.getAbsolutePath());
      }
    }
    newInst[structure.classIndex()]=(double)m_lastClassDir;
    Instance inst=new DenseInstance(1.0,newInst);
    inst.setDataset(structure);
    is.close();
    m_lastClassDir++;
    if (m_lastClassDir == structure.classAttribute().numValues()) {
      m_lastClassDir=0;
    }
    return inst;
  }
 else {
    return null;
  }
}
