{
  if (forecaster != null) {
    TSLagMaker lagMaker=forecaster.getTSLagMaker();
    String selected=m_timeStampCombo.getSelectedItem().toString();
    if (!selected.equals("<Use an artificial time index>") && !selected.equals("<None>")) {
      lagMaker.setTimeStampField(selected);
    }
 else {
      lagMaker.setTimeStampField("");
    }
    if (selected.equals("<None>")) {
      lagMaker.setAdjustForTrends(false);
    }
 else {
      lagMaker.setAdjustForTrends(true);
    }
    if (m_periodicityCombo.getSelectedItem().toString().equals("<Detect automatically>") && (selected.equals("<Use an artificial time index>") && !m_advancedConfig.isUsingCustomLags())) {
      throw new Exception("Cannot automatically detect periodicity when using " + "an artificial time index.");
    }
    if (m_periodicityCombo.getSelectedItem().toString().equals("<Detect automatically>") && !selected.equals("<Use an artificial time index>") && !selected.equals("<None>")&& (!m_instances.attribute(selected).isDate() && !m_advancedConfig.isUsingCustomLags())) {
      throw new Exception("Cannot automatically detect periodicity when using " + "a non-date time stamp (select manually or use custom lags.");
    }
    lagMaker.setAddAMIndicator(false);
    lagMaker.setAddDayOfWeek(false);
    lagMaker.setAddMonthOfYear(false);
    lagMaker.setAddQuarterOfYear(false);
    lagMaker.setAddWeekendIndicator(false);
    if (!selected.equals("<None>")) {
      checkPeriodicity(forecaster);
    }
    if (m_computeConfidence.isSelected()) {
      forecaster.setCalculateConfIntervalsForForecasts(getHorizon());
      double confLevel=((SpinnerNumberModel)m_confidenceLevelSpinner.getModel()).getNumber().doubleValue();
      forecaster.setConfidenceLevel(confLevel / 100.0);
    }
 else {
      forecaster.setCalculateConfIntervalsForForecasts(0);
    }
    int[] selectedTargets=m_targetPanel.getSelectedAttributes();
    StringBuffer targetBuf=new StringBuffer();
    for (int i=0; i < selectedTargets.length; i++) {
      targetBuf.append(m_targetHeader.attribute(selectedTargets[i]).name()).append(",");
    }
    String temp=targetBuf.substring(0,targetBuf.lastIndexOf(","));
    if (temp.length() == 0) {
      throw new Exception("You must select some fields to forecast!");
    }
    forecaster.setFieldsToForecast(temp);
  }
}
