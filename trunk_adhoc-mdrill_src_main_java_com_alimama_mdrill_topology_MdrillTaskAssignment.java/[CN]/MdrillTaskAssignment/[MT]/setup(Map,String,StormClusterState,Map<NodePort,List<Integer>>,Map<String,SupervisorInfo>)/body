{
  LOG.info("higolog HigoTaskAssignment setup");
  this.topologyId=topologyId;
  this.zkCluster=zkCluster;
  porttype.setup(topology_conf);
  Integer fixassign=StormUtils.parseInt(topology_conf.get(HIGO_FIX_SHARDS));
  for (int i=1; i <= fixassign; i++) {
    String ass=String.valueOf(topology_conf.get(HIGO_FIX_SHARDS + "." + i));
    String[] host_ids=ass.split(":");
    if (host_ids.length >= 2) {
      String hostname=host_ids[0].trim();
      String[] ids=host_ids[1].split(",");
      for (      String tidIndex : ids) {
        ShardfixdMap.put(Integer.parseInt(tidIndex),hostname);
      }
    }
  }
  this.ms_name=String.valueOf(topology_conf.get(MS_NAME));
  this.shard_name=String.valueOf(topology_conf.get(SHARD_NAME));
  this.realtime_name=String.valueOf(topology_conf.get(REALTIME_NAME));
  this.supInfos=supInfos;
}
