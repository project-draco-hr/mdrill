{
  SolrCore.log.info("####UnInverted#### SegmentReader begin");
  this.field=field;
  if (this.field.indexOf("higoempty_") >= 0) {
    this.isNullField=true;
  }
  if (this.isNullField) {
    this.tnr=new TermNumReadNull();
    this.tnr.setUni(this);
    return;
  }
  long startTime=System.currentTimeMillis();
  FieldType schemaft=schema.getFieldType(field);
  String prefix=TrieField.getMainValuePrefix(schemaft);
  SchemaField sf=schema.getField(field);
  this.ft=sf.getType();
  this.isMultiValued=ft.isMultiValued();
  this.dataType=UnInvertedFieldUtils.getDataType(this.ft);
  this.tnr=UnInvertedFieldUtils.getReadInterface(this.isMultiValued);
  String key=LuceneUtils.crcKey(reader);
  this.dataType=UnInvertedFieldUtils.getDataType(this.ft);
  this.ti=new TermIndex(field,prefix);
  if (reader.isSupportQuick() && !this.isMultiValued && reader.getpos(this.field) != null && reader.getCount(this.field) != null) {
    TermIndex.QuickNumberedTermEnum te=ti.getEnumerator(reader,reader.getQuickTis(),reader.getpos(this.field),reader.getCount(this.field));
    this.setSingleValue(te,reader,key);
    te.close();
  }
 else {
    NumberedTermEnum te=ti.getEnumerator(reader);
    if (!this.isMultiValued) {
      this.setSingleValue(te,reader,key);
    }
 else {
      this.setMultyValue(te,reader,key);
    }
    numTermsInField=te.getTermNumber();
    te.close();
  }
  total_time=(int)(System.currentTimeMillis() - startTime);
  this.tnr.setUni(this);
  SolrCore.log.info("####UnInverted#### Create " + this.toString() + " "+ this.isMultiValued+ "@"+ key+ ",dataType="+ dataType+ ",");
}
