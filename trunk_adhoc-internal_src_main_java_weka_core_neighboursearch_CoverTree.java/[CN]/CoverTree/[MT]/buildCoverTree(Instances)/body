{
  if (insts.numInstances() == 0)   throw new Exception("CoverTree: Empty set of instances. Cannot build tree.");
  checkMissing(insts);
  if (m_EuclideanDistance == null)   m_DistanceFunction=m_EuclideanDistance=new EuclideanDistance(insts);
 else   m_EuclideanDistance.setInstances(insts);
  Stack<DistanceNode> point_set=new Stack<DistanceNode>();
  Stack<DistanceNode> consumed_set=new Stack<DistanceNode>();
  Instance point_p=insts.instance(0);
  int p_idx=0;
  double max_dist=-1, dist=0.0;
  Instance max_q=point_p;
  for (int i=1; i < insts.numInstances(); i++) {
    DistanceNode temp=new DistanceNode();
    temp.dist=new Stack<Double>();
    dist=Math.sqrt(m_DistanceFunction.distance(point_p,insts.instance(i),Double.POSITIVE_INFINITY));
    if (dist > max_dist) {
      max_dist=dist;
      max_q=insts.instance(i);
    }
    temp.dist.push(dist);
    temp.idx=i;
    point_set.push(temp);
  }
  max_dist=max_set(point_set);
  m_Root=batch_insert(p_idx,get_scale(max_dist),get_scale(max_dist),point_set,consumed_set);
}
