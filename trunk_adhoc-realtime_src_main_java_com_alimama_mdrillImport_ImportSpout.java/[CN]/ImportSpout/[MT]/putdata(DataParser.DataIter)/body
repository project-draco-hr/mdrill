{
  long ts=log.getTs();
  BoltStatKey key=new BoltStatKey(log.getGroup());
  BoltStatVal val=new BoltStatVal(log.getSum(),ts);
  BoltStatVal statval=nolockbuffer.get(key);
  this.status.ttInput++;
  if (statval == null) {
    nolockbuffer.put(key,val);
    this.status.groupCreate++;
  }
 else {
    statval.merger(val);
  }
  if ((this.status.ttInput % 1000 != 0)) {
    return false;
  }
  if (!this.timeoutCheck.istimeout() && nolockbuffer.size() < buffersize) {
    return false;
  }
  this.timeoutCheck.reset();
  HashMap<BoltStatKey,BoltStatVal> buffer=nolockbuffer;
  LOG.info(this.confPrefix + "####total:group=" + buffer.size()+ ",ts:"+ formatHour.format(new Date(ts))+ ",status:"+ this.status.toString());
  nolockbuffer=new HashMap<BoltStatKey,BoltStatVal>(this.intMapsize);
  int batch=1;
  for (  Entry<BoltStatKey,BoltStatVal> e : buffer.entrySet()) {
    batch++;
    BoltStatKey pkey=e.getKey();
    BoltStatVal pvalue=e.getValue();
    if (istanxpv) {
      if (pkey.list.length >= 3 && "mm_12229823_1573806_11174236".equals(pkey.list[2])) {
        LOG.info("yanniandebugspout:" + pkey.toString() + "==="+ pvalue.toString());
      }
    }
    List<Object> data=StormUtils.mk_list((Object)pkey,pvalue);
    collector.emit(data,SpoutUtils.uuid());
    if (batch % 50 == 0) {
      this.sleep(10);
    }
  }
  if (this.status.ttInput > 100000000) {
    this.status.reset();
  }
  return true;
}
