{
  int repeatsEnd=end;
  if (pp.position > repeatsEnd) {
    repeatsEnd=pp.position;
  }
  if (!hasRepeats) {
    return repeatsEnd;
  }
  int tpPos=tpPos(pp);
  for (PhrasePositions pp2=pp.nextRepeating; pp2 != null; pp2=pp2.nextRepeating) {
    while (tpPos(pp2) <= tpPos) {
      if (!pp2.nextPosition()) {
        return Integer.MIN_VALUE;
      }
    }
    tpPos=tpPos(pp2);
    if (pp2.position > repeatsEnd) {
      repeatsEnd=pp2.position;
    }
    if (pp2.position < pp.position) {
      pp.position=pp2.position;
    }
  }
  return repeatsEnd;
}
