{
  eatws();
  char delim=peekChar();
  if (!(delim == '\"' || delim == '\'')) {
    return null;
  }
  int val_start=++pos;
  StringBuilder sb=new StringBuilder();
  for (; ; ) {
    if (pos >= end) {
      throw new ParseException("Missing end quote for string at pos " + (val_start - 1) + " str='"+ val+ "'");
    }
    char ch=val.charAt(pos);
    if (ch == '\\') {
      pos++;
      if (pos >= end)       break;
      ch=val.charAt(pos);
switch (ch) {
case 'n':
        ch='\n';
      break;
case 't':
    ch='\t';
  break;
case 'r':
ch='\r';
break;
case 'b':
ch='\b';
break;
case 'f':
ch='\f';
break;
case 'u':
if (pos + 4 >= end) {
throw new ParseException("bad unicode escape \\uxxxx at pos" + (val_start - 1) + " str='"+ val+ "'");
}
ch=(char)Integer.parseInt(val.substring(pos + 1,pos + 5),16);
pos+=4;
break;
}
}
 else if (ch == delim) {
pos++;
break;
}
sb.append(ch);
pos++;
}
return sb.toString();
}
