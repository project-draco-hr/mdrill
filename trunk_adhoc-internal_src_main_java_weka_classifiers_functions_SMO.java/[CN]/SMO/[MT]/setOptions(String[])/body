{
  String tmpStr;
  String[] tmpOptions;
  setChecksTurnedOff(Utils.getFlag("no-checks",options));
  tmpStr=Utils.getOption('C',options);
  if (tmpStr.length() != 0)   setC(Double.parseDouble(tmpStr));
 else   setC(1.0);
  tmpStr=Utils.getOption('L',options);
  if (tmpStr.length() != 0)   setToleranceParameter(Double.parseDouble(tmpStr));
 else   setToleranceParameter(1.0e-3);
  tmpStr=Utils.getOption('P',options);
  if (tmpStr.length() != 0)   setEpsilon(Double.parseDouble(tmpStr));
 else   setEpsilon(1.0e-12);
  tmpStr=Utils.getOption('N',options);
  if (tmpStr.length() != 0)   setFilterType(new SelectedTag(Integer.parseInt(tmpStr),TAGS_FILTER));
 else   setFilterType(new SelectedTag(FILTER_NORMALIZE,TAGS_FILTER));
  setBuildLogisticModels(Utils.getFlag('M',options));
  tmpStr=Utils.getOption('V',options);
  if (tmpStr.length() != 0)   setNumFolds(Integer.parseInt(tmpStr));
 else   setNumFolds(-1);
  tmpStr=Utils.getOption('W',options);
  if (tmpStr.length() != 0)   setRandomSeed(Integer.parseInt(tmpStr));
 else   setRandomSeed(1);
  tmpStr=Utils.getOption('K',options);
  tmpOptions=Utils.splitOptions(tmpStr);
  if (tmpOptions.length != 0) {
    tmpStr=tmpOptions[0];
    tmpOptions[0]="";
    setKernel(Kernel.forName(tmpStr,tmpOptions));
  }
  super.setOptions(options);
}
