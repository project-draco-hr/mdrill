{
  if (item == null) {
    throw new IllegalArgumentException("Null 'item' argument.");
  }
  if (this.autoSort) {
    int index=Collections.binarySearch(this.data,item);
    if (index < 0) {
      this.data.add(-index - 1,item);
    }
 else {
      if (this.allowDuplicateXValues) {
        int size=this.data.size();
        while (index < size && item.compareTo(this.data.get(index)) == 0) {
          index++;
        }
        if (index < this.data.size()) {
          this.data.add(index,item);
        }
 else {
          this.data.add(item);
        }
      }
 else {
        throw new SeriesException("X-value already exists.");
      }
    }
  }
 else {
    if (!this.allowDuplicateXValues) {
      int index=indexOf(item.getX());
      if (index >= 0) {
        throw new SeriesException("X-value already exists.");
      }
    }
    this.data.add(item);
  }
  updateBoundsForAddedItem(item);
  if (getItemCount() > this.maximumItemCount) {
    XYDataItem removed=(XYDataItem)this.data.remove(0);
    updateBoundsForRemovedItem(removed);
  }
  if (notify) {
    fireSeriesChanged();
  }
}
