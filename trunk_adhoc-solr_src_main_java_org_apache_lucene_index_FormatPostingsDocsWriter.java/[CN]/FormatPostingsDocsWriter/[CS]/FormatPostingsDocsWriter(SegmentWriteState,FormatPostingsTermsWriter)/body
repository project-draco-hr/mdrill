{
  this.parent=parent;
  out=parent.parent.dir.createOutput(IndexFileNames.segmentFileName(parent.parent.segment,IndexFileNames.FREQ_EXTENSION));
  this.currentIsUseCompress=true;
  out.writeVInt(this.currentIsUseCompress ? 1 : 0);
  boolean success=false;
  try {
    totalNumDocs=parent.parent.totalNumDocs;
    skipInterval=parent.parent.termsOut.skipInterval;
    skipListWriter=parent.parent.skipListWriter;
    skipListWriter.setFreqOutput(out);
    posWriter=new FormatPostingsPositionsWriter(state,this);
    success=true;
  }
  finally {
    if (!success) {
      IOUtils.closeWhileHandlingException(out);
    }
  }
}
