{
  java_cup.runtime.Symbol CUP$Parser$result;
switch (CUP$Parser$act_num) {
case 42:
{
      Object RESULT=null;
      CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
    }
  return CUP$Parser$result;
case 41:
{
  Object RESULT=null;
  CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 40:
{
Object RESULT=null;
int sleft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int sright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
String s=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addArrayElement(s);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 39:
{
Object RESULT=null;
int dleft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int dright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
Double d=(Double)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addArrayElement(d);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 38:
{
Object RESULT=null;
int ileft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int iright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
Integer i=(Integer)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addArrayElement(i);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 37:
{
Object RESULT=null;
int bleft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int bright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
Boolean b=(Boolean)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addArrayElement(b);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 36:
{
Object RESULT=null;
parser.getStack().peek().addArrayElement(null);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("element",22,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 35:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("elements",21,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 34:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("elements",21,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 33:
{
Object RESULT=null;
parser.getStack().pop();
CUP$Parser$result=parser.getSymbolFactory().newSymbol("array_end",20,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 32:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("array_content",19,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 31:
{
Object RESULT=null;
JSONNode node=parser.getStack().peek().addArray(null);
parser.getStack().push(node);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("anon_array_start",18,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 30:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("anon_array",15,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 29:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("anon_array",15,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 28:
{
Object RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
JSONNode node=parser.getStack().peek().addArray(name);
parser.getStack().push(node);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("named_array_start",17,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 27:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("named_array",16,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 26:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("named_array",16,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 25:
{
Object RESULT=null;
parser.getStack().pop();
CUP$Parser$result=parser.getSymbolFactory().newSymbol("object_end",14,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 24:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("object_content",13,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 23:
{
Object RESULT=null;
JSONNode node=parser.getStack().peek().addObject(null);
parser.getStack().push(node);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("anon_object_start",12,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 22:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("anon_object",9,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 21:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("anon_object",9,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 20:
{
Object RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
JSONNode node=parser.getStack().peek().addObject(name);
parser.getStack().push(node);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("named_object_start",11,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 19:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("named_object",10,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 18:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("named_object",10,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 17:
{
String RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
int sleft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int sright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
String s=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addPrimitive(name,s);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("string",8,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 16:
{
Double RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
int dleft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int dright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
Double d=(Double)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addPrimitive(name,d);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("double",7,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 15:
{
Integer RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
int ileft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int iright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
Integer i=(Integer)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addPrimitive(name,i);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("integer",6,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 14:
{
Boolean RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
int bleft=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).left;
int bright=((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).right;
Boolean b=(Boolean)((java_cup.runtime.Symbol)CUP$Parser$stack.peek()).value;
parser.getStack().peek().addPrimitive(name,b);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("boolean",5,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 13:
{
Object RESULT=null;
int nameleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).left;
int nameright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).right;
String name=(String)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)).value;
parser.getStack().peek().addNull(name);
CUP$Parser$result=parser.getSymbolFactory().newSymbol("null",4,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 12:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("primitive",3,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 11:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("primitive",3,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 10:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("primitive",3,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 9:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("primitive",3,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 8:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("primitive",3,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 7:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("pair",2,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 6:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("pair",2,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 5:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("pair",2,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 4:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("pairs",1,((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 3:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("pairs",1,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 2:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("json",0,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 2)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
case 1:
{
Object RESULT=null;
int start_valleft=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)).left;
int start_valright=((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)).right;
Object start_val=(Object)((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)).value;
RESULT=start_val;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("$START",0,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
CUP$Parser$parser.done_parsing();
return CUP$Parser$result;
case 0:
{
Object RESULT=null;
CUP$Parser$result=parser.getSymbolFactory().newSymbol("json",0,((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top - 1)),((java_cup.runtime.Symbol)CUP$Parser$stack.peek()),RESULT);
}
return CUP$Parser$result;
default :
throw new Exception("Invalid action number found in internal parse table");
}
}
