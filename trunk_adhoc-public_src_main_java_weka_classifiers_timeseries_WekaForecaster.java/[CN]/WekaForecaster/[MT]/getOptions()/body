{
  ArrayList<String> options=new ArrayList<String>();
  options.add("-F");
  options.add(getFieldsToForecast());
  if (getOverlayFields() != null && getOverlayFields().length() > 0) {
    options.add("-O");
    options.add(getOverlayFields());
  }
  options.add("-L");
  options.add("" + m_lagMaker.getMinLag());
  options.add("-M");
  options.add("" + m_lagMaker.getMaxLag());
  if (m_lagMaker.getLagRange().length() > 0) {
    options.add("-R");
    options.add(m_lagMaker.getLagRange());
  }
  if (m_lagMaker.getAverageConsecutiveLongLags()) {
    options.add("-A");
  }
 else {
    options.add("-B");
    options.add("" + m_lagMaker.getAverageLagsAfter());
  }
  options.add("-C");
  options.add("" + m_lagMaker.getNumConsecutiveLongLagsToAverage());
  if (!m_lagMaker.getAdjustForTrends()) {
    options.add("-Z");
  }
  if (m_lagMaker.getAdjustForVariance()) {
    options.add("-V");
  }
  if (m_lagMaker.getTimeStampField() != null && m_lagMaker.getTimeStampField().length() > 0) {
    options.add("-G");
    options.add(m_lagMaker.getTimeStampField());
  }
  if (m_lagMaker.getAddAMIndicator()) {
    options.add("-am-pm");
  }
  if (m_lagMaker.getAddDayOfWeek()) {
    options.add("-dayofweek");
  }
  if (m_lagMaker.getAddDayOfMonth()) {
    options.add("-dayofmonth");
  }
  if (m_lagMaker.getAddWeekendIndicator()) {
    options.add("-weekend");
  }
  if (m_lagMaker.getAddMonthOfYear()) {
    options.add("-month");
  }
  if (m_lagMaker.getAddNumDaysInMonth()) {
    options.add("-numdaysinmonth");
  }
  if (m_lagMaker.getAddQuarterOfYear()) {
    options.add("-quarter");
  }
  Map<String,ArrayList<CustomPeriodicTest>> customPeriodics=m_lagMaker.getCustomPeriodics();
  if (customPeriodics != null && customPeriodics.keySet().size() > 0) {
    for (    String name : customPeriodics.keySet()) {
      List<CustomPeriodicTest> tests=customPeriodics.get(name);
      options.add("-custom");
      StringBuffer tempBuff=new StringBuffer();
      tempBuff.append("\"");
      for (int i=0; i < tests.size(); i++) {
        tempBuff.append(tests.get(i).toString());
        if (i < tests.size() - 1) {
          tempBuff.append("|");
        }
 else {
          tempBuff.append("\"");
        }
      }
      options.add(tempBuff.toString());
    }
  }
  if (m_lagMaker.getSkipEntries() != null && m_lagMaker.getSkipEntries().length() > 0) {
    options.add("-skip");
    options.add(m_lagMaker.getSkipEntries());
  }
  if (m_lagMaker.getPrimaryPeriodicFieldName() != null && m_lagMaker.getPrimaryPeriodicFieldName().length() > 0) {
    options.add("-periodic");
    options.add(m_lagMaker.getPrimaryPeriodicFieldName());
  }
  options.add("-conf");
  options.add("" + getCalculateConfIntervalsForForecasts());
  options.add("-P");
  options.add("" + getConfidenceLevel());
  options.add("-W");
  options.add(getForecasterSpec());
  return options.toArray(new String[1]);
}
