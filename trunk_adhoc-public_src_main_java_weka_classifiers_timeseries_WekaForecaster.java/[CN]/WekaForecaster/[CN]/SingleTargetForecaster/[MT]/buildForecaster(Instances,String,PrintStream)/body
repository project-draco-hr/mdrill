{
  if (m_targetForecaster == null) {
    throw new Exception("[SingleTargetForecaster] base classifier has" + " not been set!");
  }
  train=new Instances(train);
  m_classIndex=train.attribute(targetName).index();
  if (m_classIndex < 0) {
    throw new Exception("Can't find target field '" + targetName + "' in"+ "the data!");
  }
  if (!train.attribute(m_classIndex).isNumeric()) {
    throw new Exception("[SingleTargetForecaster] target '" + targetName + "' is not numeric!");
  }
  train.setClassIndex(m_classIndex);
  m_className=targetName;
  String otherTargets="";
  for (  String n : m_fieldsToForecast) {
    if (!n.equals(targetName)) {
      int i=train.attribute(n).index();
      if (i >= 0) {
        otherTargets+=(i + 1) + ",";
      }
    }
  }
  if (otherTargets.length() > 0) {
    otherTargets=otherTargets.substring(0,otherTargets.lastIndexOf(','));
    m_otherTargetRemover=new Remove();
    m_otherTargetRemover.setAttributeIndices(otherTargets);
    m_otherTargetRemover.setInputFormat(train);
    train=Filter.useFilter(train,m_otherTargetRemover);
  }
  for (  PrintStream p : progress) {
    p.println("Building forecaster for target: " + m_className);
  }
  m_targetForecaster.buildClassifier(train);
}
