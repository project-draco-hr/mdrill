{
  try {
    WekaPackageManager.loadPackages(false);
    if (WekaPackageManager.m_initialPackageLoadingInProcess) {
      return;
    }
    EDITOR_PROPERTIES=GenericPropertiesCreator.getGlobalOutputProperties();
    if (EDITOR_PROPERTIES == null) {
      GenericPropertiesCreator creator=new GenericPropertiesCreator();
      if (creator.useDynamic()) {
        try {
          creator.execute(false);
          EDITOR_PROPERTIES=creator.getOutputProperties();
        }
 catch (        Exception e) {
          JOptionPane.showMessageDialog(null,"Could not determine the properties for the generic object\n" + "editor. This exception was produced:\n" + e.toString(),"GenericObjectEditor",JOptionPane.ERROR_MESSAGE);
        }
      }
 else {
        try {
          EDITOR_PROPERTIES=Utils.readProperties(PROPERTY_FILE);
          java.util.Enumeration keys=(java.util.Enumeration)EDITOR_PROPERTIES.propertyNames();
          if (!keys.hasMoreElements()) {
            throw new Exception("Failed to read a property file for the " + "generic object editor");
          }
        }
 catch (        Exception ex) {
          JOptionPane.showMessageDialog(null,"Could not read a configuration file for the generic object\n" + "editor. An example file is included with the Weka distribution.\n" + "This file should be named \"" + PROPERTY_FILE + "\" and\n"+ "should be placed either in your user home (which is set\n"+ "to \""+ System.getProperties().getProperty("user.home")+ "\")\n"+ "or the directory that java was started from\n","GenericObjectEditor",JOptionPane.ERROR_MESSAGE);
        }
      }
    }
    if (EDITOR_PROPERTIES == null) {
      JOptionPane.showMessageDialog(null,"Could not initialize the GenericPropertiesCreator. ","GenericObjectEditor",JOptionPane.ERROR_MESSAGE);
    }
  }
 catch (  Exception e) {
    JOptionPane.showMessageDialog(null,"Could not initialize the GenericPropertiesCreator. " + "This exception was produced:\n" + e.toString(),"GenericObjectEditor",JOptionPane.ERROR_MESSAGE);
  }
}
