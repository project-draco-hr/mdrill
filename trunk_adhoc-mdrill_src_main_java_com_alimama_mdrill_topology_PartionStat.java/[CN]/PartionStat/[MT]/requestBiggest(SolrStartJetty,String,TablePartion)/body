{
  if (this.biggestPartion == null) {
    return;
  }
  ArrayList<String> toremove=new ArrayList<String>();
  HashSet<String> biggestestdays=Partions.partion2Days(biggestPartion,part.parttype);
  String[] biggestestdaysarr=biggestestdays.toArray(new String[biggestestdays.size()]);
  Arrays.sort(biggestestdaysarr);
  toremove.clear();
  for (  String strday : this.biggest.keySet()) {
    if (!biggestestdays.contains(strday)) {
      toremove.add(strday);
    }
  }
  for (  String rmday : toremove) {
    this.biggest.remove(rmday);
  }
  int smallloopcnt=1;
  if (this.biggest.size() < 1) {
    smallloopcnt=biggestestdaysarr.length;
  }
  for (int i=0; i < smallloopcnt; i++) {
    if (i > 0) {
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
      }
    }
    int index=lastbigDayIndex.incrementAndGet();
    if (index >= biggestestdaysarr.length) {
      index=0;
      lastbigDayIndex.set(0);
    }
    String strday=biggestestdaysarr[index];
    long cnt=solrservice.checkSolr(tablename,biggestPartion,strday);
    this.biggest.put(strday,new ShardCount(cnt));
  }
}
