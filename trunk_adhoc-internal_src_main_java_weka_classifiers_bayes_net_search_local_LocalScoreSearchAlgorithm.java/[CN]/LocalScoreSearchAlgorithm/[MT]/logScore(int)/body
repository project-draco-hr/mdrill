{
  if (m_BayesNet.m_Distributions == null) {
    return 0;
  }
  if (nType < 0) {
    nType=m_nScoreType;
  }
  double fLogScore=0.0;
  Instances instances=m_BayesNet.m_Instances;
  for (int iAttribute=0; iAttribute < instances.numAttributes(); iAttribute++) {
    int nCardinality=m_BayesNet.getParentSet(iAttribute).getCardinalityOfParents();
    for (int iParent=0; iParent < nCardinality; iParent++) {
      fLogScore+=((Scoreable)m_BayesNet.m_Distributions[iAttribute][iParent]).logScore(nType,nCardinality);
    }
switch (nType) {
case (Scoreable.MDL):
{
        fLogScore-=0.5 * m_BayesNet.getParentSet(iAttribute).getCardinalityOfParents() * (instances.attribute(iAttribute).numValues() - 1)* Math.log(instances.numInstances());
      }
    break;
case (Scoreable.AIC):
{
    fLogScore-=m_BayesNet.getParentSet(iAttribute).getCardinalityOfParents() * (instances.attribute(iAttribute).numValues() - 1);
  }
break;
}
}
return fLogScore;
}
