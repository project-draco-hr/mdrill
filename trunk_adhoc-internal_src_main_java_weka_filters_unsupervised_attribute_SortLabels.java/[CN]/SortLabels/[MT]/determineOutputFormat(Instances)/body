{
  Instances result;
  Attribute att;
  Attribute attSorted;
  FastVector atts;
  FastVector values;
  Vector<String> sorted;
  int i;
  int n;
  m_AttributeIndices.setUpper(inputFormat.numAttributes() - 1);
  atts=new FastVector();
  m_NewOrder=new int[inputFormat.numAttributes()][];
  for (i=0; i < inputFormat.numAttributes(); i++) {
    att=inputFormat.attribute(i);
    if (!att.isNominal() || !m_AttributeIndices.isInRange(i)) {
      m_NewOrder[i]=new int[0];
      atts.addElement(inputFormat.attribute(i).copy());
      continue;
    }
    sorted=new Vector<String>();
    for (n=0; n < att.numValues(); n++)     sorted.add(att.value(n));
    Collections.sort(sorted,m_Comparator);
    m_NewOrder[i]=new int[att.numValues()];
    values=new FastVector();
    for (n=0; n < att.numValues(); n++) {
      m_NewOrder[i][n]=sorted.indexOf(att.value(n));
      values.addElement(sorted.get(n));
    }
    attSorted=new Attribute(att.name(),values);
    attSorted.setWeight(att.weight());
    atts.addElement(attSorted);
  }
  result=new Instances(inputFormat.relationName(),atts,0);
  result.setClassIndex(inputFormat.classIndex());
  return result;
}
