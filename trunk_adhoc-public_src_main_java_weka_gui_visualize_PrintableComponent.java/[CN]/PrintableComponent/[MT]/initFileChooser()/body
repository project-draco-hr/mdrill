{
  Vector writerNames;
  int i;
  Class cls;
  JComponentWriter writer;
  JPanel accessory;
  JLabel label;
  if (m_FileChooserPanel != null)   return;
  m_FileChooserPanel=new JFileChooser();
  m_FileChooserPanel.resetChoosableFileFilters();
  m_FileChooserPanel.setAcceptAllFileFilterUsed(false);
  accessory=new JPanel();
  accessory.setLayout(null);
  accessory.setPreferredSize(new Dimension(200,200));
  accessory.revalidate();
  m_FileChooserPanel.setAccessory(accessory);
  m_CustomDimensionsCheckBox=new JCheckBox("Use custom dimensions");
  m_CustomDimensionsCheckBox.setBounds(14,7,200,21);
  m_CustomDimensionsCheckBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      boolean custom=m_CustomDimensionsCheckBox.isSelected();
      m_CustomWidthText.setEnabled(custom);
      m_CustomHeightText.setEnabled(custom);
      m_AspectRatioCheckBox.setEnabled(custom);
      if (custom) {
        m_IgnoreChange=true;
        m_CustomWidthText.setText("" + m_Component.getWidth());
        m_CustomHeightText.setText("" + m_Component.getHeight());
        m_IgnoreChange=false;
      }
 else {
        m_IgnoreChange=true;
        m_CustomWidthText.setText("-1");
        m_CustomHeightText.setText("-1");
        m_IgnoreChange=false;
      }
    }
  }
);
  accessory.add(m_CustomDimensionsCheckBox);
  m_CustomWidthText=new JTextField(5);
  m_CustomWidthText.setText("-1");
  m_CustomWidthText.setEnabled(false);
  m_CustomWidthText.setBounds(65,35,50,21);
  m_CustomWidthText.getDocument().addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent e){
      updateDimensions(m_CustomWidthText);
    }
    public void insertUpdate(    DocumentEvent e){
      updateDimensions(m_CustomWidthText);
    }
    public void removeUpdate(    DocumentEvent e){
      updateDimensions(m_CustomWidthText);
    }
  }
);
  label=new JLabel("Width");
  label.setLabelFor(m_CustomWidthText);
  label.setDisplayedMnemonic('W');
  label.setBounds(14,35,50,21);
  accessory.add(label);
  accessory.add(m_CustomWidthText);
  m_CustomHeightText=new JTextField(5);
  m_CustomHeightText.setText("-1");
  m_CustomHeightText.setEnabled(false);
  m_CustomHeightText.setBounds(65,63,50,21);
  m_CustomHeightText.getDocument().addDocumentListener(new DocumentListener(){
    public void changedUpdate(    DocumentEvent e){
      updateDimensions(m_CustomHeightText);
    }
    public void insertUpdate(    DocumentEvent e){
      updateDimensions(m_CustomHeightText);
    }
    public void removeUpdate(    DocumentEvent e){
      updateDimensions(m_CustomHeightText);
    }
  }
);
  label=new JLabel("Height");
  label.setLabelFor(m_CustomHeightText);
  label.setDisplayedMnemonic('H');
  label.setBounds(14,63,50,21);
  accessory.add(label);
  accessory.add(m_CustomHeightText);
  m_AspectRatioCheckBox=new JCheckBox("Keep aspect ratio");
  m_AspectRatioCheckBox.setBounds(14,91,200,21);
  m_AspectRatioCheckBox.setEnabled(false);
  m_AspectRatioCheckBox.setSelected(true);
  m_AspectRatioCheckBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      boolean keep=m_AspectRatioCheckBox.isSelected();
      if (keep) {
        m_IgnoreChange=true;
        m_CustomWidthText.setText("" + m_Component.getWidth());
        m_CustomHeightText.setText("" + m_Component.getHeight());
        m_IgnoreChange=false;
      }
    }
  }
);
  accessory.add(m_AspectRatioCheckBox);
  writerNames=GenericObjectEditor.getClassnames(JComponentWriter.class.getName());
  Collections.sort(writerNames);
  for (i=0; i < writerNames.size(); i++) {
    try {
      cls=Class.forName(writerNames.get(i).toString());
      writer=(JComponentWriter)cls.newInstance();
      m_FileChooserPanel.addChoosableFileFilter(new JComponentWriterFileFilter(writer.getExtension(),writer.getDescription() + " (*" + writer.getExtension()+ ")",writer));
    }
 catch (    Exception e) {
      System.err.println(writerNames.get(i) + ": " + e);
    }
  }
  if (m_FileChooserPanel.getChoosableFileFilters().length > 0)   m_FileChooserPanel.setFileFilter(m_FileChooserPanel.getChoosableFileFilters()[0]);
}
