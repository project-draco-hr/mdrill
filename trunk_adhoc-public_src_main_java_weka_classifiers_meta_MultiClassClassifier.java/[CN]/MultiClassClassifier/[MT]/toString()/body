{
  if (m_Classifiers == null) {
    return "MultiClassClassifier: No model built yet.";
  }
  StringBuffer text=new StringBuffer();
  text.append("MultiClassClassifier\n\n");
  for (int i=0; i < m_Classifiers.length; i++) {
    text.append("Classifier ").append(i + 1);
    if (m_Classifiers[i] != null) {
      if ((m_ClassFilters != null) && (m_ClassFilters[i] != null)) {
        if (m_ClassFilters[i] instanceof RemoveWithValues) {
          Range range=new Range(((RemoveWithValues)m_ClassFilters[i]).getNominalIndices());
          range.setUpper(m_ClassAttribute.numValues());
          int[] pair=range.getSelection();
          text.append(", " + (pair[0] + 1) + " vs "+ (pair[1] + 1));
        }
 else         if (m_ClassFilters[i] instanceof MakeIndicator) {
          text.append(", using indicator values: ");
          text.append(((MakeIndicator)m_ClassFilters[i]).getValueRange());
        }
      }
      text.append('\n');
      text.append(m_Classifiers[i].toString() + "\n\n");
    }
 else {
      text.append(" Skipped (no training examples)\n");
    }
  }
  return text.toString();
}
