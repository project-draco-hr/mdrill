{
  if (m_Classifiers == null) {
    return "Vote: No model built yet.";
  }
  String result="Vote combines";
  result+=" the probability distributions of these base learners:\n";
  for (int i=0; i < m_Classifiers.length; i++) {
    result+='\t' + getClassifierSpec(i) + '\n';
  }
  for (  Classifier c : m_preBuiltClassifiers) {
    result+="\t" + c.getClass().getName() + Utils.joinOptions(((OptionHandler)c).getOptions())+ "\n";
  }
  result+="using the '";
switch (m_CombinationRule) {
case AVERAGE_RULE:
    result+="Average of Probabilities";
  break;
case PRODUCT_RULE:
result+="Product of Probabilities";
break;
case MAJORITY_VOTING_RULE:
result+="Majority Voting";
break;
case MIN_RULE:
result+="Minimum Probability";
break;
case MAX_RULE:
result+="Maximum Probability";
break;
case MEDIAN_RULE:
result+="Median Probability";
break;
default :
throw new IllegalStateException("Unknown combination rule '" + m_CombinationRule + "'!");
}
result+="' combination rule \n";
return result;
}
