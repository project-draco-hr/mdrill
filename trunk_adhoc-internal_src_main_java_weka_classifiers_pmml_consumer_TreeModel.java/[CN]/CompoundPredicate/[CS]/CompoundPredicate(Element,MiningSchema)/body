{
  String booleanOpp=compoundP.getAttribute("booleanOperator");
  for (  BooleanOperator b : BooleanOperator.values()) {
    if (b.toString().equals(booleanOpp)) {
      m_booleanOperator=b;
    }
  }
  NodeList children=compoundP.getChildNodes();
  for (int i=0; i < children.getLength(); i++) {
    Node child=children.item(i);
    if (child.getNodeType() == Node.ELEMENT_NODE) {
      String tagName=((Element)child).getTagName();
      if (tagName.equals("True")) {
        m_components.add(new True());
      }
 else       if (tagName.equals("False")) {
        m_components.add(new False());
      }
 else       if (tagName.equals("SimplePredicate")) {
        m_components.add(new SimplePredicate((Element)child,miningSchema));
      }
 else       if (tagName.equals("CompoundPredicate")) {
        m_components.add(new CompoundPredicate((Element)child,miningSchema));
      }
 else {
        m_components.add(new SimpleSetPredicate((Element)child,miningSchema));
      }
    }
  }
}
