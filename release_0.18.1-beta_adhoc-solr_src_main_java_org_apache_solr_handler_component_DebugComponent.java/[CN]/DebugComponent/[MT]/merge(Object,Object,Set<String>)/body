{
  if (source == null)   return dest;
  if (dest == null) {
    if (source instanceof NamedList) {
      dest=source instanceof SimpleOrderedMap ? new SimpleOrderedMap() : new NamedList();
    }
 else {
      return source;
    }
  }
 else {
    if (dest instanceof Collection) {
      if (source instanceof Collection) {
        ((Collection)dest).addAll((Collection)source);
      }
 else {
        ((Collection)dest).add(source);
      }
      return dest;
    }
 else     if (source instanceof Number) {
      if (dest instanceof Number) {
        if (source instanceof Double || dest instanceof Double) {
          return ((Number)source).doubleValue() + ((Number)dest).doubleValue();
        }
        return ((Number)source).longValue() + ((Number)dest).longValue();
      }
    }
 else     if (source instanceof String) {
      if (source.equals(dest)) {
        return dest;
      }
    }
  }
  if (source instanceof NamedList && dest instanceof NamedList) {
    NamedList tmp=new NamedList();
    NamedList sl=(NamedList)source;
    NamedList dl=(NamedList)dest;
    for (int i=0; i < sl.size(); i++) {
      String skey=sl.getName(i);
      if (exclude != null && exclude.contains(skey))       continue;
      Object sval=sl.getVal(i);
      int didx=-1;
      if (i < dl.size()) {
        String dkey=dl.getName(i);
        if (skey == dkey || (skey != null && skey.equals(dkey))) {
          didx=i;
        }
      }
      if (didx == -1) {
        didx=dl.indexOf(skey,0);
      }
      if (didx == -1) {
        tmp.add(skey,merge(sval,null,null));
      }
 else {
        dl.setVal(didx,merge(sval,dl.getVal(didx),null));
      }
    }
    dl.addAll(tmp);
    return dl;
  }
  List t=new ArrayList();
  t.add(dest);
  t.add(source);
  return t;
}
