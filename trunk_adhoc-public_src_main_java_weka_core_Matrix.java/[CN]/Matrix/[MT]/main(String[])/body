{
  double[] first={2.3,1.2,5};
  double[] second={5.2,1.4,9};
  double[] response={4,7,8};
  double[] weights={1,2,3};
  try {
    double[][] m={{1,2,3},{2,5,6},{3,6,9}};
    Matrix M=new Matrix(m);
    int n=M.numRows();
    double[][] V=new double[n][n];
    double[] d=new double[n];
    double[] e=new double[n];
    M.eigenvalueDecomposition(V,d);
    Matrix v=new Matrix(V);
    Matrix a=new Matrix(2,3);
    Matrix b=new Matrix(3,2);
    System.out.println("Number of columns for a: " + a.numColumns());
    System.out.println("Number of rows for a: " + a.numRows());
    a.setRow(0,first);
    a.setRow(1,second);
    b.setColumn(0,first);
    b.setColumn(1,second);
    System.out.println("a:\n " + a);
    System.out.println("b:\n " + b);
    System.out.println("a (0, 0): " + a.getElement(0,0));
    System.out.println("a transposed:\n " + a.transpose());
    System.out.println("a * b:\n " + a.multiply(b));
    Matrix r=new Matrix(3,1);
    r.setColumn(0,response);
    System.out.println("r:\n " + r);
    System.out.println("Coefficients of regression of b on r: ");
    double[] coefficients=b.regression(r,1.0e-8);
    for (int i=0; i < coefficients.length; i++) {
      System.out.print(coefficients[i] + " ");
    }
    System.out.println();
    System.out.println("Weights: ");
    for (int i=0; i < weights.length; i++) {
      System.out.print(weights[i] + " ");
    }
    System.out.println();
    System.out.println("Coefficients of weighted regression of b on r: ");
    coefficients=b.regression(r,weights,1.0e-8);
    for (int i=0; i < coefficients.length; i++) {
      System.out.print(coefficients[i] + " ");
    }
    System.out.println();
    a.setElement(0,0,6);
    System.out.println("a with (0, 0) set to 6:\n " + a);
    a.write(new java.io.FileWriter("main.matrix"));
    System.out.println("wrote matrix to \"main.matrix\"\n" + a);
    a=new Matrix(new java.io.FileReader("main.matrix"));
    System.out.println("read matrix from \"main.matrix\"\n" + a);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
