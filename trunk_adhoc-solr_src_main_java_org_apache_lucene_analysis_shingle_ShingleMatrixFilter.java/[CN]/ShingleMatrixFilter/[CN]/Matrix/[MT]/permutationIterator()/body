{
  return new Iterator<Column.Row[]>(){
    private int[] columnRowCounters=new int[columns.size()];
    public void remove(){
      throw new IllegalStateException("not implemented");
    }
    public boolean hasNext(){
      int s=columnRowCounters.length;
      int n=columns.size();
      return s != 0 && n >= s && columnRowCounters[s - 1] < (columns.get(s - 1)).getRows().size();
    }
    public Column.Row[] next(){
      if (!hasNext()) {
        throw new NoSuchElementException("no more elements");
      }
      Column.Row[] rows=new Column.Row[columnRowCounters.length];
      for (int i=0; i < columnRowCounters.length; i++) {
        rows[i]=columns.get(i).rows.get(columnRowCounters[i]);
      }
      incrementColumnRowCounters();
      return rows;
    }
    private void incrementColumnRowCounters(){
      for (int i=0; i < columnRowCounters.length; i++) {
        columnRowCounters[i]++;
        if (columnRowCounters[i] == columns.get(i).rows.size() && i < columnRowCounters.length - 1) {
          columnRowCounters[i]=0;
        }
 else {
          break;
        }
      }
    }
  }
;
}
