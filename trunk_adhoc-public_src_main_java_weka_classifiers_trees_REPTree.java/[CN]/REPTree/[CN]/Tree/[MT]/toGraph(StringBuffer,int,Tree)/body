{
  num++;
  if (m_Attribute == -1) {
    text.append("N" + Integer.toHexString(Tree.this.hashCode()) + " [label=\""+ num+ leafString(parent)+ "\""+ "shape=box]\n");
  }
 else {
    text.append("N" + Integer.toHexString(Tree.this.hashCode()) + " [label=\""+ num+ ": "+ m_Info.attribute(m_Attribute).name()+ "\"]\n");
    for (int i=0; i < m_Successors.length; i++) {
      text.append("N" + Integer.toHexString(Tree.this.hashCode()) + "->"+ "N"+ Integer.toHexString(m_Successors[i].hashCode())+ " [label=\"");
      if (m_Info.attribute(m_Attribute).isNumeric()) {
        if (i == 0) {
          text.append(" < " + Utils.doubleToString(m_SplitPoint,2));
        }
 else {
          text.append(" >= " + Utils.doubleToString(m_SplitPoint,2));
        }
      }
 else {
        text.append(" = " + m_Info.attribute(m_Attribute).value(i));
      }
      text.append("\"]\n");
      num=m_Successors[i].toGraph(text,num,this);
    }
  }
  return num;
}
