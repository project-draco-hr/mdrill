{
  if (!instance.classIsMissing()) {
    tokenizeInstance(instance,updateDictionary);
    double wx=dotProd(m_inputVector);
    double y=(instance.classValue() == 0) ? -1 : 1;
    double z=y * (wx + m_bias);
    double multiplier=1.0;
    if (m_numInstances == 0) {
      multiplier=1.0 - (m_learningRate * m_lambda) / m_t;
    }
 else {
      multiplier=1.0 - (m_learningRate * m_lambda) / m_numInstances;
    }
    for (    Count c : m_dictionary.values()) {
      c.m_weight*=multiplier;
    }
    if (m_loss != HINGE || (z < 1)) {
      double factor=m_learningRate * y * dloss(z);
      for (      Map.Entry<String,Count> feature : m_inputVector.entrySet()) {
        String word=feature.getKey();
        double value=(m_wordFrequencies) ? feature.getValue().m_count : 1;
        Count c=m_dictionary.get(word);
        if (c != null) {
          c.m_weight+=factor * value;
        }
      }
      m_bias+=factor;
    }
    m_t++;
  }
}
