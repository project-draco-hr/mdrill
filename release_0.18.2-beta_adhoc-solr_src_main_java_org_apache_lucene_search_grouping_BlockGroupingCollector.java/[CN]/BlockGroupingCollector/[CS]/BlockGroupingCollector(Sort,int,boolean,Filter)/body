{
  if (topNGroups < 1) {
    throw new IllegalArgumentException("topNGroups must be >= 1 (got " + topNGroups + ")");
  }
  groupQueue=new GroupQueue(topNGroups);
  pendingSubDocs=new int[10];
  if (needsScores) {
    pendingSubScores=new float[10];
  }
  this.needsScores=needsScores;
  this.lastDocPerGroup=lastDocPerGroup;
  this.groupSort=groupSort;
  this.topNGroups=topNGroups;
  final SortField[] sortFields=groupSort.getSort();
  comparators=new FieldComparator[sortFields.length];
  compIDXEnd=comparators.length - 1;
  reversed=new int[sortFields.length];
  for (int i=0; i < sortFields.length; i++) {
    final SortField sortField=sortFields[i];
    comparators[i]=sortField.getComparator(topNGroups,i);
    reversed[i]=sortField.getReverse() ? -1 : 1;
  }
}
