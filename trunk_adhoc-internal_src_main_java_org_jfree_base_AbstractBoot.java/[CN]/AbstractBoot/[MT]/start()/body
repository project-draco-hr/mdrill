{
synchronized (this) {
    if (isBootDone()) {
      return;
    }
    while (isBootInProgress()) {
      try {
        wait();
      }
 catch (      InterruptedException e) {
      }
    }
    if (isBootDone()) {
      return;
    }
    this.bootInProgress=true;
  }
  final BootableProjectInfo info=getProjectInfo();
  if (info != null) {
    final BootableProjectInfo[] childs=info.getDependencies();
    for (int i=0; i < childs.length; i++) {
      final AbstractBoot boot=loadBooter(childs[i].getBootClass());
      if (boot != null) {
synchronized (boot) {
          boot.start();
          while (boot.isBootDone() == false) {
            try {
              boot.wait();
            }
 catch (            InterruptedException e) {
            }
          }
        }
      }
    }
  }
  performBoot();
  if (info != null) {
    Log.info(info.getName() + " " + info.getVersion()+ " started.");
  }
 else {
    Log.info(getClass() + " started.");
  }
synchronized (this) {
    this.bootInProgress=false;
    this.bootDone=true;
    notifyAll();
  }
}
