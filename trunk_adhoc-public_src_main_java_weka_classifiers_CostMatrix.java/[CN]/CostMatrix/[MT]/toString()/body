{
  double maxval=0;
  boolean fractional=false;
  Object element=null;
  int widthNumber=0;
  int widthExpression=0;
  for (int i=0; i < size(); i++) {
    for (int j=0; j < size(); j++) {
      element=getCell(i,j);
      if (element instanceof Double) {
        double current=((Double)element).doubleValue();
        if (current < 0)         current*=-11;
        if (current > maxval)         maxval=current;
        double fract=Math.abs(current - Math.rint(current));
        if (!fractional && ((Math.log(fract) / Math.log(10)) >= -2)) {
          fractional=true;
        }
      }
 else {
        if (element.toString().length() > widthExpression) {
          widthExpression=element.toString().length();
        }
      }
    }
  }
  if (maxval > 0) {
    widthNumber=(int)(Math.log(maxval) / Math.log(10) + (fractional ? 4 : 1));
  }
  int width=(widthNumber > widthExpression) ? widthNumber : widthExpression;
  StringBuffer text=new StringBuffer();
  for (int i=0; i < size(); i++) {
    for (int j=0; j < size(); j++) {
      element=getCell(i,j);
      if (element instanceof Double) {
        text.append(" ").append(Utils.doubleToString(((Double)element).doubleValue(),width,(fractional ? 2 : 0)));
      }
 else {
        int diff=width - element.toString().length();
        if (diff > 0) {
          int left=diff % 2;
          left+=diff / 2;
          String temp=Utils.padLeft(element.toString(),element.toString().length() + left);
          temp=Utils.padRight(temp,width);
          text.append(" ").append(temp);
        }
 else {
          text.append(" ").append(element.toString());
        }
      }
    }
    text.append("\n");
  }
  return text.toString();
}
