{
  setBorder(BorderFactory.createTitledBorder("Controls"));
  m_totalEpochsLabel=new JLabel("Num Of Epochs  ");
  m_epochsLabel=new JPanel(){
    /** 
 * for serialization 
 */
    private static final long serialVersionUID=2562773937093221399L;
    public void paintComponent(    Graphics g){
      super.paintComponent(g);
      g.setColor(m_controlPanel.m_totalEpochsLabel.getForeground());
      g.drawString("Epoch  " + m_epoch,0,10);
    }
  }
;
  m_epochsLabel.setFont(m_totalEpochsLabel.getFont());
  m_changeEpochs=new JTextField();
  m_changeEpochs.setText("" + m_numEpochs);
  m_errorLabel=new JPanel(){
    /** 
 * for serialization 
 */
    private static final long serialVersionUID=4390239056336679189L;
    public void paintComponent(    Graphics g){
      super.paintComponent(g);
      g.setColor(m_controlPanel.m_totalEpochsLabel.getForeground());
      if (m_valSize == 0) {
        g.drawString("Error per Epoch = " + Utils.doubleToString(m_error,7),0,10);
      }
 else {
        g.drawString("Validation Error per Epoch = " + Utils.doubleToString(m_error,7),0,10);
      }
    }
  }
;
  m_errorLabel.setFont(m_epochsLabel.getFont());
  m_learningLabel=new JLabel("Learning Rate = ");
  m_momentumLabel=new JLabel("Momentum = ");
  m_changeLearning=new JTextField();
  m_changeMomentum=new JTextField();
  m_changeLearning.setText("" + m_learningRate);
  m_changeMomentum.setText("" + m_momentum);
  setLayout(new BorderLayout(15,10));
  m_stopIt=true;
  m_accepted=false;
  m_startStop=new JButton("Start");
  m_startStop.setActionCommand("Start");
  m_acceptButton=new JButton("Accept");
  m_acceptButton.setActionCommand("Accept");
  JPanel buttons=new JPanel();
  buttons.setLayout(new BoxLayout(buttons,BoxLayout.Y_AXIS));
  buttons.add(m_startStop);
  buttons.add(m_acceptButton);
  add(buttons,BorderLayout.WEST);
  JPanel data=new JPanel();
  data.setLayout(new BoxLayout(data,BoxLayout.Y_AXIS));
  Box ab=new Box(BoxLayout.X_AXIS);
  ab.add(m_epochsLabel);
  data.add(ab);
  ab=new Box(BoxLayout.X_AXIS);
  Component b=Box.createGlue();
  ab.add(m_totalEpochsLabel);
  ab.add(m_changeEpochs);
  m_changeEpochs.setMaximumSize(new Dimension(200,20));
  ab.add(b);
  data.add(ab);
  ab=new Box(BoxLayout.X_AXIS);
  ab.add(m_errorLabel);
  data.add(ab);
  add(data,BorderLayout.CENTER);
  data=new JPanel();
  data.setLayout(new BoxLayout(data,BoxLayout.Y_AXIS));
  ab=new Box(BoxLayout.X_AXIS);
  b=Box.createGlue();
  ab.add(m_learningLabel);
  ab.add(m_changeLearning);
  m_changeLearning.setMaximumSize(new Dimension(200,20));
  ab.add(b);
  data.add(ab);
  ab=new Box(BoxLayout.X_AXIS);
  b=Box.createGlue();
  ab.add(m_momentumLabel);
  ab.add(m_changeMomentum);
  m_changeMomentum.setMaximumSize(new Dimension(200,20));
  ab.add(b);
  data.add(ab);
  add(data,BorderLayout.EAST);
  m_startStop.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (e.getActionCommand().equals("Start")) {
        m_stopIt=false;
        m_startStop.setText("Stop");
        m_startStop.setActionCommand("Stop");
        int n=Integer.valueOf(m_changeEpochs.getText()).intValue();
        m_numEpochs=n;
        m_changeEpochs.setText("" + m_numEpochs);
        double m=Double.valueOf(m_changeLearning.getText()).doubleValue();
        setLearningRate(m);
        m_changeLearning.setText("" + m_learningRate);
        m=Double.valueOf(m_changeMomentum.getText()).doubleValue();
        setMomentum(m);
        m_changeMomentum.setText("" + m_momentum);
        blocker(false);
      }
 else       if (e.getActionCommand().equals("Stop")) {
        m_stopIt=true;
        m_startStop.setText("Start");
        m_startStop.setActionCommand("Start");
      }
    }
  }
);
  m_acceptButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_accepted=true;
      blocker(false);
    }
  }
);
  m_changeEpochs.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int n=Integer.valueOf(m_changeEpochs.getText()).intValue();
      if (n > 0) {
        m_numEpochs=n;
        blocker(false);
      }
    }
  }
);
}
