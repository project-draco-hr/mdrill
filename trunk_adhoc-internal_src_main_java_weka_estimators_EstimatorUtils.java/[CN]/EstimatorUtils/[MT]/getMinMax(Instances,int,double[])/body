{
  double min=Double.NaN;
  double max=Double.NaN;
  Instance instance=null;
  int numNotMissing=0;
  if ((minMax == null) || (minMax.length < 2)) {
    throw new Exception("Error in Program, privat method getMinMax");
  }
  Enumeration enumInst=inst.enumerateInstances();
  if (enumInst.hasMoreElements()) {
    do {
      instance=(Instance)enumInst.nextElement();
    }
 while (instance.isMissing(attrIndex) && (enumInst.hasMoreElements()));
    if (!instance.isMissing(attrIndex)) {
      numNotMissing++;
      min=instance.value(attrIndex);
      max=instance.value(attrIndex);
    }
    while (enumInst.hasMoreElements()) {
      instance=(Instance)enumInst.nextElement();
      if (!instance.isMissing(attrIndex)) {
        numNotMissing++;
        if (instance.value(attrIndex) < min) {
          min=(instance.value(attrIndex));
        }
 else {
          if (instance.value(attrIndex) > max) {
            max=(instance.value(attrIndex));
          }
        }
      }
    }
  }
  minMax[0]=min;
  minMax[1]=max;
  return numNotMissing;
}
