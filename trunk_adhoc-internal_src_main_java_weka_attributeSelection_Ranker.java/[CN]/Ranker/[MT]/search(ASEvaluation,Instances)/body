{
  int i, j;
  if (!(ASEval instanceof AttributeEvaluator)) {
    throw new Exception(ASEval.getClass().getName() + " is not a" + "Attribute evaluator!");
  }
  m_numAttribs=data.numAttributes();
  if (ASEval instanceof UnsupervisedAttributeEvaluator) {
    m_hasClass=false;
  }
 else {
    m_classIndex=data.classIndex();
    if (m_classIndex >= 0) {
      m_hasClass=true;
    }
 else {
      m_hasClass=false;
    }
  }
  if (ASEval instanceof AttributeTransformer) {
    data=((AttributeTransformer)ASEval).transformedHeader();
    if (m_classIndex >= 0 && data.classIndex() >= 0) {
      m_classIndex=data.classIndex();
      m_hasClass=true;
    }
  }
  m_startRange.setUpper(m_numAttribs - 1);
  if (!(getStartSet().equals(""))) {
    m_starting=m_startRange.getSelection();
  }
  int sl=0;
  if (m_starting != null) {
    sl=m_starting.length;
  }
  if ((m_starting != null) && (m_hasClass == true)) {
    boolean ok=false;
    for (i=0; i < sl; i++) {
      if (m_starting[i] == m_classIndex) {
        ok=true;
        break;
      }
    }
    if (ok == false) {
      sl++;
    }
  }
 else {
    if (m_hasClass == true) {
      sl++;
    }
  }
  m_attributeList=new int[m_numAttribs - sl];
  m_attributeMerit=new double[m_numAttribs - sl];
  for (i=0, j=0; i < m_numAttribs; i++) {
    if (!inStarting(i)) {
      m_attributeList[j++]=i;
    }
  }
  AttributeEvaluator ASEvaluator=(AttributeEvaluator)ASEval;
  for (i=0; i < m_attributeList.length; i++) {
    m_attributeMerit[i]=ASEvaluator.evaluateAttribute(m_attributeList[i]);
  }
  double[][] tempRanked=rankedAttributes();
  int[] rankedAttributes=new int[m_attributeList.length];
  for (i=0; i < m_attributeList.length; i++) {
    rankedAttributes[i]=(int)tempRanked[i][0];
  }
  return rankedAttributes;
}
