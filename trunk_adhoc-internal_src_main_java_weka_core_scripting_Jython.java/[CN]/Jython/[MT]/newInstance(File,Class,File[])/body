{
  Object result;
  String tempName;
  String instanceName;
  String javaClassName;
  String objectDef;
  int i;
  String[] tmpPaths;
  HashSet<String> currentPaths;
  String filename;
  Object interpreter;
  result=null;
  if (!isPresent())   return result;
  interpreter=newInterpreter();
  if (interpreter == null)   return result;
  if (paths.length > 0) {
    invoke(interpreter,"exec",new Class[]{String.class},new Object[]{"import sys"});
    instanceName="syspath";
    invoke(interpreter,"exec",new Class[]{String.class},new Object[]{instanceName + " = sys.path"});
    currentPaths=new HashSet<String>();
    try {
      tmpPaths=(String[])invoke(interpreter,"get",new Class[]{String.class,Class.class},new Object[]{instanceName,String[].class});
      for (i=0; i < tmpPaths.length; i++)       currentPaths.add(tmpPaths[i]);
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
    for (i=0; i < paths.length; i++) {
      if (!currentPaths.contains(paths[i].getAbsolutePath()))       invoke(interpreter,"exec",new Class[]{String.class},new Object[]{"sys.path.append('" + paths[i].getAbsolutePath() + "')"});
    }
  }
  filename=file.getAbsolutePath();
  invoke(interpreter,"execfile",new Class[]{String.class},new Object[]{filename});
  tempName=filename.substring(filename.lastIndexOf("/") + 1);
  tempName=tempName.substring(0,tempName.indexOf("."));
  instanceName=tempName.toLowerCase();
  javaClassName=tempName.substring(0,1).toUpperCase() + tempName.substring(1);
  objectDef="=" + javaClassName + "()";
  invoke(interpreter,"exec",new Class[]{String.class},new Object[]{instanceName + objectDef});
  try {
    result=invoke(interpreter,"get",new Class[]{String.class,Class.class},new Object[]{instanceName,template});
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
  return result;
}
