{
  PlotOrientation orientation=plot.getOrientation();
  int itemCount=dataset.getItemCount(series);
  Paint paint=getItemPaint(series,item);
  Stroke seriesStroke=getItemStroke(series,item);
  g2.setPaint(paint);
  g2.setStroke(seriesStroke);
  double x1=dataset.getXValue(series,item);
  double y1=dataset.getYValue(series,item);
  double x=x1;
  double y=Double.isNaN(y1) ? getRangeBase() : y1;
  double transX1=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
  double transY1=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
  transY1=restrictValueToDataArea(transY1,plot,dataArea);
  if (this.pArea == null && !Double.isNaN(y1)) {
    this.pArea=new Polygon();
    double transY2=rangeAxis.valueToJava2D(getRangeBase(),dataArea,plot.getRangeAxisEdge());
    transY2=restrictValueToDataArea(transY2,plot,dataArea);
    if (orientation == PlotOrientation.VERTICAL) {
      this.pArea.addPoint((int)transX1,(int)transY2);
    }
 else     if (orientation == PlotOrientation.HORIZONTAL) {
      this.pArea.addPoint((int)transY2,(int)transX1);
    }
  }
  double transX0=0;
  double transY0=restrictValueToDataArea(getRangeBase(),plot,dataArea);
  double x0;
  double y0;
  if (item > 0) {
    x0=dataset.getXValue(series,item - 1);
    y0=Double.isNaN(y1) ? y1 : dataset.getYValue(series,item - 1);
    x=x0;
    y=Double.isNaN(y0) ? getRangeBase() : y0;
    transX0=domainAxis.valueToJava2D(x,dataArea,plot.getDomainAxisEdge());
    transY0=rangeAxis.valueToJava2D(y,dataArea,plot.getRangeAxisEdge());
    transY0=restrictValueToDataArea(transY0,plot,dataArea);
    if (Double.isNaN(y1)) {
      transX1=transX0;
      transY0=transY1;
    }
    if (transY0 != transY1) {
      if (orientation == PlotOrientation.VERTICAL) {
        this.pArea.addPoint((int)transX1,(int)transY0);
      }
 else       if (orientation == PlotOrientation.HORIZONTAL) {
        this.pArea.addPoint((int)transY0,(int)transX1);
      }
    }
  }
  Shape shape=null;
  if (!Double.isNaN(y1)) {
    if (orientation == PlotOrientation.VERTICAL) {
      this.pArea.addPoint((int)transX1,(int)transY1);
    }
 else     if (orientation == PlotOrientation.HORIZONTAL) {
      this.pArea.addPoint((int)transY1,(int)transX1);
    }
    if (getShapesVisible()) {
      shape=getItemShape(series,item);
      if (orientation == PlotOrientation.VERTICAL) {
        shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
      }
 else       if (orientation == PlotOrientation.HORIZONTAL) {
        shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
      }
      if (isShapesFilled()) {
        g2.fill(shape);
      }
 else {
        g2.draw(shape);
      }
    }
 else {
      if (orientation == PlotOrientation.VERTICAL) {
        shape=new Rectangle2D.Double(transX1 - 2,transY1 - 2,4.0,4.0);
      }
 else       if (orientation == PlotOrientation.HORIZONTAL) {
        shape=new Rectangle2D.Double(transY1 - 2,transX1 - 2,4.0,4.0);
      }
    }
  }
  if (getPlotArea() && item > 0 && this.pArea != null && (item == (itemCount - 1) || Double.isNaN(y1))) {
    double transY2=rangeAxis.valueToJava2D(getRangeBase(),dataArea,plot.getRangeAxisEdge());
    transY2=restrictValueToDataArea(transY2,plot,dataArea);
    if (orientation == PlotOrientation.VERTICAL) {
      this.pArea.addPoint((int)transX1,(int)transY2);
    }
 else     if (orientation == PlotOrientation.HORIZONTAL) {
      this.pArea.addPoint((int)transY2,(int)transX1);
    }
    g2.fill(this.pArea);
    if (isOutline()) {
      g2.setStroke(plot.getOutlineStroke());
      g2.setPaint(plot.getOutlinePaint());
      g2.draw(this.pArea);
    }
    this.pArea=null;
  }
  if (!Double.isNaN(y1)) {
    int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);
    int rangeAxisIndex=plot.getRangeAxisIndex(rangeAxis);
    updateCrosshairValues(crosshairState,x1,y1,domainAxisIndex,rangeAxisIndex,transX1,transY1,orientation);
  }
  EntityCollection entities=state.getEntityCollection();
  if (entities != null) {
    addEntity(entities,shape,dataset,series,item,transX1,transY1);
  }
}
