{
  boolean result=true;
  Object doNotLoadIfFileMissing=toLoad.getPackageMetaDataElement("DoNotLoadIfFileNotPresent");
  String packageRootPath=packageRoot.getPath() + File.separator;
  if (doNotLoadIfFileMissing != null && doNotLoadIfFileMissing.toString().length() > 0) {
    StringTokenizer tok=new StringTokenizer(doNotLoadIfFileMissing.toString(),",");
    while (tok.hasMoreTokens()) {
      String nextT=tok.nextToken().trim();
      File toCheck=new File(packageRootPath + nextT);
      if (!toCheck.exists()) {
        for (        PrintStream p : progress) {
          p.println("[Weka] " + toLoad.getName() + " can't be loaded because "+ toCheck.getPath()+ " appears to be missing.");
        }
        result=false;
        break;
      }
    }
  }
  if (!result) {
    Object doNotLoadMessage=toLoad.getPackageMetaDataElement("DoNotLoadIfFileNotPresentMessage");
    if (doNotLoadMessage != null && doNotLoadMessage.toString().length() > 0) {
      String dnlM=doNotLoadMessage.toString();
      try {
        dnlM=Environment.getSystemWide().substitute(dnlM);
      }
 catch (      Exception ex) {
      }
      for (      PrintStream p : progress) {
        p.println("[Weka] " + dnlM);
      }
    }
  }
  return result;
}
