{
  super.setOptions(options);
  String optionString=Utils.getOption('S',options);
  if (optionString.length() != 0) {
    String splitMethodSpec[]=Utils.splitOptions(optionString);
    if (splitMethodSpec.length == 0) {
      throw new Exception("Invalid DistanceFunction specification string.");
    }
    String className=splitMethodSpec[0];
    splitMethodSpec[0]="";
    setNodeSplitter((KDTreeNodeSplitter)Utils.forName(KDTreeNodeSplitter.class,className,splitMethodSpec));
  }
 else {
    setNodeSplitter(new SlidingMidPointOfWidestSide());
  }
  optionString=Utils.getOption('W',options);
  if (optionString.length() != 0)   setMinBoxRelWidth(Double.parseDouble(optionString));
 else   setMinBoxRelWidth(1.0E-2);
  optionString=Utils.getOption('L',options);
  if (optionString.length() != 0)   setMaxInstInLeaf(Integer.parseInt(optionString));
 else   setMaxInstInLeaf(40);
  setNormalizeNodeWidth(Utils.getFlag('N',options));
}
