{
  double[] instanceVals=new double[outputFormatPeek().numAttributes()];
  double[] tempvals;
  if (instance.classIndex() >= 0) {
    tempvals=new double[outputFormatPeek().numAttributes() - 1];
  }
 else {
    tempvals=new double[outputFormatPeek().numAttributes()];
  }
  int pos=0;
  for (int j=0; j < m_clusterers.length; j++) {
    if (m_clusterers[j] != null) {
      double[] probs;
      if (m_removeAttributes != null) {
        m_removeAttributes.input(instance);
        probs=logs2densities(j,m_removeAttributes.output());
      }
 else {
        probs=logs2densities(j,instance);
      }
      System.arraycopy(probs,0,tempvals,pos,probs.length);
      pos+=probs.length;
    }
  }
  tempvals=Utils.logs2probs(tempvals);
  System.arraycopy(tempvals,0,instanceVals,0,tempvals.length);
  if (instance.classIndex() >= 0) {
    instanceVals[instanceVals.length - 1]=instance.classValue();
  }
  push(new DenseInstance(instance.weight(),instanceVals));
}
