{
  String activationFunction=layerE.getAttribute("activationFunction");
  if (activationFunction != null && activationFunction.length() > 0) {
    for (    ActivationFunction a : ActivationFunction.values()) {
      if (a.toString().equals(activationFunction)) {
        m_layerActivationFunction=a;
        break;
      }
    }
  }
 else {
    m_layerActivationFunction=m_activationFunction;
  }
  String threshold=layerE.getAttribute("threshold");
  if (threshold != null && threshold.length() > 0) {
    m_layerThreshold=Double.parseDouble(threshold);
  }
 else {
    m_layerThreshold=m_threshold;
  }
  String width=layerE.getAttribute("width");
  if (width != null && width.length() > 0) {
    m_layerWidth=Double.parseDouble(width);
  }
 else {
    m_layerWidth=m_width;
  }
  String altitude=layerE.getAttribute("altitude");
  if (altitude != null && altitude.length() > 0) {
    m_layerAltitude=Double.parseDouble(altitude);
  }
 else {
    m_layerAltitude=m_altitude;
  }
  String normMethod=layerE.getAttribute("normalizationMethod");
  if (normMethod != null && normMethod.length() > 0) {
    for (    Normalization n : Normalization.values()) {
      if (n.toString().equals(normMethod)) {
        m_layerNormalization=n;
        break;
      }
    }
  }
 else {
    m_layerNormalization=m_normalizationMethod;
  }
  NodeList neuronL=layerE.getElementsByTagName("Neuron");
  m_numNeurons=neuronL.getLength();
  m_layerNeurons=new Neuron[m_numNeurons];
  for (int i=0; i < neuronL.getLength(); i++) {
    Node neuronN=neuronL.item(i);
    if (neuronN.getNodeType() == Node.ELEMENT_NODE) {
      m_layerNeurons[i]=new Neuron((Element)neuronN,this);
    }
  }
}
