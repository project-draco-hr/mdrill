{
  LinkedList<HashMap<K,V>> lastdata=null;
synchronized (_lock) {
    lastdata=_buckets;
    _buckets=new LinkedList<HashMap<K,V>>();
    for (int i=0; i < numBuckets; i++) {
      _buckets.add(new HashMap<K,V>());
    }
  }
  if (_callback != null && lastdata != null) {
synchronized (_callback) {
      HashMap<K,V> needupdate=new HashMap<K,V>();
      for (      HashMap<K,V> dead : lastdata) {
        for (        Entry<K,V> entry : dead.entrySet()) {
          K key=entry.getKey();
          V val=entry.getValue();
          if (fetch.timeout(key,val)) {
            _callback.expire(key,val);
          }
 else {
            needupdate.put(key,val);
          }
        }
      }
      _callback.commit();
      if (needupdate.size() > 0) {
        this.updateAll(needupdate,d);
      }
    }
  }
}
