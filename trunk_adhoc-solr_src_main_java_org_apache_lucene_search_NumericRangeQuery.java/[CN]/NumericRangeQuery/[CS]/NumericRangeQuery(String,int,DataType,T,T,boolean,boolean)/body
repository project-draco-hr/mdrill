{
  if (precisionStep < 1)   throw new IllegalArgumentException("precisionStep must be >=1");
  this.field=StringHelper.intern(field);
  this.precisionStep=precisionStep;
  this.dataType=dataType;
  this.min=min;
  this.max=max;
  this.minInclusive=minInclusive;
  this.maxInclusive=maxInclusive;
switch (dataType) {
case LONG:
case DOUBLE:
    setRewriteMethod((precisionStep > 6) ? CONSTANT_SCORE_FILTER_REWRITE : CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);
  break;
case INT:
case FLOAT:
setRewriteMethod((precisionStep > 8) ? CONSTANT_SCORE_FILTER_REWRITE : CONSTANT_SCORE_AUTO_REWRITE_DEFAULT);
break;
default :
throw new IllegalArgumentException("Invalid numeric DataType");
}
if (min != null && min.equals(max)) {
setRewriteMethod(CONSTANT_SCORE_BOOLEAN_QUERY_REWRITE);
}
}
