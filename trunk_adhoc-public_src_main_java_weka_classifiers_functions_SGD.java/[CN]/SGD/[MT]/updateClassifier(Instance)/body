{
  if (!instance.classIsMissing()) {
    double wx=dotProd(instance,m_weights,instance.classIndex());
    double y;
    double z;
    if (instance.classAttribute().isNominal()) {
      y=(instance.classValue() == 0) ? -1 : 1;
      z=y * (wx + m_weights[m_weights.length - 1]);
    }
 else {
      y=instance.classValue();
      z=y - (wx + m_weights[m_weights.length - 1]);
      y=1;
    }
    double multiplier=1.0;
    if (m_numInstances == 0) {
      multiplier=1.0 - (m_learningRate * m_lambda) / m_t;
    }
 else {
      multiplier=1.0 - (m_learningRate * m_lambda) / m_numInstances;
    }
    for (int i=0; i < m_weights.length - 1; i++) {
      m_weights[i]*=multiplier;
    }
    if (m_loss != HINGE || (z < 1)) {
      double factor=m_learningRate * y * dloss(z);
      int n1=instance.numValues();
      for (int p1=0; p1 < n1; p1++) {
        int indS=instance.index(p1);
        if (indS != instance.classIndex() && !instance.isMissingSparse(p1)) {
          m_weights[indS]+=factor * instance.valueSparse(p1);
        }
      }
      m_weights[m_weights.length - 1]+=factor;
    }
    m_t++;
  }
}
