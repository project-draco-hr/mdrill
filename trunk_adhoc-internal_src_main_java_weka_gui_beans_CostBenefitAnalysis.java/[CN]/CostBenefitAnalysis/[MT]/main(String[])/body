{
  try {
    Instances train=new Instances(new java.io.BufferedReader(new java.io.FileReader(args[0])));
    train.setClassIndex(train.numAttributes() - 1);
    weka.classifiers.evaluation.ThresholdCurve tc=new weka.classifiers.evaluation.ThresholdCurve();
    weka.classifiers.evaluation.EvaluationUtils eu=new weka.classifiers.evaluation.EvaluationUtils();
    weka.classifiers.Classifier classifier=new weka.classifiers.bayes.NaiveBayes();
    FastVector predictions=new FastVector();
    eu.setSeed(1);
    predictions.appendElements(eu.getCVPredictions(classifier,train,10));
    Instances result=tc.getCurve(predictions,0);
    PlotData2D pd=new PlotData2D(result);
    pd.m_alwaysDisplayPointsOfThisSize=10;
    boolean[] connectPoints=new boolean[result.numInstances()];
    for (int i=1; i < connectPoints.length; i++) {
      connectPoints[i]=true;
    }
    pd.setConnectPoints(connectPoints);
    final javax.swing.JFrame jf=new javax.swing.JFrame("CostBenefitTest");
    jf.setSize(1000,600);
    jf.getContentPane().setLayout(new BorderLayout());
    final CostBenefitAnalysis.AnalysisPanel analysisPanel=new CostBenefitAnalysis.AnalysisPanel();
    jf.getContentPane().add(analysisPanel,BorderLayout.CENTER);
    jf.addWindowListener(new java.awt.event.WindowAdapter(){
      public void windowClosing(      java.awt.event.WindowEvent e){
        jf.dispose();
        System.exit(0);
      }
    }
);
    jf.setVisible(true);
    analysisPanel.setDataSet(pd,train.classAttribute());
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
