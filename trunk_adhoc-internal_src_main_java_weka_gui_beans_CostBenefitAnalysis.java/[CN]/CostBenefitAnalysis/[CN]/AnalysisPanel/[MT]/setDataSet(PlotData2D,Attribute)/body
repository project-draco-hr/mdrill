{
  m_masterPlot=new PlotData2D(data.getPlotInstances());
  boolean[] connectPoints=new boolean[m_masterPlot.getPlotInstances().numInstances()];
  for (int i=1; i < connectPoints.length; i++) {
    connectPoints[i]=true;
  }
  m_masterPlot.setConnectPoints(connectPoints);
  m_masterPlot.m_alwaysDisplayPointsOfThisSize=10;
  setClassForConfusionMatrix(classAtt);
  m_performancePanel.setMasterPlot(m_masterPlot);
  m_performancePanel.validate();
  m_performancePanel.repaint();
  m_shapeSizes=new int[m_masterPlot.getPlotInstances().numInstances()];
  for (int i=0; i < m_shapeSizes.length; i++) {
    m_shapeSizes[i]=1;
  }
  m_masterPlot.setShapeSize(m_shapeSizes);
  constructCostBenefitData();
  m_costBenefitPanel.setMasterPlot(m_costBenefit);
  m_costBenefitPanel.validate();
  m_costBenefitPanel.repaint();
  m_totalPopPrevious=0;
  m_fpPrevious=0;
  m_tpPrevious=0;
  m_tnPrevious=0;
  m_fnPrevious=0;
  m_previousShapeIndex=-1;
  Instance first=m_masterPlot.getPlotInstances().instance(0);
  double totalPos=first.value(m_masterPlot.getPlotInstances().attribute(ThresholdCurve.TRUE_POS_NAME).index());
  double totalNeg=first.value(m_masterPlot.getPlotInstances().attribute(ThresholdCurve.FALSE_POS_NAME));
  m_originalPopSize=(int)(totalPos + totalNeg);
  m_totalPopField.setText("" + m_originalPopSize);
  m_performancePanel.setYIndex(5);
  m_performancePanel.setXIndex(10);
  m_costBenefitPanel.setXIndex(0);
  m_costBenefitPanel.setYIndex(1);
  updateInfoForSliderValue((double)m_thresholdSlider.getValue() / 100.0);
}
