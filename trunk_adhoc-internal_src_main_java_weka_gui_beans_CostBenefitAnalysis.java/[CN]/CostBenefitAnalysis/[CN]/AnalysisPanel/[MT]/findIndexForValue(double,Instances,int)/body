{
  int index=-1;
  int lower=0;
  int upper=plotInstances.numInstances() - 1;
  int mid=(upper - lower) / 2;
  boolean done=false;
  while (!done) {
    if (upper - lower <= 1) {
      double comp1=plotInstances.instance(upper).value(indexOfMetric);
      double comp2=plotInstances.instance(lower).value(indexOfMetric);
      if (Math.abs(comp1 - value) < Math.abs(comp2 - value)) {
        index=upper;
      }
 else {
        index=lower;
      }
      break;
    }
    double comparisonVal=plotInstances.instance(mid).value(indexOfMetric);
    if (value > comparisonVal) {
      if (m_threshold.isSelected()) {
        lower=mid;
        mid+=(upper - lower) / 2;
      }
 else {
        upper=mid;
        mid-=(upper - lower) / 2;
      }
    }
 else     if (value < comparisonVal) {
      if (m_threshold.isSelected()) {
        upper=mid;
        mid-=(upper - lower) / 2;
      }
 else {
        lower=mid;
        mid+=(upper - lower) / 2;
      }
    }
 else {
      index=mid;
      done=true;
    }
  }
  if (!m_threshold.isSelected()) {
    while (index + 1 < plotInstances.numInstances()) {
      if (plotInstances.instance(index + 1).value(indexOfMetric) == plotInstances.instance(index).value(indexOfMetric)) {
        index++;
      }
 else {
        break;
      }
    }
  }
 else {
    while (index - 1 >= 0) {
      if (plotInstances.instance(index - 1).value(indexOfMetric) == plotInstances.instance(index).value(indexOfMetric)) {
        index--;
      }
 else {
        break;
      }
    }
  }
  return index;
}
