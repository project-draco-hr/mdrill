{
  try {
    if (line == null) {
      return null;
    }
    this.lines++;
    if (this.lines > 100000) {
      this.laststartts=(System.currentTimeMillis() / 1000) - TS_MAX;
      this.lastendts=(System.currentTimeMillis() / 1000) + TS_MAX;
      this.lines=0;
    }
    String[] log=line.split("\001",-1);
    if (log == null || log.length < 54) {
      return null;
    }
    long ts=Long.parseLong(log[2]);
    this.lines_sb++;
    if (this.lines_sb > 5000) {
      this.lines_sb=0;
      long nowts=System.currentTimeMillis();
      if (nowts - timediff > 30000) {
        timediff=nowts;
        LOG.info("parseLine_sb_" + formatDayMin.format(new Date(ts * 1000)) + " "+ formatRows(log));
      }
    }
    if (ts < laststartts || ts > lastendts) {
      return null;
    }
    String ad_id=log[7];
    String url_ad_id=getName(log[3],"ad_id");
    if ((ad_id == null || ad_id.isEmpty()) && (url_ad_id == null || url_ad_id.isEmpty())) {
      return null;
    }
    DataIterParse rtn=new DataIterParse(ts,log,ad_id,url_ad_id);
    if (!rtn.isvalidate()) {
      this.lines_sb2++;
      if (this.lines_sb2 > 5000) {
        this.lines_sb2=0;
        long nowts=System.currentTimeMillis();
        if (nowts - timediff2 > 30000) {
          timediff2=nowts;
          LOG.info("parseLine_sb2_" + formatDayMin.format(new Date(ts * 1000)) + " "+ formatRows(log));
        }
      }
      return null;
    }
    return rtn;
  }
 catch (  Throwable nfe) {
    if (groupCreateerror < 100) {
      LOG.error("InvalidEntryException:" + line,nfe);
      groupCreateerror++;
    }
    throw new InvalidEntryException("Invalid log `" + line + "'\n",nfe);
  }
}
