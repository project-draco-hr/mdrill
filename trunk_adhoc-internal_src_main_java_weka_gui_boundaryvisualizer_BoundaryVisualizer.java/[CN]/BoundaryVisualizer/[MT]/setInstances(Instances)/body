{
  if (inst == null) {
    m_trainingInstances=inst;
    m_classPanel.setInstances(m_trainingInstances);
    return;
  }
  int numCount=0;
  for (int i=0; i < inst.numAttributes(); i++) {
    if (inst.attribute(i).isNumeric()) {
      numCount++;
    }
  }
  if (numCount < 2) {
    JOptionPane.showMessageDialog(null,"We need at least two numeric " + "attributes in order to visualize!");
    return;
  }
  m_trainingInstances=inst;
  m_classPanel.setInstances(m_trainingInstances);
  String[] classAttNames=new String[m_trainingInstances.numAttributes()];
  final Vector xAttNames=new Vector();
  Vector yAttNames=new Vector();
  for (int i=0; i < m_trainingInstances.numAttributes(); i++) {
    classAttNames[i]=m_trainingInstances.attribute(i).name();
    String type=" (" + Attribute.typeToStringShort(m_trainingInstances.attribute(i)) + ")";
    classAttNames[i]+=type;
    if (m_trainingInstances.attribute(i).isNumeric()) {
      xAttNames.addElement("X: " + classAttNames[i]);
      yAttNames.addElement("Y: " + classAttNames[i]);
    }
  }
  m_classAttBox.setModel(new DefaultComboBoxModel(classAttNames));
  m_xAttBox.setModel(new DefaultComboBoxModel(xAttNames));
  m_yAttBox.setModel(new DefaultComboBoxModel(yAttNames));
  if (xAttNames.size() > 1) {
    m_yAttBox.setSelectedIndex(1);
  }
  m_classAttBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      configureForClassAttribute();
    }
  }
);
  m_xAttBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        computeBounds();
        repaint();
        try {
          plotTrainingData();
        }
 catch (        Exception ex) {
          ex.printStackTrace();
        }
      }
    }
  }
);
  m_yAttBox.addItemListener(new ItemListener(){
    public void itemStateChanged(    ItemEvent e){
      if (e.getStateChange() == ItemEvent.SELECTED) {
        computeBounds();
        repaint();
        try {
          plotTrainingData();
        }
 catch (        Exception ex) {
          ex.printStackTrace();
        }
      }
    }
  }
);
  if (classAttNames.length > 0)   m_classAttBox.setSelectedIndex(classAttNames.length - 1);
  setUpClassValueSelectorCB();
  configureForClassAttribute();
  m_classPanel.setCindex(m_classAttBox.getSelectedIndex());
  plotTrainingData();
  computeBounds();
  revalidate();
  repaint();
  if (getTopLevelAncestor() instanceof java.awt.Window) {
    ((java.awt.Window)getTopLevelAncestor()).pack();
  }
}
