{
  final String type=System.getProperty("type",DEFAULT_DATA_TYPE);
  HttpURLConnection urlc=null;
  try {
    try {
      urlc=(HttpURLConnection)solrUrl.openConnection();
      try {
        urlc.setRequestMethod("POST");
      }
 catch (      ProtocolException e) {
        fatal("Shouldn't happen: HttpURLConnection doesn't support POST??" + e);
      }
      urlc.setDoOutput(true);
      urlc.setDoInput(true);
      urlc.setUseCaches(false);
      urlc.setAllowUserInteraction(false);
      urlc.setRequestProperty("Content-type",type);
      if (null != length)       urlc.setFixedLengthStreamingMode(length);
    }
 catch (    IOException e) {
      fatal("Connection error (is Solr running at " + solrUrl + " ?): "+ e);
    }
    OutputStream out=null;
    try {
      out=urlc.getOutputStream();
      pipe(data,out);
    }
 catch (    IOException e) {
      fatal("IOException while posting data: " + e);
    }
 finally {
      try {
        if (out != null)         out.close();
      }
 catch (      IOException x) {
      }
    }
    InputStream in=null;
    try {
      if (HttpURLConnection.HTTP_OK != urlc.getResponseCode()) {
        fatal("Solr returned an error #" + urlc.getResponseCode() + " "+ urlc.getResponseMessage());
      }
      in=urlc.getInputStream();
      pipe(in,output);
    }
 catch (    IOException e) {
      fatal("IOException while reading response: " + e);
    }
 finally {
      try {
        if (in != null)         in.close();
      }
 catch (      IOException x) {
      }
    }
  }
  finally {
    if (urlc != null)     urlc.disconnect();
  }
}
