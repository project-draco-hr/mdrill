{
  Shape entityArea=null;
  double x1=dataset.getXValue(series,item);
  double y1=dataset.getYValue(series,item);
  if (Double.isNaN(y1) || Double.isNaN(x1)) {
    return;
  }
  PlotOrientation orientation=plot.getOrientation();
  RectangleEdge xAxisLocation=plot.getDomainAxisEdge();
  RectangleEdge yAxisLocation=plot.getRangeAxisEdge();
  double transX1=domainAxis.valueToJava2D(x1,dataArea,xAxisLocation);
  double transY1=rangeAxis.valueToJava2D(y1,dataArea,yAxisLocation);
  if (getItemShapeVisible(series,item)) {
    Shape shape=getItemShape(series,item);
    if (orientation == PlotOrientation.HORIZONTAL) {
      shape=ShapeUtilities.createTranslatedShape(shape,transY1,transX1);
    }
 else     if (orientation == PlotOrientation.VERTICAL) {
      shape=ShapeUtilities.createTranslatedShape(shape,transX1,transY1);
    }
    entityArea=shape;
    if (shape.intersects(dataArea)) {
      if (getItemShapeFilled(series,item)) {
        if (this.useFillPaint) {
          g2.setPaint(getItemFillPaint(series,item));
        }
 else {
          g2.setPaint(getItemPaint(series,item));
        }
        g2.fill(shape);
      }
      if (this.drawOutlines) {
        if (getUseOutlinePaint()) {
          g2.setPaint(getItemOutlinePaint(series,item));
        }
 else {
          g2.setPaint(getItemPaint(series,item));
        }
        g2.setStroke(getItemOutlineStroke(series,item));
        g2.draw(shape);
      }
    }
  }
  double xx=transX1;
  double yy=transY1;
  if (orientation == PlotOrientation.HORIZONTAL) {
    xx=transY1;
    yy=transX1;
  }
  if (isItemLabelVisible(series,item)) {
    drawItemLabel(g2,orientation,dataset,series,item,xx,yy,(y1 < 0.0));
  }
  int domainAxisIndex=plot.getDomainAxisIndex(domainAxis);
  int rangeAxisIndex=plot.getRangeAxisIndex(rangeAxis);
  updateCrosshairValues(crosshairState,x1,y1,domainAxisIndex,rangeAxisIndex,transX1,transY1,orientation);
  if (entities != null && isPointInRect(dataArea,xx,yy)) {
    addEntity(entities,entityArea,dataset,series,item,xx,yy);
  }
}
