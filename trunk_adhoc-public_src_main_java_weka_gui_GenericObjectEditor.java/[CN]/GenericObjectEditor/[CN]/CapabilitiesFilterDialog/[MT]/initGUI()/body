{
  JPanel panel;
  CheckBoxListModel model;
  setTitle("Filtering Capabilities...");
  setLayout(new BorderLayout());
  panel=new JPanel(new BorderLayout());
  panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  getContentPane().add(panel,BorderLayout.NORTH);
  m_InfoLabel.setText("<html>" + m_ClassType.getName().replaceAll(".*\\.","") + "s"+ " have to support <i>at least</i> the following capabilities <br>"+ "(the ones highlighted <font color=\""+ GOETreeNode.NO_SUPPORT+ "\">"+ GOETreeNode.NO_SUPPORT+ "</font> don't meet these requirements <br>"+ "the ones highlighted  <font color=\""+ GOETreeNode.MAYBE_SUPPORT+ "\">"+ GOETreeNode.MAYBE_SUPPORT+ "</font> possibly meet them):"+ "</html>");
  panel.add(m_InfoLabel,BorderLayout.CENTER);
  getContentPane().add(new JScrollPane(m_List),BorderLayout.CENTER);
  model=(CheckBoxListModel)m_List.getModel();
  for (  Capability cap : Capability.values())   model.addElement(cap);
  panel=new JPanel(new FlowLayout(FlowLayout.CENTER));
  getContentPane().add(panel,BorderLayout.SOUTH);
  m_OkButton.setMnemonic('O');
  m_OkButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      updateCapabilities();
      if (m_CapabilitiesFilter == null)       m_CapabilitiesFilter=new Capabilities(null);
      m_CapabilitiesFilter.assign(m_Capabilities);
      m_Self.setVisible(false);
      showPopup();
    }
  }
);
  panel.add(m_OkButton);
  m_CancelButton.setMnemonic('C');
  m_CancelButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_Self.setVisible(false);
      showPopup();
    }
  }
);
  panel.add(m_CancelButton);
  pack();
}
