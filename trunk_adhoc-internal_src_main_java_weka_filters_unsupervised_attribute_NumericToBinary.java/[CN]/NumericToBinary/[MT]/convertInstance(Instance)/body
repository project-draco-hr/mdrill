{
  Instance inst=null;
  if (instance instanceof SparseInstance) {
    double[] vals=new double[instance.numValues()];
    int[] newIndices=new int[instance.numValues()];
    for (int j=0; j < instance.numValues(); j++) {
      Attribute att=getInputFormat().attribute(instance.index(j));
      if ((!att.isNumeric()) || (instance.index(j) == getInputFormat().classIndex())) {
        vals[j]=instance.valueSparse(j);
      }
 else {
        if (instance.isMissingSparse(j)) {
          vals[j]=instance.valueSparse(j);
        }
 else {
          vals[j]=1;
        }
      }
      newIndices[j]=instance.index(j);
    }
    inst=new SparseInstance(instance.weight(),vals,newIndices,outputFormatPeek().numAttributes());
  }
 else {
    double[] vals=new double[outputFormatPeek().numAttributes()];
    for (int j=0; j < getInputFormat().numAttributes(); j++) {
      Attribute att=getInputFormat().attribute(j);
      if ((!att.isNumeric()) || (j == getInputFormat().classIndex())) {
        vals[j]=instance.value(j);
      }
 else {
        if (instance.isMissing(j) || (instance.value(j) == 0)) {
          vals[j]=instance.value(j);
        }
 else {
          vals[j]=1;
        }
      }
    }
    inst=new DenseInstance(instance.weight(),vals);
  }
  inst.setDataset(instance.dataset());
  push(inst);
}
