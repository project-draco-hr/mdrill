{
  if (ex == null) {
    return linkList;
  }
  if (ex instanceof OrExpression || ex instanceof AndExpression) {
    parent.put("subQuery","1");
    parent.put("filter",(ex instanceof OrExpression) ? "OR" : "AND");
    BinaryExpression be=(BinaryExpression)ex;
    generateList(be.getLeftExpression(),linkList,parent);
    generateList(be.getRightExpression(),linkList,parent);
  }
 else   if (ex instanceof Parenthesis) {
    JSONArray sublist=new JSONArray();
    JSONObject subQuery=new JSONObject();
    subQuery.put("subQuery","1");
    subQuery.put("filter","AND");
    subQuery.put("list",sublist);
    Expression exp=getExpressionWithoutParenthesis(ex);
    linkList.put(subQuery);
    generateList(exp,sublist,subQuery);
  }
 else {
    JSONObject item=new JSONObject();
    processExpression(ex,item);
    linkList.put(item);
  }
  return linkList;
}
