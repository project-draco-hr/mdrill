{
  ObjectExpression oe=new ObjectExpression();
  Object columnObj=invokeMethod(e,"getLeftExpression");
  if (columnObj instanceof LongValue) {
    LongValue longValue=(LongValue)columnObj;
    oe.setColumnname(longValue.getStringValue());
  }
 else {
    Column column=(Column)invokeMethod(e,"getLeftExpression");
    oe.setColumnname(column.getColumnName());
  }
  if (e instanceof BinaryExpression) {
    BinaryExpression be=(BinaryExpression)e;
    oe.setExp(be.getStringExpression());
    if (be.getRightExpression() instanceof Function) {
      oe.setValue(invokeMethod(be.getRightExpression(),"toString"));
    }
 else {
      oe.setValue(invokeMethod(be.getRightExpression(),"getValue"));
    }
  }
 else {
    oe.setExp((String)invokeMethod(e,"toString"));
  }
  JSONObject subitem=new JSONObject();
  String op=oe.getExp();
  String colname=oe.getColumnname();
  String val=String.valueOf(oe.getValue());
  JSONArray rtn=new JSONArray();
  rtn.put(val);
  subitem.put("value",rtn);
  if (op.equals("=")) {
    subitem.put("operate","1");
  }
 else   if (op.equals("<>")) {
    subitem.put("operate","2");
  }
 else   if (op.equals(">=")) {
    subitem.put("operate","3");
  }
 else   if (op.equals(">")) {
    subitem.put("operate","13");
  }
 else   if (op.equals("<=")) {
    subitem.put("operate","4");
  }
 else   if (op.equals("<")) {
    subitem.put("operate","14");
  }
 else   if (op.toLowerCase().equals("like")) {
    subitem.put("operate","1000");
    subitem.put("value",colname + ":" + transValue(val.replaceAll("%","*")));
    colname=String.valueOf(Math.random());
  }
 else   if (op.indexOf("NOT IN") >= 0) {
    String[] cols=op.split("NOT IN");
    String list=cols[1].replaceAll("^[ ]*\\(","").replaceAll("\\)[ ]*$","");
    subitem.put("operate","7");
    subitem.put("value",toJSONArray(list,","));
  }
 else   if (op.indexOf("IN") >= 0) {
    String[] cols=op.split("IN");
    String list=cols[1].replaceAll("^[ ]*\\(","").replaceAll("\\)[ ]*$","");
    subitem.put("operate","5");
    subitem.put("value",toJSONArray(list,","));
  }
 else {
    subitem.put("operate",op);
    subitem.put("value",toJSONArray(val,","));
  }
  item.put(colname,subitem);
  return oe;
}
