{
  m_SingleText=text;
  if (text != null) {
    m_Printer=new PrintableComponent(m_SingleText);
  }
  m_List.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  m_List.addMouseListener(new RMouseAdapter(){
    private static final long serialVersionUID=-9015397020486290479L;
    public void mouseClicked(    MouseEvent e){
      if ((e.getModifiers() & InputEvent.BUTTON1_MASK) == InputEvent.BUTTON1_MASK) {
        if (((e.getModifiers() & InputEvent.SHIFT_DOWN_MASK) == 0) && ((e.getModifiers() & InputEvent.CTRL_DOWN_MASK) == 0)) {
          int index=m_List.locationToIndex(e.getPoint());
          if ((index != -1) && (m_SingleText != null)) {
            setSingle((String)m_Model.elementAt(index));
          }
        }
      }
 else {
        if (m_HandleRightClicks) {
          int index=m_List.locationToIndex(e.getPoint());
          if (index != -1) {
            String name=(String)m_Model.elementAt(index);
            openFrame(name);
          }
        }
      }
    }
  }
);
  m_List.addKeyListener(new RKeyAdapter(){
    private static final long serialVersionUID=7910681776999302344L;
    public void keyReleased(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_DELETE) {
        int selected=m_List.getSelectedIndex();
        if (selected != -1) {
          removeResult((String)m_Model.elementAt(selected));
        }
      }
    }
  }
);
  m_List.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      if (!e.getValueIsAdjusting()) {
        ListSelectionModel lm=(ListSelectionModel)e.getSource();
        for (int i=e.getFirstIndex(); i <= e.getLastIndex(); i++) {
          if (lm.isSelectedIndex(i)) {
            if ((i != -1) && (m_SingleText != null)) {
              setSingle((String)m_Model.elementAt(i));
            }
            break;
          }
        }
      }
    }
  }
);
  setLayout(new BorderLayout());
  final JScrollPane js=new JScrollPane(m_List);
  js.getViewport().addChangeListener(new ChangeListener(){
    private int lastHeight;
    public void stateChanged(    ChangeEvent e){
      JViewport vp=(JViewport)e.getSource();
      int h=vp.getViewSize().height;
      if (h != lastHeight) {
        lastHeight=h;
        int x=h - vp.getExtentSize().height;
        vp.setViewPosition(new Point(0,x));
      }
    }
  }
);
  add(js,BorderLayout.CENTER);
}
