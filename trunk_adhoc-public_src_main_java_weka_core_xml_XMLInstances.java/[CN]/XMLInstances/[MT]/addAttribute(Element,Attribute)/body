{
  Element node;
  Element child;
  Element property;
  Element label;
  String tmpStr;
  Enumeration enm;
  int i;
  node=m_Document.createElement(TAG_ATTRIBUTE);
  parent.appendChild(node);
  node.setAttribute(ATT_NAME,validContent(att.name()));
switch (att.type()) {
case Attribute.NUMERIC:
    node.setAttribute(ATT_TYPE,VAL_NUMERIC);
  break;
case Attribute.DATE:
node.setAttribute(ATT_TYPE,VAL_DATE);
break;
case Attribute.NOMINAL:
node.setAttribute(ATT_TYPE,VAL_NOMINAL);
break;
case Attribute.STRING:
node.setAttribute(ATT_TYPE,VAL_STRING);
break;
case Attribute.RELATIONAL:
node.setAttribute(ATT_TYPE,VAL_RELATIONAL);
break;
default :
node.setAttribute(ATT_TYPE,"???");
}
if (att.isNominal()) {
child=m_Document.createElement(TAG_LABELS);
node.appendChild(child);
enm=att.enumerateValues();
while (enm.hasMoreElements()) {
tmpStr=enm.nextElement().toString();
label=m_Document.createElement(TAG_LABEL);
child.appendChild(label);
label.appendChild(m_Document.createTextNode(validContent(tmpStr)));
}
}
if (att.isDate()) node.setAttribute(ATT_FORMAT,validContent(att.getDateFormat()));
if (m_Instances.classIndex() > -1) {
if (att == m_Instances.classAttribute()) node.setAttribute(ATT_CLASS,VAL_YES);
}
if ((att.getMetadata() != null) && (att.getMetadata().size() > 0)) {
child=m_Document.createElement(TAG_METADATA);
node.appendChild(child);
enm=att.getMetadata().propertyNames();
while (enm.hasMoreElements()) {
tmpStr=enm.nextElement().toString();
property=m_Document.createElement(TAG_PROPERTY);
child.appendChild(property);
property.setAttribute(ATT_NAME,validContent(tmpStr));
property.appendChild(m_Document.createTextNode(validContent(att.getMetadata().getProperty(tmpStr,""))));
}
}
if (att.isRelationValued()) {
child=m_Document.createElement(TAG_ATTRIBUTES);
node.appendChild(child);
for (i=0; i < att.relation().numAttributes(); i++) addAttribute(child,att.relation().attribute(i));
}
}
