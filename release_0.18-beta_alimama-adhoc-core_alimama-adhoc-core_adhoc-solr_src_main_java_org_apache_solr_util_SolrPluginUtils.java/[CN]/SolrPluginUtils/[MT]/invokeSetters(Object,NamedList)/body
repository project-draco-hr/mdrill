{
  if (initArgs == null)   return;
  Class clazz=bean.getClass();
  Method[] methods=clazz.getMethods();
  Iterator<Map.Entry<String,Object>> iterator=initArgs.iterator();
  while (iterator.hasNext()) {
    Map.Entry<String,Object> entry=iterator.next();
    String key=entry.getKey();
    String setterName="set" + String.valueOf(Character.toUpperCase(key.charAt(0))) + key.substring(1);
    Method method=null;
    try {
      for (      Method m : methods) {
        if (m.getName().equals(setterName) && m.getParameterTypes().length == 1) {
          method=m;
          break;
        }
      }
      if (method == null) {
        throw new RuntimeException("no setter corrresponding to '" + key + "' in "+ clazz.getName());
      }
      Class pClazz=method.getParameterTypes()[0];
      Object val=entry.getValue();
      method.invoke(bean,val);
    }
 catch (    InvocationTargetException e1) {
      throw new RuntimeException("Error invoking setter " + setterName + " on class : "+ clazz.getName(),e1);
    }
catch (    IllegalAccessException e1) {
      throw new RuntimeException("Error invoking setter " + setterName + " on class : "+ clazz.getName(),e1);
    }
  }
}
