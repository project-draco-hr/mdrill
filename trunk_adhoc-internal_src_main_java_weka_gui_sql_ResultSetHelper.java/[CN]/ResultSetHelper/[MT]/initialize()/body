{
  ResultSetMetaData meta;
  int i;
  if (m_Initialized)   return;
  try {
    meta=m_ResultSet.getMetaData();
    m_ColumnNames=new String[meta.getColumnCount()];
    for (i=1; i <= meta.getColumnCount(); i++)     m_ColumnNames[i - 1]=meta.getColumnLabel(i);
    m_NumericColumns=new boolean[meta.getColumnCount()];
    for (i=1; i <= meta.getColumnCount(); i++)     m_NumericColumns[i - 1]=typeIsNumeric(meta.getColumnType(i));
    m_ColumnClasses=new Class[meta.getColumnCount()];
    for (i=1; i <= meta.getColumnCount(); i++) {
      try {
        m_ColumnClasses[i - 1]=typeToClass(meta.getColumnType(i));
      }
 catch (      Exception ex) {
        m_ColumnClasses[i - 1]=String.class;
      }
    }
    m_ColumnCount=meta.getColumnCount();
    if (m_ResultSet.getType() == ResultSet.TYPE_FORWARD_ONLY) {
      m_RowCount=-1;
    }
 else {
      m_RowCount=0;
      m_ResultSet.first();
      if (m_MaxRows > 0) {
        try {
          m_ResultSet.absolute(m_MaxRows);
          m_RowCount=m_ResultSet.getRow();
        }
 catch (        Exception ex) {
        }
      }
 else {
        m_ResultSet.last();
        m_RowCount=m_ResultSet.getRow();
      }
      try {
        if ((m_RowCount == 0) && (m_ResultSet.first())) {
          m_RowCount=1;
          while (m_ResultSet.next()) {
            m_RowCount++;
            if (m_ResultSet.getRow() == m_MaxRows)             break;
          }
          ;
        }
      }
 catch (      Exception e) {
      }
    }
    m_Initialized=true;
  }
 catch (  Exception ex) {
  }
}
