{
  String retval=null;
  Token tk=null;
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case S_IDENTIFIER:
    tk=jj_consume_token(S_IDENTIFIER);
  retval=tk.image;
break;
case K_NULL:
tk=jj_consume_token(K_NULL);
retval=tk.image;
break;
case K_NOT:
tk=jj_consume_token(K_NOT);
retval=tk.image;
break;
case K_PRIMARY:
tk=jj_consume_token(K_PRIMARY);
retval=tk.image;
break;
case K_KEY:
tk=jj_consume_token(K_KEY);
retval=tk.image;
break;
case S_CHAR_LITERAL:
tk=jj_consume_token(S_CHAR_LITERAL);
retval=tk.image;
break;
case S_INTEGER:
tk=jj_consume_token(S_INTEGER);
retval=tk.image;
break;
case S_DOUBLE:
tk=jj_consume_token(S_DOUBLE);
retval=tk.image;
break;
case 77:
jj_consume_token(77);
retval="=";
break;
case 79:
retval=AList();
break;
default :
jj_la1[146]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
{
if (true) return retval;
}
throw new Error("Missing return statement in function");
}
