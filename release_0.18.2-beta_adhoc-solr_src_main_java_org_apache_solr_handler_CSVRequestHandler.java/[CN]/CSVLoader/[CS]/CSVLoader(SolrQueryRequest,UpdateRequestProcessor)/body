{
  this.processor=processor;
  this.params=req.getParams();
  schema=req.getSchema();
  templateAdd=new AddUpdateCommand();
  templateAdd.allowDups=false;
  templateAdd.overwriteCommitted=true;
  templateAdd.overwritePending=true;
  if (params.getBool(OVERWRITE,true)) {
    templateAdd.allowDups=false;
    templateAdd.overwriteCommitted=true;
    templateAdd.overwritePending=true;
  }
 else {
    templateAdd.allowDups=true;
    templateAdd.overwriteCommitted=false;
    templateAdd.overwritePending=false;
  }
  templateAdd.commitWithin=params.getInt(UpdateParams.COMMIT_WITHIN,-1);
  strategy=new CSVStrategy(',','"',CSVStrategy.COMMENTS_DISABLED,CSVStrategy.ESCAPE_DISABLED,false,false,false,true);
  String sep=params.get(SEPARATOR);
  if (sep != null) {
    if (sep.length() != 1)     throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Invalid separator:'" + sep + "'");
    strategy.setDelimiter(sep.charAt(0));
  }
  String encapsulator=params.get(ENCAPSULATOR);
  if (encapsulator != null) {
    if (encapsulator.length() != 1)     throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Invalid encapsulator:'" + encapsulator + "'");
  }
  String escape=params.get(ESCAPE);
  if (escape != null) {
    if (escape.length() != 1)     throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"Invalid escape:'" + escape + "'");
  }
  if (encapsulator == null && escape != null) {
    strategy.setEncapsulator(CSVStrategy.ENCAPSULATOR_DISABLED);
    strategy.setEscape(escape.charAt(0));
  }
 else {
    if (encapsulator != null) {
      strategy.setEncapsulator(encapsulator.charAt(0));
    }
    if (escape != null) {
      char ch=escape.charAt(0);
      strategy.setEscape(ch);
      if (ch == '\\') {
        strategy.setUnicodeEscapeInterpretation(true);
      }
    }
  }
  String fn=params.get(FIELDNAMES);
  fieldnames=fn != null ? commaSplit.split(fn,-1) : null;
  Boolean hasHeader=params.getBool(HEADER);
  skipLines=params.getInt(SKIPLINES,0);
  if (fieldnames == null) {
    if (null == hasHeader) {
      hasHeader=true;
    }
 else     if (!hasHeader) {
      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"CSVLoader: must specify fieldnames=<fields>* or header=true");
    }
  }
 else {
    if (hasHeader != null && hasHeader)     skipLines++;
    prepareFields();
  }
}
