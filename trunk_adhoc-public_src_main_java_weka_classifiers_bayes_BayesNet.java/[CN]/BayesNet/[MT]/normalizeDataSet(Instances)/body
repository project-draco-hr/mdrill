{
  m_DiscretizeFilter=null;
  m_MissingValuesFilter=null;
  boolean bHasNonNominal=false;
  boolean bHasMissingValues=false;
  Enumeration enu=instances.enumerateAttributes();
  while (enu.hasMoreElements()) {
    Attribute attribute=(Attribute)enu.nextElement();
    if (attribute.type() != Attribute.NOMINAL) {
      m_nNonDiscreteAttribute=attribute.index();
      bHasNonNominal=true;
    }
    Enumeration enum2=instances.enumerateInstances();
    while (enum2.hasMoreElements()) {
      if (((Instance)enum2.nextElement()).isMissing(attribute)) {
        bHasMissingValues=true;
      }
    }
  }
  if (bHasNonNominal) {
    System.err.println("Warning: discretizing data set");
    m_DiscretizeFilter=new Discretize();
    m_DiscretizeFilter.setInputFormat(instances);
    instances=Filter.useFilter(instances,m_DiscretizeFilter);
  }
  if (bHasMissingValues) {
    System.err.println("Warning: filling in missing values in data set");
    m_MissingValuesFilter=new ReplaceMissingValues();
    m_MissingValuesFilter.setInputFormat(instances);
    instances=Filter.useFilter(instances,m_MissingValuesFilter);
  }
  return instances;
}
