{
  NamedList response=new SimpleOrderedMap();
  boolean sort=!TermsParams.TERMS_SORT_INDEX.equals(params.get(TermsParams.TERMS_SORT,TermsParams.TERMS_SORT_COUNT));
  long freqmin=1;
  String s=params.get(TermsParams.TERMS_MINCOUNT);
  if (s != null)   freqmin=Long.parseLong(s);
  long freqmax=-1;
  s=params.get(TermsParams.TERMS_MAXCOUNT);
  if (s != null)   freqmax=Long.parseLong(s);
  if (freqmax < 0) {
    freqmax=Long.MAX_VALUE;
  }
  long limit=10;
  s=params.get(TermsParams.TERMS_LIMIT);
  if (s != null)   limit=Long.parseLong(s);
  if (limit < 0) {
    limit=Long.MAX_VALUE;
  }
  for (  String key : fieldmap.keySet()) {
    NamedList fieldterms=new SimpleOrderedMap();
    TermsResponse.Term[] data=null;
    if (sort) {
      data=getCountSorted(fieldmap.get(key));
    }
 else {
      data=getLexSorted(fieldmap.get(key));
    }
    int cnt=0;
    for (    TermsResponse.Term tc : data) {
      if (tc.getFrequency() >= freqmin && tc.getFrequency() <= freqmax) {
        fieldterms.add(tc.getTerm(),num(tc.getFrequency()));
        cnt++;
      }
      if (cnt >= limit) {
        break;
      }
    }
    response.add(key,fieldterms);
  }
  return response;
}
