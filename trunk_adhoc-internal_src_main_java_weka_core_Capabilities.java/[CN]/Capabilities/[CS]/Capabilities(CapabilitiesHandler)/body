{
  super();
  setOwner(owner);
  m_Capabilities=new HashSet<Capability>();
  m_Dependencies=new HashSet<Capability>();
  if (PROPERTIES == null) {
    try {
      PROPERTIES=Utils.readProperties(PROPERTIES_FILE);
    }
 catch (    Exception e) {
      e.printStackTrace();
      PROPERTIES=new Properties();
    }
  }
  m_Test=Boolean.parseBoolean(PROPERTIES.getProperty("Test","true"));
  m_InstancesTest=Boolean.parseBoolean(PROPERTIES.getProperty("InstancesTest","true")) && m_Test;
  m_AttributeTest=Boolean.parseBoolean(PROPERTIES.getProperty("AttributeTest","true")) && m_Test;
  m_MissingValuesTest=Boolean.parseBoolean(PROPERTIES.getProperty("MissingValuesTest","true")) && m_Test;
  m_MissingClassValuesTest=Boolean.parseBoolean(PROPERTIES.getProperty("MissingClassValuesTest","true")) && m_Test;
  m_MinimumNumberInstancesTest=Boolean.parseBoolean(PROPERTIES.getProperty("MinimumNumberInstancesTest","true")) && m_Test;
  if (owner instanceof weka.classifiers.UpdateableClassifier || owner instanceof weka.clusterers.UpdateableClusterer) {
    setMinimumNumberInstances(0);
  }
}
