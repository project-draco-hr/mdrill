{
  ResultSetMetaData md=rs.getMetaData();
  int numAttributes=md.getColumnCount();
  double[] vals=new double[numAttributes];
  m_structure.delete();
  for (int i=1; i <= numAttributes; i++) {
switch (m_DataBaseConnection.translateDBColumnType(md.getColumnTypeName(i))) {
case DatabaseConnection.STRING:
      String str=rs.getString(i);
    if (rs.wasNull()) {
      vals[i - 1]=Utils.missingValue();
    }
 else {
      Double index=(Double)m_nominalIndexes[i - 1].get(str);
      if (index == null) {
        index=new Double(m_structure.attribute(i - 1).addStringValue(str));
      }
      vals[i - 1]=index.doubleValue();
    }
  break;
case DatabaseConnection.TEXT:
str=rs.getString(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
Double index=(Double)m_nominalIndexes[i - 1].get(str);
if (index == null) {
  index=new Double(m_structure.attribute(i - 1).addStringValue(str));
}
vals[i - 1]=index.doubleValue();
}
break;
case DatabaseConnection.BOOL:
boolean boo=rs.getBoolean(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(boo ? 1.0 : 0.0);
}
break;
case DatabaseConnection.DOUBLE:
double dd=rs.getDouble(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=dd;
}
break;
case DatabaseConnection.BYTE:
byte by=rs.getByte(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)by;
}
break;
case DatabaseConnection.SHORT:
short sh=rs.getShort(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)sh;
}
break;
case DatabaseConnection.INTEGER:
int in=rs.getInt(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)in;
}
break;
case DatabaseConnection.LONG:
long lo=rs.getLong(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)lo;
}
break;
case DatabaseConnection.FLOAT:
float fl=rs.getFloat(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)fl;
}
break;
case DatabaseConnection.DATE:
Date date=rs.getDate(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)date.getTime();
}
break;
case DatabaseConnection.TIME:
Time time=rs.getTime(i);
if (rs.wasNull()) {
vals[i - 1]=Utils.missingValue();
}
 else {
vals[i - 1]=(double)time.getTime();
}
break;
default :
vals[i - 1]=Utils.missingValue();
}
}
Instance inst;
if (m_CreateSparseData) inst=new SparseInstance(1.0,vals);
 else inst=new DenseInstance(1.0,vals);
if (m_DataBaseConnection.getUpperCase()) m_idColumn=m_idColumn.toUpperCase();
if (m_structure.attribute(0).name().equals(m_idColumn)) {
inst.deleteAttributeAt(0);
m_oldStructure.add(inst);
inst=m_oldStructure.instance(0);
m_oldStructure.delete(0);
}
 else {
m_structure.add(inst);
inst=m_structure.instance(0);
m_structure.delete(0);
}
return inst;
}
