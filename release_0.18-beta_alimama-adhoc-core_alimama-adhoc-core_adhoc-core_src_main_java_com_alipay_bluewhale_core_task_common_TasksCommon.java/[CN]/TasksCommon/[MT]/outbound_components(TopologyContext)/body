{
  Map<String,Map<String,MkGrouper>> rr=new HashMap<String,Map<String,MkGrouper>>();
  Map<String,Map<String,Grouping>> output_groupings=topology_context.getThisTargets();
  for (  Entry<String,Map<String,Grouping>> entry : output_groupings.entrySet()) {
    Map<String,Grouping> component_grouping=entry.getValue();
    String stream_id=entry.getKey();
    Fields out_fields=topology_context.getThisOutputFields(stream_id);
    Map<String,MkGrouper> componentGrouper=new HashMap<String,MkGrouper>();
    for (    Entry<String,Grouping> cg : component_grouping.entrySet()) {
      String component=cg.getKey();
      Grouping tgrouping=cg.getValue();
      int num_tasks=topology_context.getComponentTasks(component).size();
      if (num_tasks > 0) {
        MkGrouper grouper=new MkGrouper(out_fields,tgrouping,num_tasks);
        componentGrouper.put(component,grouper);
      }
    }
    if (componentGrouper.size() > 0) {
      rr.put(stream_id,componentGrouper);
    }
  }
  return rr;
}
