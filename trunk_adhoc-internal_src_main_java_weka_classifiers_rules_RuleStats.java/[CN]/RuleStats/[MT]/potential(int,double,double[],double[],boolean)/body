{
  double pcov=rulesetStat[0] - ruleStat[0];
  double puncov=rulesetStat[1] + ruleStat[0];
  double pfp=rulesetStat[4] - ruleStat[4];
  double pfn=rulesetStat[5] + ruleStat[2];
  double dataDLWith=dataDL(expFPOverErr,rulesetStat[0],rulesetStat[1],rulesetStat[4],rulesetStat[5]);
  double theoryDLWith=theoryDL(index);
  double dataDLWithout=dataDL(expFPOverErr,pcov,puncov,pfp,pfn);
  double potential=dataDLWith + theoryDLWith - dataDLWithout;
  double err=ruleStat[4] / ruleStat[0];
  boolean overErr=Utils.grOrEq(err,0.5);
  if (!checkErr)   overErr=false;
  if (Utils.grOrEq(potential,0.0) || overErr) {
    rulesetStat[0]=pcov;
    rulesetStat[1]=puncov;
    rulesetStat[4]=pfp;
    rulesetStat[5]=pfn;
    return potential;
  }
 else   return Double.NaN;
}
