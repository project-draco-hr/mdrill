{
  NimbusUtils.validate_distributed_mode(conf);
  NimbusData data=service_handler(conf);
  final ScheduledExecutorService scheduExec=data.getScheduExec();
  MonitorRunnable r1=new MonitorRunnable(data);
  int monitor_freq_secs=(Integer)conf.get(Config.NIMBUS_MONITOR_FREQ_SECS);
  scheduExec.scheduleAtFixedRate(r1,monitor_freq_secs,monitor_freq_secs,TimeUnit.SECONDS);
  String dir_location=StormConfig.masterInbox(conf);
  int inbox_jar_expiration_secs=(Integer)conf.get(Config.NIMBUS_INBOX_JAR_EXPIRATION_SECS);
  CleanRunnable r2=new CleanRunnable(dir_location,inbox_jar_expiration_secs);
  int cleanup_inbox_freq_secs=(Integer)conf.get(Config.NIMBUS_CLEANUP_INBOX_FREQ_SECS);
  scheduExec.scheduleAtFixedRate(r2,cleanup_inbox_freq_secs,cleanup_inbox_freq_secs,TimeUnit.SECONDS);
  Integer thrift_port=(Integer)conf.get(Config.NIMBUS_THRIFT_PORT);
  TNonblockingServerSocket socket=new TNonblockingServerSocket(thrift_port);
  THsHaServer.Args args=new THsHaServer.Args(socket);
  args.workerThreads(64);
  args.protocolFactory(new TBinaryProtocol.Factory());
  final ServiceHandler service_handler=new ServiceHandler(data);
  args.processor(new Nimbus.Processor<Iface>(service_handler));
  final THsHaServer server=new THsHaServer(args);
  Runtime.getRuntime().addShutdownHook(new Thread(){
    public void run(){
      service_handler.shutdown();
      scheduExec.shutdown();
      server.stop();
    }
  }
);
  LOG.info("Starting BlueWhale server...");
  server.serve();
}
