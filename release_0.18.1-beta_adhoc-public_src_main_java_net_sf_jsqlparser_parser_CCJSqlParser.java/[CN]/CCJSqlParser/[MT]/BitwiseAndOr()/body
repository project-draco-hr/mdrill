{
  Expression result=null;
  Expression leftExpression=null;
  Expression rightExpression=null;
  leftExpression=ConcatExpression();
  result=leftExpression;
  label_21:   while (true) {
    if (jj_2_21(2)) {
      ;
    }
 else {
      break label_21;
    }
switch ((jj_ntk == -1) ? jj_ntk() : jj_ntk) {
case 92:
      jj_consume_token(92);
    result=new BitwiseOr();
  break;
case 93:
jj_consume_token(93);
result=new BitwiseAnd();
break;
default :
jj_la1[102]=jj_gen;
jj_consume_token(-1);
throw new ParseException();
}
rightExpression=ConcatExpression();
BinaryExpression binExp=(BinaryExpression)result;
binExp.setLeftExpression(leftExpression);
binExp.setRightExpression(rightExpression);
leftExpression=result;
}
{
if (true) return result;
}
throw new Error("Missing return statement in function");
}
