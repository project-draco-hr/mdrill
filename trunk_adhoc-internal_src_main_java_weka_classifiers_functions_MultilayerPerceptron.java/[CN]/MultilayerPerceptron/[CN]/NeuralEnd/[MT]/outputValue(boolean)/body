{
  if (Double.isNaN(m_unitValue) && calculate) {
    if (m_input) {
      if (m_currentInstance.isMissing(m_link)) {
        m_unitValue=0;
      }
 else {
        m_unitValue=m_currentInstance.value(m_link);
      }
    }
 else {
      m_unitValue=0;
      for (int noa=0; noa < m_numInputs; noa++) {
        m_unitValue+=m_inputList[noa].outputValue(true);
      }
      if (m_numeric && m_normalizeClass) {
        m_unitValue=m_unitValue * m_attributeRanges[m_instances.classIndex()] + m_attributeBases[m_instances.classIndex()];
      }
    }
  }
  return m_unitValue;
}
