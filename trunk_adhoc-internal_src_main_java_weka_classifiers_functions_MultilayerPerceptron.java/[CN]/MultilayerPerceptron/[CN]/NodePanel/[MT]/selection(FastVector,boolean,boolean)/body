{
  if (v == null) {
    m_selected.removeAllElements();
    repaint();
    return;
  }
  if ((ctrl || m_selected.size() == 0) && left) {
    boolean removed=false;
    for (int noa=0; noa < v.size(); noa++) {
      removed=false;
      for (int nob=0; nob < m_selected.size(); nob++) {
        if (v.elementAt(noa) == m_selected.elementAt(nob)) {
          m_selected.removeElementAt(nob);
          removed=true;
          break;
        }
      }
      if (!removed) {
        m_selected.addElement(v.elementAt(noa));
      }
    }
    repaint();
    return;
  }
  if (left) {
    for (int noa=0; noa < m_selected.size(); noa++) {
      for (int nob=0; nob < v.size(); nob++) {
        NeuralConnection.connect((NeuralConnection)m_selected.elementAt(noa),(NeuralConnection)v.elementAt(nob));
      }
    }
  }
 else   if (m_selected.size() > 0) {
    for (int noa=0; noa < m_selected.size(); noa++) {
      for (int nob=0; nob < v.size(); nob++) {
        NeuralConnection.disconnect((NeuralConnection)m_selected.elementAt(noa),(NeuralConnection)v.elementAt(nob));
        NeuralConnection.disconnect((NeuralConnection)v.elementAt(nob),(NeuralConnection)m_selected.elementAt(noa));
      }
    }
  }
 else {
    for (int noa=0; noa < v.size(); noa++) {
      ((NeuralConnection)v.elementAt(noa)).removeAllInputs();
      ((NeuralConnection)v.elementAt(noa)).removeAllOutputs();
      removeNode((NeuralConnection)v.elementAt(noa));
    }
  }
  repaint();
}
