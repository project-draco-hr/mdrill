{
  Vector newVector=new Vector(14);
  newVector.addElement(new Option("\tLearning Rate for the backpropagation algorithm.\n" + "\t(Value should be between 0 - 1, Default = 0.3).","L",1,"-L <learning rate>"));
  newVector.addElement(new Option("\tMomentum Rate for the backpropagation algorithm.\n" + "\t(Value should be between 0 - 1, Default = 0.2).","M",1,"-M <momentum>"));
  newVector.addElement(new Option("\tNumber of epochs to train through.\n" + "\t(Default = 500).","N",1,"-N <number of epochs>"));
  newVector.addElement(new Option("\tPercentage size of validation set to use to terminate\n" + "\ttraining (if this is non zero it can pre-empt num of epochs.\n" + "\t(Value should be between 0 - 100, Default = 0).","V",1,"-V <percentage size of validation set>"));
  newVector.addElement(new Option("\tThe value used to seed the random number generator\n" + "\t(Value should be >= 0 and and a long, Default = 0).","S",1,"-S <seed>"));
  newVector.addElement(new Option("\tThe consequetive number of errors allowed for validation\n" + "\ttesting before the netwrok terminates.\n" + "\t(Value should be > 0, Default = 20).","E",1,"-E <threshold for number of consequetive errors>"));
  newVector.addElement(new Option("\tGUI will be opened.\n" + "\t(Use this to bring up a GUI).","G",0,"-G"));
  newVector.addElement(new Option("\tAutocreation of the network connections will NOT be done.\n" + "\t(This will be ignored if -G is NOT set)","A",0,"-A"));
  newVector.addElement(new Option("\tA NominalToBinary filter will NOT automatically be used.\n" + "\t(Set this to not use a NominalToBinary filter).","B",0,"-B"));
  newVector.addElement(new Option("\tThe hidden layers to be created for the network.\n" + "\t(Value should be a list of comma separated Natural \n" + "\tnumbers or the letters 'a' = (attribs + classes) / 2, \n"+ "\t'i' = attribs, 'o' = classes, 't' = attribs .+ classes)\n"+ "\tfor wildcard values, Default = a).","H",1,"-H <comma seperated numbers for nodes on each layer>"));
  newVector.addElement(new Option("\tNormalizing a numeric class will NOT be done.\n" + "\t(Set this to not normalize the class if it's numeric).","C",0,"-C"));
  newVector.addElement(new Option("\tNormalizing the attributes will NOT be done.\n" + "\t(Set this to not normalize the attributes).","I",0,"-I"));
  newVector.addElement(new Option("\tReseting the network will NOT be allowed.\n" + "\t(Set this to not allow the network to reset).","R",0,"-R"));
  newVector.addElement(new Option("\tLearning rate decay will occur.\n" + "\t(Set this to cause the learning rate to decay).","D",0,"-D"));
  return newVector.elements();
}
