{
  if (this.smallestPartion == null) {
    return;
  }
  ArrayList<String> toremove=new ArrayList<String>();
  HashSet<String> smallestdays=Partions.partion2Days(smallestPartion,part.parttype);
  String[] smallestdaysarr=smallestdays.toArray(new String[smallestdays.size()]);
  Arrays.sort(smallestdaysarr);
  toremove.clear();
  for (  String strday : this.smallest.keySet()) {
    if (!smallestdays.contains(strday)) {
      toremove.add(strday);
    }
  }
  for (  String rmday : toremove) {
    this.smallest.remove(rmday);
  }
  int smallloopcnt=1;
  if (this.smallest.size() < 1) {
    smallloopcnt=smallestdaysarr.length;
  }
  for (int i=0; i < smallloopcnt; i++) {
    if (i > 0) {
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
      }
    }
    int index=lastsmallDayIndex.incrementAndGet();
    if (index >= smallestdaysarr.length) {
      index=0;
      lastsmallDayIndex.set(0);
    }
    String strday=smallestdaysarr[index];
    long cnt=solrservice.checkSolr(tablename,smallestPartion,strday);
    this.smallest.put(strday,new ShardCount(cnt));
  }
}
