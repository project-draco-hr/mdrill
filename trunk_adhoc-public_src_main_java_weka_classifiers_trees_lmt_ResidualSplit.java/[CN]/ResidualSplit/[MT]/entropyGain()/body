{
  int numSubsets;
  if (m_attribute.isNominal()) {
    numSubsets=m_attribute.numValues();
  }
 else {
    numSubsets=2;
  }
  double[][][] splitDataZs=new double[numSubsets][][];
  double[][][] splitDataWs=new double[numSubsets][][];
  int[] subsetSize=new int[numSubsets];
  for (int i=0; i < m_numInstances; i++) {
    int subset=whichSubset(m_data.instance(i));
    if (subset < 0)     throw new Exception("ResidualSplit: no support for splits on missing values");
    subsetSize[subset]++;
  }
  for (int i=0; i < numSubsets; i++) {
    splitDataZs[i]=new double[subsetSize[i]][];
    splitDataWs[i]=new double[subsetSize[i]][];
  }
  int[] subsetCount=new int[numSubsets];
  for (int i=0; i < m_numInstances; i++) {
    int subset=whichSubset(m_data.instance(i));
    splitDataZs[subset][subsetCount[subset]]=m_dataZs[i];
    splitDataWs[subset][subsetCount[subset]]=m_dataWs[i];
    subsetCount[subset]++;
  }
  double entropyOrig=entropy(m_dataZs,m_dataWs);
  double entropySplit=0.0;
  for (int i=0; i < numSubsets; i++) {
    entropySplit+=entropy(splitDataZs[i],splitDataWs[i]);
  }
  return entropyOrig - entropySplit;
}
