{
  Point2D ul=new Point2D(r.MinPt().x(),r.MaxPt().y());
  Point2D ur=new Point2D(r.MaxPt().x(),r.MaxPt().y());
  Point2D ll=new Point2D(r.MinPt().x(),r.MinPt().y());
  Point2D lr=new Point2D(r.MaxPt().x(),r.MinPt().y());
  if (contains(ul) && contains(ur) && contains(ll)&& contains(lr))   return IntersectCase.CONTAINS;
  Point2D pt0=new Point2D(), pt1=new Point2D();
  LineSegment bottom=new LineSegment(ll,lr);
  if (intersect(bottom,pt0,pt1) > 0)   return IntersectCase.INTERSECTS;
  LineSegment top=new LineSegment(ul,ur);
  if (intersect(top,pt0,pt1) > 0)   return IntersectCase.INTERSECTS;
  LineSegment left=new LineSegment(ll,ul);
  if (intersect(left,pt0,pt1) > 0)   return IntersectCase.INTERSECTS;
  LineSegment right=new LineSegment(lr,ur);
  if (intersect(right,pt0,pt1) > 0)   return IntersectCase.INTERSECTS;
  return (r.contains(center)) ? IntersectCase.WITHIN : IntersectCase.OUTSIDE;
}
