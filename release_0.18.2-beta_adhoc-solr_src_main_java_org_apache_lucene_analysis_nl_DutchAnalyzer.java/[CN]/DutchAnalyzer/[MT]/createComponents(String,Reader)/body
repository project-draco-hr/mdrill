{
  if (matchVersion.onOrAfter(Version.LUCENE_31)) {
    final Tokenizer source=new StandardTokenizer(matchVersion,aReader);
    TokenStream result=new StandardFilter(matchVersion,source);
    result=new LowerCaseFilter(matchVersion,result);
    result=new StopFilter(matchVersion,result,stoptable);
    if (!excltable.isEmpty())     result=new KeywordMarkerFilter(result,excltable);
    if (!stemdict.isEmpty())     result=new StemmerOverrideFilter(matchVersion,result,stemdict);
    result=new SnowballFilter(result,new org.tartarus.snowball.ext.DutchStemmer());
    return new TokenStreamComponents(source,result);
  }
 else {
    final Tokenizer source=new StandardTokenizer(matchVersion,aReader);
    TokenStream result=new StandardFilter(matchVersion,source);
    result=new StopFilter(matchVersion,result,stoptable);
    if (!excltable.isEmpty())     result=new KeywordMarkerFilter(result,excltable);
    result=new DutchStemFilter(result,stemdict);
    return new TokenStreamComponents(source,result);
  }
}
