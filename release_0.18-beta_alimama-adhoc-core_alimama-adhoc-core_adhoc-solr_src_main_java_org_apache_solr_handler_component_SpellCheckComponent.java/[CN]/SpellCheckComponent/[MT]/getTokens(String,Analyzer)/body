{
  Collection<Token> result=new ArrayList<Token>();
  TokenStream ts=analyzer.reusableTokenStream("",new StringReader(q));
  ts.reset();
  CharTermAttribute termAtt=ts.addAttribute(CharTermAttribute.class);
  OffsetAttribute offsetAtt=ts.addAttribute(OffsetAttribute.class);
  TypeAttribute typeAtt=ts.addAttribute(TypeAttribute.class);
  FlagsAttribute flagsAtt=ts.addAttribute(FlagsAttribute.class);
  PayloadAttribute payloadAtt=ts.addAttribute(PayloadAttribute.class);
  PositionIncrementAttribute posIncAtt=ts.addAttribute(PositionIncrementAttribute.class);
  while (ts.incrementToken()) {
    Token token=new Token();
    token.copyBuffer(termAtt.buffer(),0,termAtt.length());
    token.setOffset(offsetAtt.startOffset(),offsetAtt.endOffset());
    token.setType(typeAtt.type());
    token.setFlags(flagsAtt.getFlags());
    token.setPayload(payloadAtt.getPayload());
    token.setPositionIncrement(posIncAtt.getPositionIncrement());
    result.add(token);
  }
  ts.end();
  ts.close();
  return result;
}
