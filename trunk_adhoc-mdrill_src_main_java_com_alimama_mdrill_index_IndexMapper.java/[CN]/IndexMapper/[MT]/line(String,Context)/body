{
  context.getCounter("higo","totalrecord").increment(1);
  String[] values=record.split(split,-1);
  if (!this.validate(values,record,context)) {
    return false;
  }
  String[] res=new String[fields.length];
  for (int i=0; i < fields.length; i++) {
    String fieldName=fields[i];
    String string=(i < values.length) ? values[i] : null;
    String val=parseDefault(string,context);
    if (this.isDate[i]) {
      res[i]=TdateFormat.ensureTdate(val,fieldName);
    }
 else     if (val != null) {
      res[i]=val;
    }
 else     if (this.isString[i]) {
      res[i]="_";
    }
  }
  if (usedthedate && thedateIndex >= 0) {
    if (thedate != null) {
      res[thedateIndex]=thedate;
    }
    res[thedateIndex]=String.valueOf(res[thedateIndex]).replaceAll("-","").replaceAll("_","");
    if (res[thedateIndex] == null || res[thedateIndex].length() != 8) {
      if (debuglines < 100) {
        debuglines++;
        System.out.println("miss thedate values: " + record.replaceAll(split,"#") + "");
      }
      context.getCounter("higo","skiprecords").increment(1);
    }
    context.getCounter("higo","dayrecord_" + String.valueOf(res[thedateIndex])).increment(1);
  }
  if (printlines < 10) {
    printlines++;
    System.out.println("res:" + Arrays.toString(values));
  }
  if (this.containsfilter) {
    int maxlen=res.length;
    for (int i=0; i < this.contains.length; i++) {
      String[] containslist=this.contains[i];
      if (containslist != null) {
        if (i >= maxlen) {
          context.getCounter("higo","skiprecords_filter").increment(1);
          return true;
        }
        String val=res[i];
        for (        String s : containslist) {
          if (val.indexOf(s) < 0) {
            context.getCounter("higo","skiprecords_filter").increment(1);
            return true;
          }
        }
      }
    }
  }
  context.write(new PairWriteable(this.Index++),new DocumentMap(res));
  if (this.isuniqcheck && uniqfieldIndex > 0 && res[uniqfieldIndex] != null) {
    String notempty=res[uniqfieldIndex];
    if (notempty.length() > 0 && !notempty.equals("_")) {
      context.write(new PairWriteable(new Text("uniq_" + notempty)),new DocumentMap());
    }
  }
  return true;
}
