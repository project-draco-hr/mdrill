{
  double[] instance=new double[m_structure.numAttributes()];
  ConverterUtils.getFirstToken(tokenizer);
  if (tokenizer.ttype == StreamTokenizer.TT_EOF) {
    return null;
  }
  int counter=0;
  for (int i=0; i < m_numAttribs; i++) {
    if (i > 0) {
      ConverterUtils.getToken(tokenizer);
    }
    if (!m_ignore[i]) {
      if (tokenizer.ttype == '?') {
        instance[counter++]=Utils.missingValue();
      }
 else {
        String val=tokenizer.sval;
        if (i == m_numAttribs - 1) {
          if (val.charAt(val.length() - 1) == '.') {
            val=val.substring(0,val.length() - 1);
          }
        }
        if (m_structure.attribute(counter).isNominal()) {
          int index=m_structure.attribute(counter).indexOfValue(val);
          if (index == -1) {
            ConverterUtils.errms(tokenizer,"nominal value not declared in " + "header :" + val + " column "+ i);
          }
          instance[counter++]=(double)index;
        }
 else         if (m_structure.attribute(counter).isNumeric()) {
          try {
            instance[counter++]=Double.valueOf(val).doubleValue();
          }
 catch (          NumberFormatException e) {
            ConverterUtils.errms(tokenizer,"number expected");
          }
        }
 else {
          System.err.println("Shouldn't get here");
          System.exit(1);
        }
      }
    }
  }
  return new DenseInstance(1.0,instance);
}
