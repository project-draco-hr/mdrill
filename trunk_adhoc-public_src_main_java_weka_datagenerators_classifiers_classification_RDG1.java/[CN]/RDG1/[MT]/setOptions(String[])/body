{
  String tmpStr;
  super.setOptions(options);
  tmpStr=Utils.getOption('a',options);
  if (tmpStr.length() != 0)   setNumAttributes(Integer.parseInt(tmpStr));
 else   setNumAttributes(defaultNumAttributes());
  tmpStr=Utils.getOption('c',options);
  if (tmpStr.length() != 0)   setNumClasses(Integer.parseInt(tmpStr));
 else   setNumClasses(defaultNumClasses());
  tmpStr=Utils.getOption('R',options);
  if (tmpStr.length() != 0)   setMaxRuleSize(Integer.parseInt(tmpStr));
 else   setMaxRuleSize(defaultMaxRuleSize());
  tmpStr=Utils.getOption('M',options);
  if (tmpStr.length() != 0)   setMinRuleSize(Integer.parseInt(tmpStr));
 else   setMinRuleSize(defaultMinRuleSize());
  tmpStr=Utils.getOption('I',options);
  if (tmpStr.length() != 0)   setNumIrrelevant(Integer.parseInt(tmpStr));
 else   setNumIrrelevant(defaultNumIrrelevant());
  if ((getNumAttributes() - getNumIrrelevant()) < getMinRuleSize())   throw new Exception("Possible rule size is below minimal rule size.");
  tmpStr=Utils.getOption('N',options);
  if (tmpStr.length() != 0)   setNumNumeric(Integer.parseInt(tmpStr));
 else   setNumNumeric(defaultNumNumeric());
  setVoteFlag(Utils.getFlag('V',options));
}
