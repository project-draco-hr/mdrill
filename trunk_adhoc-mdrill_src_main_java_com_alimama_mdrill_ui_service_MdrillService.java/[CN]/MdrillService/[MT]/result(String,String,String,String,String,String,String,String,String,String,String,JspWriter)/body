{
  long t1=System.currentTimeMillis();
  String logParams=MdrillRequestLog.logRequest(projectName,callback,startStr,rowsStr,queryStr,dist,fl,groupby,sort,order,leftjoin);
  HeartBeat hb=new HeartBeat(out);
  new Thread(hb).start();
  TablePartion part=GetPartions.partion(projectName);
  try {
    Map stormconf=Utils.readStormConfig();
    MdrillTableConfig tblconfig=new MdrillTableConfig(part,stormconf);
    MdrillTableCoreInfo coreinfo=new MdrillTableCoreInfo(part,stormconf);
    MdrillRequest req=new MdrillRequest(tblconfig,part,stormconf,projectName,startStr,rowsStr,queryStr,dist,fl,groupby,sort,order,leftjoin);
    GetPartions.Shards shard=GetPartions.getshard(part,req.partionsAll,coreinfo.cores,coreinfo.ms);
    HigoJoinParams[] joins=req.parseJoins(coreinfo,shard);
    ArrayList<String> fqList=req.parseFq(tblconfig,shard);
    JSONObject jsonObj=new JSONObject();
    long t2=System.currentTimeMillis();
    String rtn=request(part,tblconfig,coreinfo,req,callback,fqList,shard,joins,jsonObj);
    long t3=System.currentTimeMillis();
    long timetaken=t3 - t1;
    jsonObj.put("___timetaken",timetaken + "=" + (t2 - t1)+ "+"+ (t3 - t2));
    logParams=MdrillRequestLog.logRequest(projectName,callback,startStr,rowsStr,req.queryStr,dist,fl,groupby,sort,order,leftjoin);
    LOG.info("timetaken:" + (timetaken) + ",logParams2:"+ MdrillRequestLog.cutString(logParams));
    if (timetaken > 1000l * 100) {
      LOG.info("longrequest:" + (timetaken) + ",logParams2:"+ MdrillRequestLog.cutString(logParams)+ "@"+ MdrillRequestLog.cutString(rtn));
    }
    hb.setIsstop(true);
    while (!hb.isstop()) {
      try {
        Thread.sleep(100);
      }
 catch (      InterruptedException e) {
      }
    }
synchronized (hb.lock) {
      if (out != null) {
        out.write(rtn);
      }
    }
    return rtn;
  }
 catch (  Throwable e) {
    GetShards.purge(part.name);
    long t2=System.currentTimeMillis();
    LOG.error("timetaken:" + (t2 - t1) + ",logParams:"+ MdrillRequestLog.cutString(logParams));
    LOG.error(MdrillRequestLog.cutString(logParams),e);
    throw new Exception(e);
  }
 finally {
    hb.setIsstop(true);
  }
}
