{
  if (m_env == null) {
    m_env=Environment.getSystemWide();
  }
  if (m_imageListeners.size() > 0 && !m_processingHeadlessEvents) {
    setupOffscreenRenderer();
    m_offscreenPlotData=new ArrayList<Instances>();
    Instances predictedI=e.getDataSet();
    if (predictedI.classIndex() >= 0 && predictedI.classAttribute().isNominal()) {
      Instances[] classes=new Instances[predictedI.numClasses()];
      for (int i=0; i < predictedI.numClasses(); i++) {
        classes[i]=new Instances(predictedI,0);
        classes[i].setRelationName(predictedI.classAttribute().value(i));
      }
      for (int i=0; i < predictedI.numInstances(); i++) {
        Instance current=predictedI.instance(i);
        classes[(int)current.classValue()].add((Instance)current.copy());
      }
      for (int i=0; i < classes.length; i++) {
        m_offscreenPlotData.add(classes[i]);
      }
    }
 else {
      m_offscreenPlotData.add(new Instances(predictedI));
    }
    List<String> options=new ArrayList<String>();
    String additional=m_additionalOptions;
    if (m_additionalOptions != null && m_additionalOptions.length() > 0) {
      try {
        additional=m_env.substitute(additional);
      }
 catch (      Exception ex) {
      }
    }
    if (additional != null && additional.indexOf("-color") < 0) {
      if (additional.length() > 0) {
        additional+=",";
      }
      if (predictedI.classIndex() >= 0) {
        additional+="-color=" + predictedI.classAttribute().name();
      }
 else {
        additional+="-color=/last";
      }
    }
    String[] optionsParts=additional.split(",");
    for (    String p : optionsParts) {
      options.add(p.trim());
    }
    String xAxis=m_xAxis;
    try {
      xAxis=m_env.substitute(xAxis);
    }
 catch (    Exception ex) {
    }
    String yAxis=m_yAxis;
    try {
      yAxis=m_env.substitute(yAxis);
    }
 catch (    Exception ex) {
    }
    String width=m_width;
    String height=m_height;
    int defWidth=500;
    int defHeight=400;
    try {
      width=m_env.substitute(width);
      height=m_env.substitute(height);
      defWidth=Integer.parseInt(width);
      defHeight=Integer.parseInt(height);
    }
 catch (    Exception ex) {
    }
    try {
      BufferedImage osi=m_offscreenRenderer.renderXYScatterPlot(defWidth,defHeight,m_offscreenPlotData,xAxis,yAxis,options);
      ImageEvent ie=new ImageEvent(this,osi);
      notifyImageListeners(ie);
    }
 catch (    Exception e1) {
      e1.printStackTrace();
    }
  }
}
