{
  List<DocField> fields=new ArrayList<DocField>();
  Class superClazz=clazz;
  ArrayList<AccessibleObject> members=new ArrayList<AccessibleObject>();
  while (superClazz != null && superClazz != Object.class) {
    members.addAll(Arrays.asList(superClazz.getDeclaredFields()));
    members.addAll(Arrays.asList(superClazz.getDeclaredMethods()));
    superClazz=superClazz.getSuperclass();
  }
  for (  AccessibleObject member : members) {
    if (member.isAnnotationPresent(Field.class)) {
      member.setAccessible(true);
      fields.add(new DocField(member));
    }
  }
  return fields;
}
