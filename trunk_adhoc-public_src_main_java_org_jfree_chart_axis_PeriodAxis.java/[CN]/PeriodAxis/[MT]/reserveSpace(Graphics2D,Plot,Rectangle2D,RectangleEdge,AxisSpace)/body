{
  if (space == null) {
    space=new AxisSpace();
  }
  if (!isVisible()) {
    return space;
  }
  double dimension=getFixedDimension();
  if (dimension > 0.0) {
    space.ensureAtLeast(dimension,edge);
  }
  Rectangle2D labelEnclosure=getLabelEnclosure(g2,edge);
  double labelHeight=0.0;
  double labelWidth=0.0;
  double tickLabelBandsDimension=0.0;
  for (int i=0; i < this.labelInfo.length; i++) {
    PeriodAxisLabelInfo info=this.labelInfo[i];
    FontMetrics fm=g2.getFontMetrics(info.getLabelFont());
    tickLabelBandsDimension+=info.getPadding().extendHeight(fm.getHeight());
  }
  if (RectangleEdge.isTopOrBottom(edge)) {
    labelHeight=labelEnclosure.getHeight();
    space.add(labelHeight + tickLabelBandsDimension,edge);
  }
 else   if (RectangleEdge.isLeftOrRight(edge)) {
    labelWidth=labelEnclosure.getWidth();
    space.add(labelWidth + tickLabelBandsDimension,edge);
  }
  double tickMarkSpace=0.0;
  if (isTickMarksVisible()) {
    tickMarkSpace=getTickMarkOutsideLength();
  }
  if (this.minorTickMarksVisible) {
    tickMarkSpace=Math.max(tickMarkSpace,this.minorTickMarkOutsideLength);
  }
  space.add(tickMarkSpace,edge);
  return space;
}
