{
  m_timeLagCrossProductMakers=null;
  if (m_timeStampName == null || m_timeStampName.length() == 0 || !m_adjustForTrends) {
    return insts;
  }
  int numAtts=insts.numAttributes();
  int firstLagIndex=-1;
  for (int i=0; i < numAtts; i++) {
    if (insts.attribute(i).name().startsWith("Lag_")) {
      firstLagIndex=i;
      break;
    }
  }
  if (firstLagIndex < 0) {
    m_timeLagCrossProductMakers=null;
    return insts;
  }
  int timeStampIndex=insts.attribute(m_timeStampName).index();
  if (timeStampIndex < 0) {
    return insts;
  }
  String timeStampName=m_timeStampName;
  if (insts.attribute(timeStampIndex).isDate()) {
    timeStampIndex=insts.attribute(m_timeStampName + "-remapped").index();
    timeStampName+="-remapped";
  }
  m_timeLagCrossProductMakers=new ArrayList<Filter>();
  for (int i=firstLagIndex; i < insts.numAttributes(); i++) {
    if (!(insts.attribute(i).name().startsWith("Lag_") || insts.attribute(i).name().startsWith("Avg("))) {
      break;
    }
    AddExpression addE=new AddExpression();
    addE.setName(timeStampName + "*" + insts.attribute(i).name());
    addE.setExpression("a" + (timeStampIndex + 1) + "*a"+ (i + 1));
    addE.setInputFormat(insts);
    insts=Filter.useFilter(insts,addE);
    m_timeLagCrossProductMakers.add(addE);
  }
  return insts;
}
