{
  SolrIndexReader topReader=(SolrIndexReader)reader;
  SolrIndexReader[] subReaders=topReader.getLeafReaders();
  int[] offsets=topReader.getLeafOffsets();
  int readerPos=SolrIndexReader.readerIndex(doc,offsets);
  int readerBase=offsets[readerPos];
  Explanation subQueryExpl=qWeight.explain(reader,doc);
  if (!subQueryExpl.isMatch()) {
    return subQueryExpl;
  }
  DocValues vals=boostVal.getValues(context,subReaders[readerPos]);
  float sc=subQueryExpl.getValue() * vals.floatVal(doc - readerBase);
  Explanation res=new ComplexExplanation(true,sc,BoostedQuery.this.toString() + ", product of:");
  res.addDetail(subQueryExpl);
  res.addDetail(vals.explain(doc - readerBase));
  return res;
}
