{
  final OpenBitSet bs=getBits();
  return new Filter(){
    @Override public DocIdSet getDocIdSet(    IndexReader reader) throws IOException {
      int offset=0;
      SolrIndexReader r=(SolrIndexReader)reader;
      while (r.getParent() != null) {
        offset+=r.getBase();
        r=r.getParent();
      }
      if (r == reader)       return bs;
      final int base=offset;
      final int maxDoc=reader.maxDoc();
      final int max=base + maxDoc;
      return new DocIdSet(){
        @Override public DocIdSetIterator iterator() throws IOException {
          return new DocIdSetIterator(){
            int pos=base - 1;
            int adjustedDoc=-1;
            @Override public int docID(){
              return adjustedDoc;
            }
            @Override public int nextDoc() throws IOException {
              pos=bs.nextSetBit(pos + 1);
              return adjustedDoc=(pos >= 0 && pos < max) ? pos - base : NO_MORE_DOCS;
            }
            @Override public int advance(            int target) throws IOException {
              if (target == NO_MORE_DOCS)               return adjustedDoc=NO_MORE_DOCS;
              pos=bs.nextSetBit(target + base);
              return adjustedDoc=(pos >= 0 && pos < max) ? pos - base : NO_MORE_DOCS;
            }
          }
;
        }
        @Override public boolean isCacheable(){
          return true;
        }
      }
;
    }
  }
;
}
