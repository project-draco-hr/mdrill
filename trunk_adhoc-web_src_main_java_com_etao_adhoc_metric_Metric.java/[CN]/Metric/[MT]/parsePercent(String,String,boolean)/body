{
  if (issuccess) {
    return "100%";
  }
  if (pat == null) {
    pat=Pattern.compile(".*Stage.*[^\\d]*(\\d+)[^\\d]map[^\\d]*(\\d+)[^\\d].*reduce[^\\d]*(\\d+)[^\\d].*");
  }
  if (!percent.startsWith("Stage")) {
    return "0%";
  }
  Integer totalstage=Integer.parseInt(stage);
  Integer currStage=0;
  double map=0;
  double reduce=0;
  Matcher mat=pat.matcher(percent);
  while (mat.find()) {
    currStage=Integer.parseInt(mat.group(1));
    map=Double.parseDouble(mat.group(2));
    reduce=Double.parseDouble(mat.group(3));
  }
  if (currStage < 1) {
    currStage=1;
  }
  if (totalstage > 0) {
    double result=(100d * (currStage - 1) + map * 0.5d + reduce * 0.5d) / totalstage;
    return String.valueOf(result) + "%";
  }
  return "100%";
}
