{
  if (preds.length != m_outputNeurons.length) {
    throw new Exception("[NeuralOutputs] Incorrect number of predictions requested: " + preds.length + "requested, "+ m_outputNeurons.length+ " expected");
  }
  for (int i=0; i < m_outputNeurons.length; i++) {
    Double neuronOut=incoming.get(m_outputNeurons[i]);
    if (neuronOut == null) {
      throw new Exception("[NeuralOutputs] Unable to find output neuron " + m_outputNeurons[i] + " in the incoming HashMap!!");
    }
    if (m_classAttribute.isNumeric()) {
      preds[0]=neuronOut.doubleValue();
      preds[0]=m_regressionMapping.getResultInverse(preds);
    }
 else {
      preds[m_categoricalIndexes[i]]=neuronOut;
    }
  }
  if (m_classAttribute.isNominal()) {
    double min=preds[Utils.minIndex(preds)];
    if (min < 0) {
      for (int i=0; i < preds.length; i++) {
        preds[i]-=min;
      }
    }
    Utils.normalize(preds);
  }
}
