{
  try {
    double delta=0.5;
    double xmean=0;
    double lower=0;
    double upper=10;
    Matrix covariance=new Matrix(2,2);
    covariance.set(0,0,2);
    covariance.set(0,1,-3);
    covariance.set(1,0,-4);
    covariance.set(1,1,5);
    if (argv.length > 0) {
      covariance.set(0,0,Double.valueOf(argv[0]).doubleValue());
    }
    if (argv.length > 1) {
      covariance.set(0,1,Double.valueOf(argv[1]).doubleValue());
    }
    if (argv.length > 2) {
      covariance.set(1,0,Double.valueOf(argv[2]).doubleValue());
    }
    if (argv.length > 3) {
      covariance.set(1,1,Double.valueOf(argv[3]).doubleValue());
    }
    if (argv.length > 4) {
      delta=Double.valueOf(argv[4]).doubleValue();
    }
    if (argv.length > 5) {
      xmean=Double.valueOf(argv[5]).doubleValue();
    }
    MahalanobisEstimator newEst=new MahalanobisEstimator(covariance,delta,xmean);
    if (argv.length > 6) {
      lower=Double.valueOf(argv[6]).doubleValue();
      if (argv.length > 7) {
        upper=Double.valueOf(argv[7]).doubleValue();
      }
      double increment=(upper - lower) / 50;
      for (double current=lower; current <= upper; current+=increment)       System.out.println(current + "  " + newEst.getProbability(current));
    }
 else {
      System.out.println("Covariance Matrix\n" + covariance);
      System.out.println(newEst);
    }
  }
 catch (  Exception e) {
    System.out.println(e.getMessage());
  }
}
