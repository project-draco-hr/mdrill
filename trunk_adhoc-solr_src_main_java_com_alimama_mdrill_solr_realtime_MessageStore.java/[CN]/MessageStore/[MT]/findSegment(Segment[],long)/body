{
  if (segments == null || segments.length < 1) {
    return null;
  }
  final Segment last=segments[segments.length - 1];
  if (offset < segments[0].start) {
    throw new ArrayIndexOutOfBoundsException();
  }
  if (offset >= last.start + last.size()) {
    return null;
  }
  int low=0;
  int high=segments.length - 1;
  while (low <= high) {
    final int mid=high + low >>> 1;
    final Segment found=segments[mid];
    if (found.contains(offset)) {
      return found;
    }
 else     if (offset < found.start) {
      high=mid - 1;
    }
 else {
      low=mid + 1;
    }
  }
  return null;
}
