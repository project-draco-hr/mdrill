{
  long syncStart=0;
  long mytxid=myTransactionId.get().txid;
  boolean sync=false;
  try {
    EditLogOutputStream logStream=null;
synchronized (this) {
      try {
        printStatistics(false);
        while (mytxid > synctxid && isSyncRunning) {
          try {
            wait(1000);
          }
 catch (          InterruptedException ie) {
          }
        }
        if (mytxid <= synctxid) {
          numTransactionsBatchedInSync++;
          return;
        }
        syncStart=txid;
        isSyncRunning=true;
        sync=true;
        try {
          if (journalSet.isEmpty()) {
            throw new IOException("No journals available to flush");
          }
          editLogStream.setReadyToFlush();
        }
 catch (        IOException e) {
          final String msg="Could not sync enough journals to persistent storage " + "due to " + e.getMessage() + ". "+ "Unsynced transactions: "+ (txid - synctxid);
          LOG.fatal(msg,new Exception());
          IOUtils.cleanup(LOG,journalSet);
          terminate(1,msg);
        }
      }
  finally {
        doneWithAutoSyncScheduling();
      }
      logStream=editLogStream;
    }
    long start=System.currentTimeMillis();
    try {
      if (logStream != null) {
        logStream.flush();
      }
    }
 catch (    IOException ex) {
synchronized (this) {
        final String msg="Could not sync enough journals to persistent storage. " + "Unsynced transactions: " + (txid - synctxid);
        LOG.fatal(msg,new Exception());
        IOUtils.cleanup(LOG,journalSet);
        terminate(1,msg);
      }
    }
  }
  finally {
synchronized (this) {
      if (sync) {
        synctxid=syncStart;
        isSyncRunning=false;
      }
      this.notifyAll();
    }
  }
}
