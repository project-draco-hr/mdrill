{
  try {
    Attribute length=new Attribute("length");
    Attribute weight=new Attribute("weight");
    Attribute date=new Attribute("date","yyyy-MM-dd HH:mm:ss");
    System.out.println(date);
    double dd=date.parseDate("2001-04-04 14:13:55");
    System.out.println("Test date = " + dd);
    System.out.println(date.formatDate(dd));
    dd=new Date().getTime();
    System.out.println("Date now = " + dd);
    System.out.println(date.formatDate(dd));
    List<String> my_nominal_values=new ArrayList<String>(3);
    my_nominal_values.add("first");
    my_nominal_values.add("second");
    my_nominal_values.add("third");
    Attribute position=new Attribute("position",my_nominal_values);
    System.out.println("Name of \"position\": " + position.name());
    Enumeration attValues=position.enumerateValues();
    while (attValues.hasMoreElements()) {
      String string=(String)attValues.nextElement();
      System.out.println("Value of \"position\": " + string);
    }
    Attribute copy=(Attribute)position.copy();
    System.out.println("Copy is the same as original: " + copy.equals(position));
    System.out.println("Index of attribute \"weight\" (should be -1): " + weight.index());
    System.out.println("Index of value \"first\" of \"position\" (should be 0): " + position.indexOfValue("first"));
    System.out.println("\"position\" is numeric: " + position.isNumeric());
    System.out.println("\"position\" is nominal: " + position.isNominal());
    System.out.println("\"position\" is string: " + position.isString());
    System.out.println("Name of \"position\": " + position.name());
    System.out.println("Number of values for \"position\": " + position.numValues());
    for (int i=0; i < position.numValues(); i++) {
      System.out.println("Value " + i + ": "+ position.value(i));
    }
    System.out.println(position);
switch (position.type()) {
case Attribute.NUMERIC:
      System.out.println("\"position\" is numeric");
    break;
case Attribute.NOMINAL:
  System.out.println("\"position\" is nominal");
break;
case Attribute.STRING:
System.out.println("\"position\" is string");
break;
case Attribute.DATE:
System.out.println("\"position\" is date");
break;
case Attribute.RELATIONAL:
System.out.println("\"position\" is relation-valued");
break;
default :
System.out.println("\"position\" has unknown type");
}
ArrayList<Attribute> atts=new ArrayList<Attribute>(1);
atts.add(position);
Instances relation=new Instances("Test",atts,0);
Attribute relationValuedAtt=new Attribute("test",relation);
System.out.println(relationValuedAtt);
}
 catch (Exception e) {
e.printStackTrace();
}
}
