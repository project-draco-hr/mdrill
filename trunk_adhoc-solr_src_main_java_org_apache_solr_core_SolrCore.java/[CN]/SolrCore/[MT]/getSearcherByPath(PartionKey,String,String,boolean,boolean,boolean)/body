{
  try {
    this.clearPartion();
  }
 catch (  IOException e1) {
    e1.printStackTrace();
  }
  this.initSearchCache();
  try {
    RefCounted<SolrIndexSearcher> rtn=searchCache.get(partionKey);
    if (rtn == null) {
      rtn=searchCacheForHb.get(partionKey);
    }
    if (isclearCache && rtn != null) {
      this.DropSearch(rtn);
      SolrResourceLoader.SetCacheFlushKey(p,System.currentTimeMillis());
      rtn=null;
      searchCache.remove(partionKey);
      searchCacheForHb.remove(partionKey);
    }
    if (rtn != null) {
      rtn.incref();
      return rtn;
    }
 else {
      File f=new File(path);
      log.info("getSearcher:" + partionKey + ":"+ f.getAbsolutePath());
      if (!f.exists() && mdirs) {
        f.mkdirs();
      }
      if (!f.exists()) {
        return null;
      }
      Directory dir=null;
      IndexReader reader=null;
      if (p == null) {
        log.info("#######################getSearcher:" + partionKey + ":"+ f.getAbsolutePath()+ ",p=null");
        dir=LinkFSDirectory.readOnlyOpen(f);
        ;
        dir.setCore(this,p);
        reader=IndexReader.open(dir);
      }
 else       if (p.partion.equals("default")) {
        RAMDirectory rd=new RAMDirectory();
        rd.setCore(this,p);
        IndexWriter writer=new IndexWriter(rd,null,new KeepOnlyLastCommitDeletionPolicy(),MaxFieldLength.UNLIMITED);
        writer.setMergeFactor(10);
        writer.setUseCompoundFile(false);
        writer.close();
        reader=IndexReader.open(rd);
      }
 else {
        MdrillDirectory rtdir=getRealTime(p.partion,false);
        List<Directory> list=rtdir.getForSearch();
        IndexReader[] r=new IndexReader[list.size()];
        for (int i=0; i < list.size(); i++) {
          Directory d=list.get(i);
          d.setCore(this,p);
          r[i]=IndexReader.open(d);
        }
        if (r.length == 1) {
          reader=r[0];
        }
 else {
          reader=new MultiReader(r,true);
        }
      }
      if (dir == null) {
        dir=FSDirectory.open(f);
        dir.setCore(this,p);
      }
      File cachedir=null;
      if (dir instanceof FSDirectory) {
        FSDirectory d=(FSDirectory)dir;
        cachedir=new File(d.getDirectory(),"cacheField");
      }
 else {
        cachedir=new File(f,"cacheField");
      }
      cachedir.mkdirs();
      Directory fieldcacheDir=FSDirectory.open(cachedir);
      fieldcacheDir.setCore(this,p);
      SolrIndexSearcher newSearcher=new SolrIndexSearcher(this,schema,"partion_" + partionKey,reader,true);
      newSearcher.setPartionCacheKey(p);
      newSearcher.setFieldcacheDir(fieldcacheDir);
      newSearcher.setPartionKey(partionKey);
      rtn=newHolderPartion(newSearcher);
      if (ishb) {
        searchCacheForHb.put(partionKey,rtn);
      }
 else {
        searchCache.put(partionKey,rtn);
      }
      return rtn;
    }
  }
 catch (  IOException e) {
    SolrCore.log.info(e.toString());
    SolrException.log(log,null,e);
    return null;
  }
}
