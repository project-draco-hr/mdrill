{
  if (searchCache == null) {
    final float LOADFACTOR=0.75f;
    SimpleMapCache<String,RefCounted<SolrIndexSearcher>> ccache=(new SimpleMapCache<String,RefCounted<SolrIndexSearcher>>(new LinkedHashMap<String,RefCounted<SolrIndexSearcher>>((int)Math.ceil(cacheSize / LOADFACTOR) + 1,LOADFACTOR,true){
      private static final long serialVersionUID=1L;
      @Override protected boolean removeEldestEntry(      Map.Entry<String,RefCounted<SolrIndexSearcher>> eldest){
        boolean rtn=size() > cacheSize;
        if (rtn) {
          DropSearch(eldest.getValue());
          log.info("SolrIndexSearcher clear:" + eldest.getKey() + ","+ this.size()+ "@"+ cacheSize);
        }
        return rtn;
      }
    }
));
    searchCache=Cache.synchronizedCache(ccache);
  }
  if (searchCacheForHb == null) {
    final float LOADFACTOR=0.75f;
    SimpleMapCache<String,RefCounted<SolrIndexSearcher>> ccache=(new SimpleMapCache<String,RefCounted<SolrIndexSearcher>>(new LinkedHashMap<String,RefCounted<SolrIndexSearcher>>((int)Math.ceil(cacheSizeHb / LOADFACTOR) + 1,LOADFACTOR,true){
      private static final long serialVersionUID=1L;
      @Override protected boolean removeEldestEntry(      Map.Entry<String,RefCounted<SolrIndexSearcher>> eldest){
        boolean rtn=size() > cacheSizeHb;
        if (rtn) {
          DropSearch(eldest.getValue());
        }
        return rtn;
      }
    }
));
    searchCacheForHb=Cache.synchronizedCache(ccache);
  }
}
