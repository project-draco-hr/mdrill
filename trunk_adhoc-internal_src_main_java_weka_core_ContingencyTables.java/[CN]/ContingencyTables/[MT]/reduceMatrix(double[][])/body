{
  int row, col, currCol, currRow, nrows, ncols, nonZeroRows=0, nonZeroColumns=0;
  double[] rtotal, ctotal;
  double[][] newMatrix;
  nrows=matrix.length;
  ncols=matrix[0].length;
  rtotal=new double[nrows];
  ctotal=new double[ncols];
  for (row=0; row < nrows; row++) {
    for (col=0; col < ncols; col++) {
      rtotal[row]+=matrix[row][col];
      ctotal[col]+=matrix[row][col];
    }
  }
  for (row=0; row < nrows; row++) {
    if (Utils.gr(rtotal[row],0)) {
      nonZeroRows++;
    }
  }
  for (col=0; col < ncols; col++) {
    if (Utils.gr(ctotal[col],0)) {
      nonZeroColumns++;
    }
  }
  newMatrix=new double[nonZeroRows][nonZeroColumns];
  currRow=0;
  for (row=0; row < nrows; row++) {
    if (Utils.gr(rtotal[row],0)) {
      currCol=0;
      for (col=0; col < ncols; col++) {
        if (Utils.gr(ctotal[col],0)) {
          newMatrix[currRow][currCol]=matrix[row][col];
          currCol++;
        }
      }
      currRow++;
    }
  }
  return newMatrix;
}
