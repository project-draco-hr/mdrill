{
  final DescriptionModel model=getModel();
  this.sources=new ArrayList(Arrays.asList(model.getSources()));
  this.targetFile=new File(target);
  this.plainFileName=IOUtils.getInstance().stripFileExtension(this.targetFile.getName());
  this.extension=IOUtils.getInstance().getFileExtension(target);
  this.classDescriptionByPackage=new HashNMap();
  for (int i=0; i < model.size(); i++) {
    final ClassDescription cd=model.get(i);
    if (cd.getSource() == null) {
      final String packageName=getPackage(cd.getObjectClass());
      final String includeFileName=this.plainFileName + "-" + packageName+ this.extension;
      this.classDescriptionByPackage.add(includeFileName,cd);
    }
 else {
      this.classDescriptionByPackage.add(cd.getSource(),cd);
    }
  }
  final MappingModel mappingModel=model.getMappingModel();
  final ManualMappingInfo[] manualMappings=mappingModel.getManualMapping();
  this.manualMappingByPackage=new HashNMap();
  for (int i=0; i < manualMappings.length; i++) {
    final ManualMappingInfo mapping=manualMappings[i];
    if (mapping.getSource() == null) {
      this.manualMappingByPackage.add("",mapping);
    }
 else {
      this.manualMappingByPackage.add(mapping.getSource(),mapping);
    }
  }
  final MultiplexMappingInfo[] multiplexMappings=mappingModel.getMultiplexMapping();
  this.multiplexMappingByPackage=new HashNMap();
  for (int i=0; i < multiplexMappings.length; i++) {
    final MultiplexMappingInfo mapping=multiplexMappings[i];
    if (mapping.getSource() == null) {
      this.multiplexMappingByPackage.add("",mapping);
    }
 else {
      this.multiplexMappingByPackage.add(mapping.getSource(),mapping);
    }
  }
  final Object[] keys=this.classDescriptionByPackage.keySet().toArray();
  for (int i=0; i < keys.length; i++) {
    final String includeFileName=(String)keys[i];
    if (!includeFileName.equals("")) {
      writePackageFile(includeFileName);
    }
  }
  writeMasterFile();
  this.manualMappingByPackage=null;
  this.multiplexMappingByPackage=null;
  this.classDescriptionByPackage=null;
  this.sources=null;
}
