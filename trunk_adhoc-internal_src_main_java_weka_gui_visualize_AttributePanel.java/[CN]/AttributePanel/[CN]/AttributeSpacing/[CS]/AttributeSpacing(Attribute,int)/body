{
  m_attrib=a;
  m_attribIndex=aind;
  this.setBackground(m_barColour);
  this.setPreferredSize(new Dimension(0,20));
  this.setMinimumSize(new Dimension(0,20));
  m_cached=new int[m_plotInstances.numInstances()];
  double min=Double.POSITIVE_INFINITY;
  double max=Double.NEGATIVE_INFINITY;
  double value;
  if (m_plotInstances.attribute(m_attribIndex).isNominal()) {
    m_minVal=0;
    m_maxVal=m_plotInstances.attribute(m_attribIndex).numValues() - 1;
  }
 else {
    for (int i=0; i < m_plotInstances.numInstances(); i++) {
      if (!m_plotInstances.instance(i).isMissing(m_attribIndex)) {
        value=m_plotInstances.instance(i).value(m_attribIndex);
        if (value < min) {
          min=value;
        }
        if (value > max) {
          max=value;
        }
      }
    }
    m_minVal=min;
    m_maxVal=max;
    if (min == max) {
      m_maxVal+=0.05;
      m_minVal-=0.05;
    }
  }
  this.addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if ((e.getModifiers() & e.BUTTON1_MASK) == e.BUTTON1_MASK) {
        setX(m_attribIndex);
        if (m_Listeners.size() > 0) {
          for (int i=0; i < m_Listeners.size(); i++) {
            AttributePanelListener l=(AttributePanelListener)(m_Listeners.elementAt(i));
            l.attributeSelectionChange(new AttributePanelEvent(true,false,m_attribIndex));
          }
        }
      }
 else {
        setY(m_attribIndex);
        if (m_Listeners.size() > 0) {
          for (int i=0; i < m_Listeners.size(); i++) {
            AttributePanelListener l=(AttributePanelListener)(m_Listeners.elementAt(i));
            l.attributeSelectionChange(new AttributePanelEvent(false,true,m_attribIndex));
          }
        }
      }
    }
  }
);
}
