{
  Vector<Option> result=new Vector<Option>();
  result.add(new Option("\tNo header row present in the data.","H",0,"-H"));
  result.add(new Option("\tThe range of attributes to force type to be NOMINAL.\n" + "\t'first' and 'last' are accepted as well.\n" + "\tExamples: \"first-last\", \"1,4,5-27,50-last\"\n"+ "\t(default: -none-)","N",1,"-N <range>"));
  result.add(new Option("\tThe range of attribute to force type to be STRING.\n" + "\t'first' and 'last' are accepted as well.\n" + "\tExamples: \"first-last\", \"1,4,5-27,50-last\"\n"+ "\t(default: -none-)","S",1,"-S <range>"));
  result.add(new Option("\tThe range of attribute to force type to be DATE.\n" + "\t'first' and 'last' are accepted as well.\n" + "\tExamples: \"first-last\", \"1,4,5-27,50-last\"\n"+ "\t(default: -none-)","D",1,"-D <range>"));
  result.add(new Option("\tThe date formatting string to use to parse date values.\n" + "\t(default: \"yyyy-MM-dd'T'HH:mm:ss\")","format",1,"-format <date format>"));
  result.add(new Option("\tThe string representing a missing value.\n" + "\t(default: ?)","M",1,"-M <str>"));
  result.addElement(new Option("\tThe field separator to be used.\n" + "\t'\\t' can be used as well.\n" + "\t(default: ',')","F",1,"-F <separator>"));
  return result.elements();
}
