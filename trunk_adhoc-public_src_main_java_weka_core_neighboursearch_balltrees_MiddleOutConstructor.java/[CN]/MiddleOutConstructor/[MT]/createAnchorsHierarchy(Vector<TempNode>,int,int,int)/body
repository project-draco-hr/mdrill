{
  TempNode anchr1=m_RandomInitialAnchor ? getRandomAnchor(startIdx,endIdx) : getFurthestFromMeanAnchor(startIdx,endIdx);
  TempNode amax=anchr1;
  TempNode newAnchor;
  Vector<double[]> anchorDistances=new Vector<double[]>(numAnchors - 1);
  anchors.add(anchr1);
  while (anchors.size() < numAnchors) {
    newAnchor=new TempNode();
    newAnchor.points=new MyIdxList();
    Instance newpivot=m_Instances.instance(((ListNode)amax.points.getFirst()).idx);
    newAnchor.anchor=newpivot;
    newAnchor.idx=((ListNode)amax.points.getFirst()).idx;
    setInterAnchorDistances(anchors,newAnchor,anchorDistances);
    if (stealPoints(newAnchor,anchors,anchorDistances))     newAnchor.radius=((ListNode)newAnchor.points.getFirst()).distance;
 else     newAnchor.radius=0.0;
    anchors.add(newAnchor);
    amax=(TempNode)anchors.elementAt(0);
    for (int i=1; i < anchors.size(); i++) {
      newAnchor=(TempNode)anchors.elementAt(i);
      if (newAnchor.radius > amax.radius)       amax=newAnchor;
    }
  }
}
