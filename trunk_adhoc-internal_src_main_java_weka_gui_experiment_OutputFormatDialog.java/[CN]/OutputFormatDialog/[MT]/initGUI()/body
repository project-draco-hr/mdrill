{
  JPanel panel;
  SpinnerNumberModel model;
  JPanel panel2;
  getContentPane().setLayout(new BorderLayout());
  panel=new JPanel(new GridLayout(6,1));
  panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  getContentPane().add(panel,BorderLayout.CENTER);
  m_MeanPrecSpinner=new JSpinner();
  m_MeanPrecSpinner.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      getData();
    }
  }
);
  model=(SpinnerNumberModel)m_MeanPrecSpinner.getModel();
  model.setMaximum(new Integer(20));
  model.setMinimum(new Integer(0));
  m_MeanPrecLabel=new JLabel("Mean Precision");
  m_MeanPrecLabel.setDisplayedMnemonic('M');
  m_MeanPrecLabel.setLabelFor(m_MeanPrecSpinner);
  panel2=new JPanel(new FlowLayout(FlowLayout.LEFT));
  panel2.add(m_MeanPrecLabel);
  panel2.add(m_MeanPrecSpinner);
  panel.add(panel2);
  m_StdDevPrecSpinner=new JSpinner();
  m_StdDevPrecSpinner.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      getData();
    }
  }
);
  model=(SpinnerNumberModel)m_StdDevPrecSpinner.getModel();
  model.setMaximum(new Integer(20));
  model.setMinimum(new Integer(0));
  m_StdDevPrecLabel=new JLabel("StdDev. Precision");
  m_StdDevPrecLabel.setDisplayedMnemonic('S');
  m_StdDevPrecLabel.setLabelFor(m_StdDevPrecSpinner);
  panel2=new JPanel(new FlowLayout(FlowLayout.LEFT));
  panel2.add(m_StdDevPrecLabel);
  panel2.add(m_StdDevPrecSpinner);
  panel.add(panel2);
  m_OutputFormatComboBox=new JComboBox(m_OutputFormatNames);
  m_OutputFormatComboBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      getData();
    }
  }
);
  m_OutputFormatLabel=new JLabel("Output Format");
  m_OutputFormatLabel.setDisplayedMnemonic('F');
  m_OutputFormatLabel.setLabelFor(m_OutputFormatComboBox);
  panel2=new JPanel(new FlowLayout(FlowLayout.LEFT));
  panel2.add(m_OutputFormatLabel);
  panel2.add(m_OutputFormatComboBox);
  panel.add(panel2);
  m_ShowAverageCheckBox=new JCheckBox("");
  m_ShowAverageCheckBox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      getData();
    }
  }
);
  m_ShowAverageLabel=new JLabel("Show Average");
  m_ShowAverageLabel.setDisplayedMnemonic('A');
  m_ShowAverageLabel.setLabelFor(m_ShowAverageCheckBox);
  panel2=new JPanel(new FlowLayout(FlowLayout.LEFT));
  panel2.add(m_ShowAverageLabel);
  panel2.add(m_ShowAverageCheckBox);
  panel.add(panel2);
  m_RemoveFilterNameCheckBox=new JCheckBox("");
  m_RemoveFilterNameCheckBox.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      getData();
    }
  }
);
  m_RemoveFilterNameLabel=new JLabel("Remove filter classnames");
  m_RemoveFilterNameLabel.setDisplayedMnemonic('R');
  m_RemoveFilterNameLabel.setLabelFor(m_RemoveFilterNameCheckBox);
  panel2=new JPanel(new FlowLayout(FlowLayout.LEFT));
  panel2.add(m_RemoveFilterNameLabel);
  panel2.add(m_RemoveFilterNameCheckBox);
  panel.add(panel2);
  m_ResultMatrix=ExperimenterDefaults.getOutputFormat();
  m_ResultMatrixEditor=new GenericObjectEditor(true);
  m_ResultMatrixEditor.setClassType(ResultMatrix.class);
  m_ResultMatrixEditor.setValue(m_ResultMatrix);
  m_ResultMatrixEditor.addPropertyChangeListener(new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent e){
      if (!m_ResultMatrix.getClass().equals(m_ResultMatrixEditor.getValue().getClass())) {
        if (m_ResultMatrixEditor.getValue().getClass().equals(ExperimenterDefaults.getOutputFormat().getClass())) {
          m_ResultMatrix=ExperimenterDefaults.getOutputFormat();
          m_ResultMatrixEditor.setValue(ExperimenterDefaults.getOutputFormat());
        }
 else {
          m_ResultMatrix=(ResultMatrix)m_ResultMatrixEditor.getValue();
        }
        setData();
      }
      repaint();
    }
  }
);
  ((GenericObjectEditor.GOEPanel)m_ResultMatrixEditor.getCustomEditor()).addOkListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_ResultMatrix=(ResultMatrix)m_ResultMatrixEditor.getValue();
      setData();
    }
  }
);
  m_ResultMatrixPanel=new PropertyPanel(m_ResultMatrixEditor,false);
  m_ResultMatrixLabel=new JLabel("Advanced setup");
  panel2=new JPanel(new FlowLayout(FlowLayout.LEFT));
  panel2.add(m_ResultMatrixLabel);
  panel2.add(m_ResultMatrixPanel);
  panel.add(panel2);
  panel=new JPanel(new FlowLayout(FlowLayout.RIGHT));
  getContentPane().add(panel,BorderLayout.SOUTH);
  m_CancelButton=new JButton("Cancel");
  m_CancelButton.setMnemonic('C');
  m_CancelButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_Result=CANCEL_OPTION;
      setVisible(false);
    }
  }
);
  m_OkButton=new JButton("OK");
  m_OkButton.setMnemonic('O');
  m_OkButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      getData();
      m_Result=APPROVE_OPTION;
      setVisible(false);
    }
  }
);
  panel.add(m_OkButton);
  panel.add(m_CancelButton);
  getRootPane().setDefaultButton(m_OkButton);
  pack();
  m_MeanPrecLabel.setPreferredSize(new Dimension(m_RemoveFilterNameLabel.getWidth(),m_MeanPrecLabel.getHeight()));
  m_MeanPrecSpinner.setPreferredSize(new Dimension(m_MeanPrecSpinner.getWidth() * 3,m_MeanPrecSpinner.getHeight()));
  m_StdDevPrecLabel.setPreferredSize(new Dimension(m_RemoveFilterNameLabel.getWidth(),m_StdDevPrecLabel.getHeight()));
  m_StdDevPrecSpinner.setPreferredSize(new Dimension(m_StdDevPrecSpinner.getWidth() * 3,m_StdDevPrecSpinner.getHeight()));
  m_OutputFormatLabel.setPreferredSize(new Dimension(m_RemoveFilterNameLabel.getWidth(),m_OutputFormatLabel.getHeight()));
  m_ShowAverageLabel.setPreferredSize(new Dimension(m_RemoveFilterNameLabel.getWidth(),m_ShowAverageLabel.getHeight()));
  m_ResultMatrixLabel.setPreferredSize(new Dimension(m_RemoveFilterNameLabel.getWidth(),m_ResultMatrixLabel.getHeight()));
  m_ResultMatrixPanel.setPreferredSize(new Dimension((int)(m_ResultMatrixPanel.getWidth() * 1.5),m_ResultMatrixPanel.getHeight()));
  pack();
}
