{
  super.setup(context);
  debugInfo=0;
  doccount=0;
  TaskID taskId=context.getTaskAttemptID().getTaskID();
  this.Index=taskId.getId();
  context.getCounter("higo","dumpcount").increment(0);
  Configuration conf=context.getConfiguration();
  isNotFdtMode=conf.get("mdrill.table.mode","").indexOf("@hdfs@") < 0;
  String fieldStrs=context.getConfiguration().get("higo.index.fields");
  String custfields=context.getConfiguration().get("higo.column.custfields","");
  if (custfields == null || custfields.isEmpty()) {
    String[] fieldslist=fieldStrs.split(",");
    this.fields=new String[fieldslist.length];
    for (int i=0; i < fieldslist.length; i++) {
      String[] fieldSchema=fieldslist[i].split(":");
      String fieldName=fieldSchema[0].trim().toLowerCase();
      this.fields[i]=fieldName;
    }
  }
 else {
    String[] fieldslist=custfields.split(",");
    this.fields=new String[fieldslist.length];
    for (int i=0; i < fieldslist.length; i++) {
      this.fields[i]=fieldslist[i];
    }
  }
  if (!isNotFdtMode) {
    TermInfosWriter.setSkipInterVal(16);
  }
  heartBeater=new HeartBeater(context);
  heartBeater.needHeartBeat();
  this.doclistcache=new DocumentList();
  this.ramMerger=new RamWriter();
  String[] fieldslist=fieldStrs.split(",");
  this.documentConverter=new DocumentConverter(fieldslist,"solrconfig.xml","schema.xml");
  shardWriter=this.initShardWriter(context);
  LOG.info("end initShardWriter");
  try {
    this.analyzer=this.documentConverter.getAnalyzer();
    JobIndexPublic.setAnalyzer(conf);
  }
 catch (  Exception e) {
    throw new IOException(e);
  }
  LOG.info("end set up");
}
