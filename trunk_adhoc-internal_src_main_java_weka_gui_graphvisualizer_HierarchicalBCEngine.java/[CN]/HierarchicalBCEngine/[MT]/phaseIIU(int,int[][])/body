{
  float rowBC[];
  rowBC=calcRowBC(lindex,levels);
  for (int i=0; i < rowBC.length - 1; i++) {
    if (rowBC[i] == rowBC[i + 1]) {
      int tempLevels[][]=new int[levels.length][];
      copy2DArray(levels,tempLevels);
      int node1=levels[lindex][i];
      int node2=levels[lindex][i + 1];
      levels[lindex][i + 1]=node1;
      levels[lindex][i]=node2;
      for (int k=lindex - 1; k >= 0; k--)       phaseIU(k,levels);
      if (crossings(levels) <= crossings(tempLevels)) {
        copy2DArray(levels,tempLevels);
      }
 else {
        copy2DArray(tempLevels,levels);
        levels[lindex][i + 1]=node1;
        levels[lindex][i]=node2;
      }
      for (int k=0; k < levels.length - 1; k++)       phaseID(k,levels);
      if (crossings(tempLevels) <= crossings(levels))       copy2DArray(tempLevels,levels);
    }
  }
}
