{
  StringBuffer FString=new StringBuffer();
  FString.append("\tGreedy Stepwise (" + ((m_backward) ? "backwards)" : "forwards)") + ".\n\tStart set: ");
  if (m_starting == null) {
    if (m_backward) {
      FString.append("all attributes\n");
    }
 else {
      FString.append("no attributes\n");
    }
  }
 else {
    FString.append(startSetToString() + "\n");
  }
  if (!m_doneRanking) {
    FString.append("\tMerit of best subset found: " + Utils.doubleToString(Math.abs(m_bestMerit),8,3) + "\n");
  }
 else {
    if (m_backward) {
      FString.append("\n\tRanking is the order that attributes were removed, " + "starting \n\twith all attributes. The merit scores in the left" + "\n\tcolumn are the goodness of the remaining attributes in the"+ "\n\tsubset after removing the corresponding in the right column"+ "\n\tattribute from the subset.\n");
    }
 else {
      FString.append("\n\tRanking is the order that attributes were added, starting " + "\n\twith no attributes. The merit scores in the left column" + "\n\tare the goodness of the subset after the adding the"+ "\n\tcorresponding attribute in the right column to the subset.\n");
    }
  }
  if ((m_threshold != -Double.MAX_VALUE) && (m_doneRanking)) {
    FString.append("\tThreshold for discarding attributes: " + Utils.doubleToString(m_threshold,8,4) + "\n");
  }
  return FString.toString();
}
