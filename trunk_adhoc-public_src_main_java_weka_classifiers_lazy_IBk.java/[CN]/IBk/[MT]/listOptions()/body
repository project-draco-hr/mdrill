{
  Vector newVector=new Vector(8);
  newVector.addElement(new Option("\tWeight neighbours by the inverse of their distance\n" + "\t(use when k > 1)","I",0,"-I"));
  newVector.addElement(new Option("\tWeight neighbours by 1 - their distance\n" + "\t(use when k > 1)","F",0,"-F"));
  newVector.addElement(new Option("\tNumber of nearest neighbours (k) used in classification.\n" + "\t(Default = 1)","K",1,"-K <number of neighbors>"));
  newVector.addElement(new Option("\tMinimise mean squared error rather than mean absolute\n" + "\terror when using -X option with numeric prediction.","E",0,"-E"));
  newVector.addElement(new Option("\tMaximum number of training instances maintained.\n" + "\tTraining instances are dropped FIFO. (Default = no window)","W",1,"-W <window size>"));
  newVector.addElement(new Option("\tSelect the number of nearest neighbours between 1\n" + "\tand the k value specified using hold-one-out evaluation\n" + "\ton the training data (use when k > 1)","X",0,"-X"));
  newVector.addElement(new Option("\tThe nearest neighbour search algorithm to use " + "(default: weka.core.neighboursearch.LinearNNSearch).\n","A",0,"-A"));
  return newVector.elements();
}
