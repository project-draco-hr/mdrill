{
  m_functionName=container.getAttribute("name");
  String opType=container.getAttribute("optype");
  if (opType != null && opType.length() > 0) {
    for (    FieldMetaInfo.Optype o : FieldMetaInfo.Optype.values()) {
      if (o.toString().equals(opType)) {
        m_optype=o;
        break;
      }
    }
  }
 else {
    throw new Exception("[DefineFunction] no optype specified!!");
  }
  m_parameterDefs=new ArrayList<Attribute>();
  NodeList paramL=container.getElementsByTagName("ParameterField");
  for (int i=0; i < paramL.getLength(); i++) {
    Node paramN=paramL.item(i);
    if (paramN.getNodeType() == Node.ELEMENT_NODE) {
      ParameterField newP=new ParameterField((Element)paramN);
      m_parameters.add(newP);
      m_parameterDefs.add(newP.getFieldAsAttribute());
    }
  }
  m_expression=Expression.getExpression(container,m_optype,m_parameterDefs,transDict);
  if (m_optype == FieldMetaInfo.Optype.CONTINUOUS && m_expression.getOptype() != m_optype) {
    throw new Exception("[DefineFunction] optype is continuous but our Expression's optype " + "is not.");
  }
  if ((m_optype == FieldMetaInfo.Optype.CATEGORICAL || m_optype == FieldMetaInfo.Optype.ORDINAL) != (m_expression.getOptype() == FieldMetaInfo.Optype.CATEGORICAL || m_expression.getOptype() == FieldMetaInfo.Optype.ORDINAL)) {
    throw new Exception("[DefineFunction] optype is categorical/ordinal but our Expression's optype " + "is not.");
  }
}
