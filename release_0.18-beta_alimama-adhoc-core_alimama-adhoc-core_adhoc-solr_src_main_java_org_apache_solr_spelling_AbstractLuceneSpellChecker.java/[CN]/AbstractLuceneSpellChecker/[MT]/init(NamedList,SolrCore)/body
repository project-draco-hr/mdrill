{
  super.init(config,core);
  indexDir=(String)config.get(INDEX_DIR);
  String accuracy=(String)config.get(ACCURACY);
  if (indexDir != null) {
    if (!new File(indexDir).isAbsolute()) {
      indexDir=core.getDataDir() + File.separator + indexDir;
    }
  }
  sourceLocation=(String)config.get(LOCATION);
  String compClass=(String)config.get(COMPARATOR_CLASS);
  Comparator<SuggestWord> comp=null;
  if (compClass != null) {
    if (compClass.equalsIgnoreCase(SCORE_COMP)) {
      comp=SuggestWordQueue.DEFAULT_COMPARATOR;
    }
 else     if (compClass.equalsIgnoreCase(FREQ_COMP)) {
      comp=new SuggestWordFrequencyComparator();
    }
 else {
      comp=(Comparator<SuggestWord>)core.getResourceLoader().newInstance(compClass);
    }
  }
 else {
    comp=SuggestWordQueue.DEFAULT_COMPARATOR;
  }
  String strDistanceName=(String)config.get(STRING_DISTANCE);
  if (strDistanceName != null) {
    sd=(StringDistance)core.getResourceLoader().newInstance(strDistanceName);
  }
 else {
    sd=new LevensteinDistance();
  }
  try {
    initIndex();
    spellChecker=new SpellChecker(index,sd,comp);
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  if (accuracy != null) {
    try {
      this.accuracy=Float.parseFloat(accuracy);
      spellChecker.setAccuracy(this.accuracy);
    }
 catch (    NumberFormatException e) {
      throw new RuntimeException("Unparseable accuracy given for dictionary: " + name,e);
    }
  }
  return name;
}
