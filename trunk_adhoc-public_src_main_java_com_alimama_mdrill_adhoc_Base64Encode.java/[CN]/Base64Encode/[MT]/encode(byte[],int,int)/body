{
  if (src == null || srcOffset < 0 || srcLength < 1 || srcOffset + srcLength > src.length) {
    return null;
  }
  byte[] buffer=new byte[((srcLength + 2) / 3) * 4];
  int round=srcLength / 3, remain=srcLength % 3;
  int srcIndex=srcOffset, destIndex=0, b1, b2, b3;
  for (int j=0; j < round; j++) {
    b1=src[srcIndex++] & 0xFF;
    b2=src[srcIndex++] & 0xFF;
    b3=src[srcIndex++] & 0xFF;
    buffer[destIndex++]=BYTE_TABLE[b1 >> 2];
    buffer[destIndex++]=BYTE_TABLE[b1 << 4 & 0x3F | b2 >> 4];
    buffer[destIndex++]=BYTE_TABLE[b2 << 2 & 0x3F | b3 >> 6];
    buffer[destIndex++]=BYTE_TABLE[b3 & 0x3F];
  }
  if (remain > 0) {
    b1=src[srcIndex++] & 0xFF;
    buffer[destIndex++]=BYTE_TABLE[b1 >> 2];
    if (remain == 1) {
      buffer[destIndex++]=BYTE_TABLE[b1 << 4 & 0x3F];
      buffer[destIndex++]='=';
      buffer[destIndex++]='=';
    }
 else {
      b2=src[srcIndex++] & 0xFF;
      buffer[destIndex++]=BYTE_TABLE[b1 << 4 & 0x3F | b2 >> 4];
      buffer[destIndex++]=BYTE_TABLE[b2 << 2 & 0x3F];
      buffer[destIndex++]='=';
    }
  }
  return new String(buffer,0,destIndex);
}
