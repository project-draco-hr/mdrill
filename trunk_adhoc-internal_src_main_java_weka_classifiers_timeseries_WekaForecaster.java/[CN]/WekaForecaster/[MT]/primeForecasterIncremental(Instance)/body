{
  if (m_primedInput == null) {
    throw new Exception("WekaForecaster hasn't been initialized with " + "a call to primeForecaster()!!");
  }
  if (!m_lagMaker.isUsingAnArtificialTimeIndex() && m_lagMaker.getAdjustForTrends() && m_lagMaker.getTimeStampField() != null && m_lagMaker.getTimeStampField().length() > 0) {
    if (!m_first && m_previousPrimeInstance != null && !m_previousPrimeInstance.isMissing(inst.dataset().attribute(m_lagMaker.getTimeStampField()))) {
      double previous=m_previousPrimeInstance.value(inst.dataset().attribute(m_lagMaker.getTimeStampField()));
      double current=inst.value(inst.dataset().attribute(m_lagMaker.getTimeStampField()));
      if (current <= previous) {
        throw new Exception("Priming instances do not appear to be in " + "ascending order of the time stamp field (" + m_lagMaker.getTimeStampField() + ")! "+ m_previousPrimeInstance+ " : "+ inst);
      }
    }
  }
  boolean wasBuffered=false;
  boolean onlyTimeMissing=false;
  if (inst.hasMissingValue()) {
    boolean ok=true;
    for (    String target : m_fieldsToForecast) {
      if (inst.isMissing(inst.dataset().attribute(target))) {
        ok=false;
        break;
      }
    }
    if (!m_lagMaker.isUsingAnArtificialTimeIndex() && m_lagMaker.getAdjustForTrends() && m_lagMaker.getTimeStampField() != null && m_lagMaker.getTimeStampField().length() > 0) {
      if (inst.isMissing(inst.dataset().attribute(m_lagMaker.getTimeStampField()))) {
        onlyTimeMissing=ok;
        if (m_previousPrimeInstance != null && !m_previousPrimeInstance.isMissing(inst.dataset().attribute(m_lagMaker.getTimeStampField()))) {
          double newValue=m_previousPrimeInstance.value(inst.dataset().attribute(m_lagMaker.getTimeStampField()));
          newValue=m_lagMaker.advanceSuppliedTimeValue(newValue);
          inst.setValue(inst.dataset().attribute(m_lagMaker.getTimeStampField()),newValue);
        }
      }
 else {
        m_atLeastOneNonMissingTimeStamp=true;
      }
    }
    if (!ok) {
      if (m_first) {
        m_hadLeadingMissingPrime=!onlyTimeMissing;
        m_missingBuffer.add(inst);
        wasBuffered=true;
      }
 else {
        m_missingBuffer.add(inst);
        wasBuffered=true;
      }
    }
  }
 else {
    if (!m_lagMaker.isUsingAnArtificialTimeIndex() && m_lagMaker.getAdjustForTrends() && m_lagMaker.getTimeStampField() != null && m_lagMaker.getTimeStampField().length() > 0) {
      m_atLeastOneNonMissingTimeStamp=true;
    }
  }
  m_previousPrimeInstance=inst;
  if (!wasBuffered && m_missingBuffer.numInstances() > 0) {
    m_missingBuffer.add(inst);
    wasBuffered=true;
    Instances missingReplaced=weka.classifiers.timeseries.core.Utils.replaceMissing(m_missingBuffer,m_fieldsToForecast,m_lagMaker.getTimeStampField(),false,m_lagMaker.getPeriodicity(),m_lagMaker.getSkipEntries());
    for (int i=0; i < missingReplaced.numInstances(); i++) {
      applyFilters(missingReplaced.instance(i),false,false);
    }
    m_missingBuffer=new Instances(m_primedInput,0);
  }
 else   if (!wasBuffered) {
    applyFilters(inst,false,false);
  }
  m_first=false;
}
