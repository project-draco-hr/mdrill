{
  Vector<Option> newVector=new Vector<Option>();
  newVector.add(new Option("\tSet the fields to forecast.","F",1,"-F <comma separated list of names>"));
  newVector.add(new Option("\tSet the fields to be considered " + "as overlay data.","overlay",1,"-overlay <comma separated list of names>"));
  newVector.add(new Option("\tSet the minimum lag length to generate." + "\n\t(default = 1)","L",1,"-L <num>"));
  newVector.add(new Option("\tSet the maximum lag length to generate." + "\n\t(default = 12)","M",1,"-M <num>"));
  newVector.add(new Option("\tFine tune selection of lags within min and " + "max by specifying" + " ranges","R",1,"-R <ranges>"));
  newVector.add(new Option("\tAverage consecutive long lags.","A",0,"-A"));
  newVector.add(new Option("\tAverage those lags longer than this number of" + "time steps.\n\tUse in conjuction with -A.\n\t" + "(default = 2)","B",1,"-B <num>"));
  newVector.add(new Option("\tAverage this many consecutive long lags.\n\t" + "Use in conjuction with -B (default = 2)","C",1,"-C <num>"));
  newVector.add(new Option("\tDon't adjust for trends.","Z",0,"-Z"));
  newVector.add(new Option("\tSpecify the name of the timestamp field","G",1,"-G <timestamp name>"));
  newVector.add(new Option("\tAdjust for variance.","V",0,"-V"));
  newVector.add(new Option("\tSpecify the primary periodic field, " + "\n\tif one exists already in the data " + "(e.g. day, month, quarter etc.\n\tIf there is more than"+ "one such field, choose the one with the finest granularity.\n\t"+ "This field must be"+ "cyclic and declared as nominal.","periodic",1,"-periodic <field name>"));
  newVector.add(new Option("\tCalculate confidence limits for predictions\n\t" + "(based on errors) for up to, and including, " + "the specified\n\tnumber of time steps"+ "into the future\n\t(default = 0 (don't compute conf. levels)).","conf",1,"-conf <num steps>"));
  newVector.add(new Option("\tConfidence level for computing confidence limits.\n\t" + "Use in conjunction with -conf.\n\t(default = 0.95).","P",1,"-P <confidence level>"));
  newVector.add(new Option("\tSpecify the base regression scheme to use.\n\t" + "Supply a fully qualified name, along with options, enclosed in\n\t" + "quotes (e.g. \"weka.classifiers.functions.SMOreg -R 0.5\")."+ "\n\t(default = weka.classifiers.functions.SMOreg)","W",1,"-W"));
  newVector.add(new Option("\tAdd an AM/PM indicator (requires a date timestamp)","am-pm",0,"-am-pm"));
  newVector.add(new Option("\tAdd a day of the week field (requres a date" + " timestamp)","day",0,"-dayofweek"));
  newVector.add(new Option("\tAdd a day of the month field (requres a date" + " timestamp)","dayofmonth",0,"-dayofmonth"));
  newVector.add(new Option("\tAdd a number of days in the month field (requres a date" + " timestamp)","numdaysinmonth",0,"-numdaysinmonth"));
  newVector.add(new Option("\tAdd a weekend indicator (requires a date timestamp)","weekend",0,"-weekend"));
  newVector.add(new Option("\tAdd a month field (requires a date timestamp)","month",0,"-month"));
  newVector.add(new Option("\tAdd a quarter of the year field (" + "requires a date timestamp)","quarter",0,"-quarter"));
  newVector.add(new Option("\tAdd a custom date-derived boolean field (" + "requires a date timestamp).\n\tFormat: \"fieldName=" + "Test Test|Test Test| ...\n\twhere "+ "Test = OPERATORyear:month:week-of-yr:week-of-month:"+ "day-of-yr:day-of-month:day-of-week:hour:min:second\n\te.g."+ "XmasHoliday=>:dec::::24::: <:jan::::3:::\n\t"+ "Legal OPERATORs are =,>,<,>=,<=. For = operator only\n\t"+ "one Test is needed rather than a pair.\n\tThis option may"+ " be specified more than once on the command line\n\t"+ "in order to define multiple variables.","custom",1,"-custom"));
  newVector.add(new Option("\tAdd a comma-separated 'skip' list of dates that should not\n\t" + "be considered as a time step. Days of the week,\n\t" + "months of the year, 'weekend', integers (indicating day of year\n\t"+ ", hour of day etc.) or specific dates are all valid entries.\n\t"+ "E.g sat,sun,27-08-2011,28-08-2011","skip",1,"-skip"));
  return newVector.elements();
}
