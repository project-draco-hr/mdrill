{
  NodeList vecFieldsL=vectNode.getElementsByTagName("VectorFields");
  if (vecFieldsL.getLength() == 0) {
    throw new Exception("[VectorDictionary] there are no VectorFields defined!!");
  }
  Instances fullStructure=ms.getFieldsAsInstances();
  ArrayList<Attribute> fieldDefs=new ArrayList<Attribute>();
  for (int i=0; i < fullStructure.numAttributes(); i++) {
    fieldDefs.add(fullStructure.attribute(i));
  }
  Node fieldsNode=vecFieldsL.item(0);
  NodeList fieldRefsL=((Element)fieldsNode).getElementsByTagName("FieldRef");
  for (int i=0; i < fieldRefsL.getLength(); i++) {
    Element fieldR=(Element)fieldRefsL.item(i);
    String fieldName=fieldR.getAttribute("field");
    Attribute a=fullStructure.attribute(fieldName);
    if (a == null) {
      throw new Exception("[VectorDictionary] can't find field '" + fieldName + "' in the mining schema/derived fields!");
    }
    FieldMetaInfo.Optype fieldOpt=(a.isNumeric()) ? FieldMetaInfo.Optype.CONTINUOUS : FieldMetaInfo.Optype.CATEGORICAL;
    FieldRef fr=new FieldRef(fieldR,fieldOpt,fieldDefs);
    m_vectorFields.add(fr);
  }
  NodeList vecInstL=vectNode.getElementsByTagName("VectorInstance");
  if (vecInstL.getLength() == 0) {
    throw new Exception("[VectorDictionary] no VectorInstances defined!");
  }
  for (int i=0; i < vecInstL.getLength(); i++) {
    Element vecInstEl=(Element)vecInstL.item(i);
    VectorInstance temp=new VectorInstance(vecInstEl,m_vectorFields);
    String id=temp.getID();
    if (m_vectorInstances.get(id) != null) {
      throw new Exception("[VectorDictionary] : There is already a vector with ID " + id + " in the dictionary!");
    }
    m_vectorInstances.put(id,temp);
  }
}
