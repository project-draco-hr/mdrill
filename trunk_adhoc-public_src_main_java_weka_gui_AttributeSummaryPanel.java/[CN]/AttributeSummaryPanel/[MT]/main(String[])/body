{
  try {
    final javax.swing.JFrame jf=new javax.swing.JFrame("Attribute Panel");
    jf.getContentPane().setLayout(new BorderLayout());
    final AttributeSummaryPanel p=new AttributeSummaryPanel();
    p.setBorder(BorderFactory.createTitledBorder("Attribute"));
    jf.getContentPane().add(p,BorderLayout.CENTER);
    final javax.swing.JComboBox j=new javax.swing.JComboBox();
    j.setEnabled(false);
    j.addActionListener(new java.awt.event.ActionListener(){
      public void actionPerformed(      java.awt.event.ActionEvent e){
        p.setAttribute(j.getSelectedIndex());
      }
    }
);
    jf.getContentPane().add(j,BorderLayout.NORTH);
    jf.addWindowListener(new java.awt.event.WindowAdapter(){
      public void windowClosing(      java.awt.event.WindowEvent e){
        jf.dispose();
        System.exit(0);
      }
    }
);
    jf.pack();
    jf.setVisible(true);
    if (args.length == 1) {
      java.io.Reader r=new java.io.BufferedReader(new java.io.FileReader(args[0]));
      Instances inst=new Instances(r);
      p.setInstances(inst);
      p.setAttribute(0);
      String[] names=new String[inst.numAttributes()];
      for (int i=0; i < names.length; i++) {
        names[i]=inst.attribute(i).name();
      }
      j.setModel(new javax.swing.DefaultComboBoxModel(names));
      j.setEnabled(true);
    }
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.err.println(ex.getMessage());
  }
}
