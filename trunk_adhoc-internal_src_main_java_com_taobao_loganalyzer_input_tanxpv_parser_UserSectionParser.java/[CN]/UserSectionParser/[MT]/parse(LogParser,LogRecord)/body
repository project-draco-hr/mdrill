{
  if (lp.isCurCharCA()) {
    if (!lp.hasNextChar())     return false;
  }
 else {
    lr.addField("UserActionInfo",new LogField(LogField.TYPE_STRING,lp.getNextCB()));
    if (lr.version_cmp("1.0") > 0) {
      List<LogRecord> list=new ArrayList<LogRecord>();
      do {
        if (lp.curChar() == LogParser.CONTROL_B) {
          if (!lp.hasNextChar())           return false;
          continue;
        }
 else         if (lp.curChar() == LogParser.CONTROL_A) {
          if (!lp.hasNextChar())           return false;
          break;
        }
        LogRecord inner_lr=new LogRecord();
        inner_lr.addField("Category",new LogField(LogField.TYPE_STRING,lp.getNextCD()));
        inner_lr.addField("Score",new LogField(LogField.TYPE_STRING,lp.getNextCD()));
        String ablity=lp.getNextField(new char[]{LogParser.CONTROL_C,LogParser.CONTROL_B,LogParser.CONTROL_A});
        if (ablity != null && ablity.indexOf(LogParser.CONTROL_D) >= 0) {
          return false;
        }
        inner_lr.addField("ConsumeAbility",new LogField(LogField.TYPE_STRING,ablity));
        list.add(inner_lr);
      }
 while (lp.getMatchedChar() != 0 && lp.getMatchedChar() != LogParser.CONTROL_B);
      lr.addField("CrowdInfoList",new LogField(LogField.TYPE_LIST,list));
      lr.addField("UserSex",new LogField(LogField.TYPE_STRING,lp.getNextCB()));
      lr.addField("WholeConsumeAblity",new LogField(LogField.TYPE_STRING,lp.getNextCA()));
    }
 else {
      lr.addField("CrowdActionType",new LogField(LogField.TYPE_STRING,lp.getNextCA()));
    }
  }
  if (lp.isError())   return false;
  return true;
}
