{
  Vector newVector=new Vector(8);
  newVector.addElement(new Option("\tBinary splits (convert nominal attributes to binary ones)","B",0,"-B"));
  newVector.addElement(new Option("\tSplit on residuals instead of class values","R",0,"-R"));
  newVector.addElement(new Option("\tUse cross-validation for boosting at all nodes (i.e., disable heuristic)","C",0,"-C"));
  newVector.addElement(new Option("\tUse error on probabilities instead of misclassification error " + "for stopping criterion of LogitBoost.","P",0,"-P"));
  newVector.addElement(new Option("\tSet fixed number of iterations for LogitBoost (instead of using " + "cross-validation)","I",1,"-I <numIterations>"));
  newVector.addElement(new Option("\tSet minimum number of instances at which a node can be split (default 15)","M",1,"-M <numInstances>"));
  newVector.addElement(new Option("\tSet beta for weight trimming for LogitBoost. Set to 0 (default) for no weight trimming.","W",1,"-W <beta>"));
  newVector.addElement(new Option("\tThe AIC is used to choose the best iteration.","A",0,"-A"));
  return newVector.elements();
}
