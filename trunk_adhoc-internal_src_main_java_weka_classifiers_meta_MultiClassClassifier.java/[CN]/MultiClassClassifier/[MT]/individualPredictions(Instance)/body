{
  double[] result=null;
  if (m_Classifiers.length == 1) {
    result=new double[1];
    result[0]=m_Classifiers[0].distributionForInstance(inst)[1];
  }
 else {
    result=new double[m_ClassFilters.length];
    for (int i=0; i < m_ClassFilters.length; i++) {
      if (m_Classifiers[i] != null) {
        if (m_Method == METHOD_1_AGAINST_1) {
          Instance tempInst=(Instance)inst.copy();
          tempInst.setDataset(m_TwoClassDataset);
          result[i]=m_Classifiers[i].distributionForInstance(tempInst)[1];
        }
 else {
          m_ClassFilters[i].input(inst);
          m_ClassFilters[i].batchFinished();
          result[i]=m_Classifiers[i].distributionForInstance(m_ClassFilters[i].output())[1];
        }
      }
    }
  }
  return result;
}
