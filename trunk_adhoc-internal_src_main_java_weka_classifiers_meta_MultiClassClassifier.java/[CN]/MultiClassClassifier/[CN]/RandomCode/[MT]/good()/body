{
  boolean[] ninClass=new boolean[m_Codebits[0].length];
  boolean[] ainClass=new boolean[m_Codebits[0].length];
  for (int i=0; i < ainClass.length; i++) {
    ainClass[i]=true;
  }
  for (int i=0; i < m_Codebits.length; i++) {
    boolean ninCode=false;
    boolean ainCode=true;
    for (int j=0; j < m_Codebits[i].length; j++) {
      boolean current=m_Codebits[i][j];
      ninCode=ninCode || current;
      ainCode=ainCode && current;
      ninClass[j]=ninClass[j] || current;
      ainClass[j]=ainClass[j] && current;
    }
    if (!ninCode || ainCode) {
      return false;
    }
  }
  for (int j=0; j < ninClass.length; j++) {
    if (!ninClass[j] || ainClass[j]) {
      return false;
    }
  }
  return true;
}
