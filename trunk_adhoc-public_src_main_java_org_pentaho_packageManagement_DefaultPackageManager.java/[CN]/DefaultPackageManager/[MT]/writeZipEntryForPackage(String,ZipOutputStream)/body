{
  ZipEntry packageDir=new ZipEntry(packageName + "/");
  zos.putNextEntry(packageDir);
  ZipEntry z=new ZipEntry(packageName + "/Latest.props");
  ZipEntry z2=new ZipEntry(packageName + "/Latest.html");
  URLConnection conn=getConnection(m_packageRepository.toString() + "/" + packageName+ "/Latest.props");
  BufferedInputStream bi=new BufferedInputStream(conn.getInputStream());
  ByteArrayOutputStream bos=new ByteArrayOutputStream();
  transToBAOS(bi,bos);
  zos.putNextEntry(z);
  zos.write(bos.toByteArray());
  conn=getConnection(m_packageRepository.toString() + "/" + packageName+ "/Latest.html");
  bi=new BufferedInputStream(conn.getInputStream());
  bos=new ByteArrayOutputStream();
  transToBAOS(bi,bos);
  zos.putNextEntry(z2);
  zos.write(bos.toByteArray());
  z=new ZipEntry(packageName + "/versions.txt");
  conn=getConnection(m_packageRepository.toString() + "/" + packageName+ "/versions.txt");
  bi=new BufferedInputStream(conn.getInputStream());
  bos=new ByteArrayOutputStream();
  transToBAOS(bi,bos);
  zos.putNextEntry(z);
  zos.write(bos.toByteArray());
  z=new ZipEntry(packageName + "/index.html");
  conn=getConnection(m_packageRepository.toString() + "/" + packageName+ "/index.html");
  bi=new BufferedInputStream(conn.getInputStream());
  bos=new ByteArrayOutputStream();
  transToBAOS(bi,bos);
  zos.putNextEntry(z);
  zos.write(bos.toByteArray());
  List<Object> versions=getRepositoryPackageVersions(packageName);
  for (  Object o : versions) {
    conn=getConnection(m_packageRepository.toString() + "/" + packageName+ "/"+ o.toString()+ ".props");
    z=new ZipEntry(packageName + "/" + o.toString()+ ".props");
    bi=new BufferedInputStream(conn.getInputStream());
    bos=new ByteArrayOutputStream();
    transToBAOS(bi,bos);
    zos.putNextEntry(z);
    zos.write(bos.toByteArray());
    conn=getConnection(m_packageRepository.toString() + "/" + packageName+ "/"+ o.toString()+ ".html");
    z=new ZipEntry(packageName + "/" + o.toString()+ ".html");
    bi=new BufferedInputStream(conn.getInputStream());
    bos=new ByteArrayOutputStream();
    transToBAOS(bi,bos);
    zos.putNextEntry(z);
    zos.write(bos.toByteArray());
  }
}
