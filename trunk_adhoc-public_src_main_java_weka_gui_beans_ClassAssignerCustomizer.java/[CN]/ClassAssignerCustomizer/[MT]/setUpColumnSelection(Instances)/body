{
  if (m_displayColNames == false) {
    remove(m_caEditor);
  }
  int existingClassCol=0;
  String classColString=m_classAssigner.getClassColumn();
  if (classColString.trim().toLowerCase().compareTo("last") == 0 || classColString.equalsIgnoreCase("/last")) {
    existingClassCol=format.numAttributes() - 1;
  }
 else   if (classColString.trim().toLowerCase().compareTo("first") == 0 || classColString.equalsIgnoreCase("/first")) {
  }
 else {
    Attribute classAtt=format.attribute(classColString);
    if (classAtt != null) {
      existingClassCol=classAtt.index();
    }
 else {
      existingClassCol=Integer.parseInt(classColString);
      if (existingClassCol < 0) {
        existingClassCol=-1;
      }
 else       if (existingClassCol > format.numAttributes() - 1) {
        existingClassCol=format.numAttributes() - 1;
      }
 else {
        existingClassCol--;
      }
    }
  }
  String[] attribNames=new String[format.numAttributes() + 1];
  attribNames[0]="NO CLASS";
  for (int i=1; i < attribNames.length; i++) {
    String type="(" + Attribute.typeToStringShort(format.attribute(i - 1)) + ") ";
    attribNames[i]=type + format.attribute(i - 1).name();
  }
  m_ClassCombo.setModel(new DefaultComboBoxModel(attribNames));
  if (attribNames.length > 0) {
    m_ClassCombo.setSelectedIndex(existingClassCol + 1);
  }
  if (m_displayColNames == false) {
    add(m_holderP,BorderLayout.CENTER);
    m_displayColNames=true;
  }
  validate();
  repaint();
}
