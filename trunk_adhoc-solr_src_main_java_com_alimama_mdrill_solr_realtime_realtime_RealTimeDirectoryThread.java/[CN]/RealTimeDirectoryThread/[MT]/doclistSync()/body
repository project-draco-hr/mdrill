{
  long len=1000l;
  final lastParams lasttime=new lastParams();
  TimerTask task=new TimerTask(){
    @Override public void run(){
      int size=0;
      try {
synchronized (plock.doclistBuffer_lock) {
          size=data.doclistSize();
        }
        if (size == 0) {
          return;
        }
        long nowtime=System.currentTimeMillis();
        if (size >= UniqConfig.RealTimeDoclistBuffer() || (lasttime.getTimeout()) < nowtime) {
          mainThread.flushDocList();
          lasttime.lasttime=System.currentTimeMillis();
          long ts=lasttime.lasttime - nowtime;
          LOG.info("flushDocList timetake:" + (ts / 1000));
        }
      }
 catch (      Throwable ex) {
        LOG.error("flushDocList",ex);
      }
    }
  }
;
  taskList.add(task);
  RealTimeDirectorUtils.timerquick.schedule(task,len,len);
}
