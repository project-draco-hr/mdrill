{
  if (B.getRowDimension() != m) {
    throw new IllegalArgumentException("Matrix row dimensions must agree.");
  }
  if (!this.isFullRank()) {
    throw new RuntimeException("Matrix is rank deficient.");
  }
  int nx=B.getColumnDimension();
  double[][] X=B.getArrayCopy();
  for (int k=0; k < n; k++) {
    for (int j=0; j < nx; j++) {
      double s=0.0;
      for (int i=k; i < m; i++) {
        s+=QR[i][k] * X[i][j];
      }
      s=-s / QR[k][k];
      for (int i=k; i < m; i++) {
        X[i][j]+=s * QR[i][k];
      }
    }
  }
  for (int k=n - 1; k >= 0; k--) {
    for (int j=0; j < nx; j++) {
      X[k][j]/=Rdiag[k];
    }
    for (int i=0; i < k; i++) {
      for (int j=0; j < nx; j++) {
        X[i][j]-=X[k][j] * QR[i][k];
      }
    }
  }
  return (new Matrix(X,n,nx).getMatrix(0,n - 1,0,nx - 1));
}
