{
  double nll=0;
  int dim=m_NumPredictors + 1;
  for (int i=0; i < cls.length; i++) {
    double[] exp=new double[m_NumClasses - 1];
    int index;
    for (int offset=0; offset < m_NumClasses - 1; offset++) {
      index=offset * dim;
      for (int j=0; j < dim; j++)       exp[offset]+=m_Data[i][j] * x[index + j];
    }
    double max=exp[Utils.maxIndex(exp)];
    double denom=Math.exp(-max);
    double num;
    if (cls[i] == m_NumClasses - 1) {
      num=-max;
    }
 else {
      num=exp[cls[i]] - max;
    }
    for (int offset=0; offset < m_NumClasses - 1; offset++) {
      denom+=Math.exp(exp[offset] - max);
    }
    nll-=weights[i] * (num - Math.log(denom));
  }
  for (int offset=0; offset < m_NumClasses - 1; offset++) {
    for (int r=1; r < dim; r++)     nll+=m_Ridge * x[offset * dim + r] * x[offset * dim + r];
  }
  return nll;
}
