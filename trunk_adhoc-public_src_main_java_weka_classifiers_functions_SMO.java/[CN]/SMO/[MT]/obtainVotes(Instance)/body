{
  if (!m_checksTurnedOff) {
    m_Missing.input(inst);
    m_Missing.batchFinished();
    inst=m_Missing.output();
  }
  if (m_NominalToBinary != null) {
    m_NominalToBinary.input(inst);
    m_NominalToBinary.batchFinished();
    inst=m_NominalToBinary.output();
  }
  if (m_Filter != null) {
    m_Filter.input(inst);
    m_Filter.batchFinished();
    inst=m_Filter.output();
  }
  int[] votes=new int[inst.numClasses()];
  for (int i=0; i < inst.numClasses(); i++) {
    for (int j=i + 1; j < inst.numClasses(); j++) {
      double output=m_classifiers[i][j].SVMOutput(-1,inst);
      if (output > 0) {
        votes[j]+=1;
      }
 else {
        votes[i]+=1;
      }
    }
  }
  return votes;
}
