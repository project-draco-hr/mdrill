{
  super(weight);
  this.minNrShouldMatch=minNrShouldMatch;
  if (optionalScorers != null && optionalScorers.size() > 0) {
    for (    Scorer scorer : optionalScorers) {
      if (scorer.nextDoc() != NO_MORE_DOCS) {
        scorers=new SubScorer(scorer,false,false,bucketTable.newCollector(0),scorers);
      }
    }
  }
  if (prohibitedScorers != null && prohibitedScorers.size() > 0) {
    for (    Scorer scorer : prohibitedScorers) {
      if (scorer.nextDoc() != NO_MORE_DOCS) {
        scorers=new SubScorer(scorer,false,true,bucketTable.newCollector(PROHIBITED_MASK),scorers);
      }
    }
  }
  coordFactors=new float[optionalScorers.size() + 1];
  for (int i=0; i < coordFactors.length; i++) {
    coordFactors[i]=disableCoord ? 1.0f : similarity.coord(i,maxCoord);
  }
}
