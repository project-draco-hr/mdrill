{
  RectangularShape entityArea=null;
  EntityCollection entities=null;
  if (info != null) {
    entities=info.getOwner().getEntityCollection();
  }
  RectangularShape rect=new Ellipse2D.Double();
  Object antiAlias=g2.getRenderingHint(RenderingHints.KEY_ANTIALIASING);
  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_OFF);
  Number[] xNumber=data.getXValues();
  Number[] yNumber=data.getYValues();
  Number[] zNumber=data.getZValues();
  double[] x=new double[xNumber.length];
  double[] y=new double[yNumber.length];
  for (int i=0; i < x.length; i++) {
    x[i]=xNumber[i].doubleValue();
    y[i]=yNumber[i].doubleValue();
  }
  double transX=0.0;
  double transDX=0.0;
  double transY=0.0;
  double transDY=0.0;
  double size=dataArea.getWidth() * this.ptSizePct;
  for (int k=0; k < x.length; k++) {
    transX=domainAxis.valueToJava2D(x[k],dataArea,RectangleEdge.BOTTOM) - 0.5 * size;
    transY=rangeAxis.valueToJava2D(y[k],dataArea,RectangleEdge.LEFT) - 0.5 * size;
    transDX=size;
    transDY=size;
    rect.setFrame(transX,transY,transDX,transDY);
    if (zNumber[k] != null) {
      g2.setPaint(colorBar.getPaint(zNumber[k].doubleValue()));
      g2.fill(rect);
    }
 else     if (this.missingPaint != null) {
      g2.setPaint(this.missingPaint);
      g2.fill(rect);
    }
    entityArea=rect;
    if (entities != null) {
      String tip=null;
      if (getToolTipGenerator() != null) {
        tip=this.toolTipGenerator.generateToolTip(data,k);
      }
      String url=null;
      ContourEntity entity=new ContourEntity((RectangularShape)entityArea.clone(),tip,url);
      entity.setIndex(k);
      entities.add(entity);
    }
    if (plot.isDomainCrosshairLockedOnData()) {
      if (plot.isRangeCrosshairLockedOnData()) {
        crosshairState.updateCrosshairPoint(x[k],y[k],transX,transY,PlotOrientation.VERTICAL);
      }
 else {
        crosshairState.updateCrosshairX(transX);
      }
    }
 else {
      if (plot.isRangeCrosshairLockedOnData()) {
        crosshairState.updateCrosshairY(transY);
      }
    }
  }
  g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,antiAlias);
  return;
}
