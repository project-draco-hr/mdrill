{
  Vector<String> result;
  int i;
  Class clsNew;
  result=getCache(cls,pkgname);
  if (result == null) {
    if (VERBOSE)     System.out.println("Searching for '" + cls.getName() + "' in '"+ pkgname+ "':");
    result=new Vector<String>();
    if (m_ClassCache.getClassnames(pkgname) != null)     result.addAll(m_ClassCache.getClassnames(pkgname));
    i=0;
    while (i < result.size()) {
      try {
        clsNew=Class.forName((String)result.get(i));
        if (Modifier.isAbstract(clsNew.getModifiers())) {
          m_ClassCache.remove(result.get(i));
          result.remove(i);
        }
 else         if ((cls.isInterface()) && (!hasInterface(cls,clsNew))) {
          result.remove(i);
        }
 else         if ((!cls.isInterface()) && (!isSubclass(cls,clsNew))) {
          result.remove(i);
        }
 else {
          i++;
        }
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
    Collections.sort(result,new StringCompare());
    addCache(cls,pkgname,result);
  }
  return result;
}
