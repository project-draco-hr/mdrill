{
  Vector<String> list;
  Vector<String> packages;
  int i;
  StringTokenizer tok;
  if ((args.length == 1) && (args[0].equals("packages"))) {
    list=findPackages();
    for (i=0; i < list.size(); i++)     System.out.println(list.get(i));
  }
 else   if (args.length == 2) {
    packages=new Vector<String>();
    tok=new StringTokenizer(args[1],",");
    while (tok.hasMoreTokens())     packages.add(tok.nextToken());
    list=ClassDiscovery.find(args[0],(String[])packages.toArray(new String[packages.size()]));
    System.out.println("Searching for '" + args[0] + "' in '"+ args[1]+ "':\n"+ "  "+ list.size()+ " found.");
    for (i=0; i < list.size(); i++)     System.out.println("  " + (i + 1) + ". "+ list.get(i));
  }
 else {
    System.out.println("\nUsage:");
    System.out.println(ClassDiscovery.class.getName() + " packages");
    System.out.println("\tlists all packages in the classpath");
    System.out.println(ClassDiscovery.class.getName() + " <classname> <packagename(s)>");
    System.out.println("\tlists classes derived from/implementing 'classname' that");
    System.out.println("\tcan be found in 'packagename(s)' (comma-separated list");
    System.out.println();
    System.exit(1);
  }
}
