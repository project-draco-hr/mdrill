{
  SolrParams params=rb.req.getParams();
  if (!params.getBool(COMPONENT_NAME,false) || spellCheckers.isEmpty()) {
    return;
  }
  boolean shardRequest="true".equals(params.get(ShardParams.IS_SHARD));
  String q=params.get(SPELLCHECK_Q);
  SolrSpellChecker spellChecker=getSpellChecker(params);
  Collection<Token> tokens=null;
  if (q != null) {
    tokens=getTokens(q,spellChecker.getQueryAnalyzer());
  }
 else {
    q=rb.getQueryString();
    if (q == null) {
      q=params.get(CommonParams.Q);
    }
    tokens=queryConverter.convert(q);
  }
  if (tokens != null && tokens.isEmpty() == false) {
    if (spellChecker != null) {
      int count=params.getInt(SPELLCHECK_COUNT,1);
      boolean onlyMorePopular=params.getBool(SPELLCHECK_ONLY_MORE_POPULAR,DEFAULT_ONLY_MORE_POPULAR);
      boolean extendedResults=params.getBool(SPELLCHECK_EXTENDED_RESULTS,false);
      NamedList response=new SimpleOrderedMap();
      IndexReader reader=rb.req.getSearcher().getReader();
      boolean collate=params.getBool(SPELLCHECK_COLLATE,false);
      float accuracy=params.getFloat(SPELLCHECK_ACCURACY,Float.MIN_VALUE);
      SolrParams customParams=getCustomParams(getDictionaryName(params),params,shardRequest);
      SpellingOptions options=new SpellingOptions(tokens,reader,count,onlyMorePopular,extendedResults,accuracy,customParams);
      SpellingResult spellingResult=spellChecker.getSuggestions(options);
      if (spellingResult != null) {
        NamedList suggestions=toNamedList(shardRequest,spellingResult,q,extendedResults,collate);
        if (collate) {
          addCollationsToResponse(params,spellingResult,rb,q,suggestions);
        }
        response.add("suggestions",suggestions);
        rb.rsp.add("spellcheck",response);
      }
    }
 else {
      throw new SolrException(SolrException.ErrorCode.NOT_FOUND,"Specified dictionary does not exist.");
    }
  }
}
