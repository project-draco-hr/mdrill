{
  String id, label, source, target;
  Integer shape, style;
  int fontsize;
  Color fontcolor, color;
  InfoObject t;
  m_aNodes=new Vector(50,50);
  m_aEdges=new Vector(50,50);
  for (int noa=0; noa < m_nodes.size(); noa++) {
    t=(InfoObject)m_nodes.elementAt(noa);
    id=t.m_id;
    if (t.m_label == null) {
      if (m_noObj.m_label == null) {
        label="";
      }
 else {
        label=m_noObj.m_label;
      }
    }
 else {
      label=t.m_label;
    }
    if (t.m_shape == null) {
      if (m_noObj.m_shape == null) {
        shape=new Integer(2);
      }
 else {
        shape=getShape(m_noObj.m_shape);
      }
    }
 else {
      shape=getShape(t.m_shape);
    }
    if (shape == null) {
      shape=new Integer(2);
    }
    if (t.m_style == null) {
      if (m_noObj.m_style == null) {
        style=new Integer(1);
      }
 else {
        style=getStyle(m_noObj.m_style);
      }
    }
 else {
      style=getStyle(t.m_style);
    }
    if (style == null) {
      style=new Integer(1);
    }
    if (t.m_fontSize == null) {
      if (m_noObj.m_fontSize == null) {
        fontsize=12;
      }
 else {
        fontsize=Integer.valueOf(m_noObj.m_fontSize).intValue();
      }
    }
 else {
      fontsize=Integer.valueOf(t.m_fontSize).intValue();
    }
    if (t.m_fontColor == null) {
      if (m_noObj.m_fontColor == null) {
        fontcolor=Color.black;
      }
 else {
        fontcolor=(Color)m_colorTable.get(m_noObj.m_fontColor.toLowerCase());
      }
    }
 else {
      fontcolor=(Color)m_colorTable.get(t.m_fontColor.toLowerCase());
    }
    if (fontcolor == null) {
      fontcolor=Color.black;
    }
    if (t.m_color == null) {
      if (m_noObj.m_color == null) {
        color=Color.gray;
      }
 else {
        color=(Color)m_colorTable.get(m_noObj.m_color.toLowerCase());
      }
    }
 else {
      color=(Color)m_colorTable.get(t.m_color.toLowerCase());
    }
    if (color == null) {
      color=Color.gray;
    }
    m_aNodes.addElement(new Node(label,id,style.intValue(),shape.intValue(),color,t.m_data));
  }
  for (int noa=0; noa < m_edges.size(); noa++) {
    t=(InfoObject)m_edges.elementAt(noa);
    id=t.m_id;
    if (t.m_label == null) {
      if (m_noObj.m_label == null) {
        label="";
      }
 else {
        label=m_noObj.m_label;
      }
    }
 else {
      label=t.m_label;
    }
    if (t.m_shape == null) {
      if (m_noObj.m_shape == null) {
        shape=new Integer(2);
      }
 else {
        shape=getShape(m_noObj.m_shape);
      }
    }
 else {
      shape=getShape(t.m_shape);
    }
    if (shape == null) {
      shape=new Integer(2);
    }
    if (t.m_style == null) {
      if (m_noObj.m_style == null) {
        style=new Integer(1);
      }
 else {
        style=getStyle(m_noObj.m_style);
      }
    }
 else {
      style=getStyle(t.m_style);
    }
    if (style == null) {
      style=new Integer(1);
    }
    if (t.m_fontSize == null) {
      if (m_noObj.m_fontSize == null) {
        fontsize=12;
      }
 else {
        fontsize=Integer.valueOf(m_noObj.m_fontSize).intValue();
      }
    }
 else {
      fontsize=Integer.valueOf(t.m_fontSize).intValue();
    }
    if (t.m_fontColor == null) {
      if (m_noObj.m_fontColor == null) {
        fontcolor=Color.black;
      }
 else {
        fontcolor=(Color)m_colorTable.get(m_noObj.m_fontColor.toLowerCase());
      }
    }
 else {
      fontcolor=(Color)m_colorTable.get(t.m_fontColor.toLowerCase());
    }
    if (fontcolor == null) {
      fontcolor=Color.black;
    }
    if (t.m_color == null) {
      if (m_noObj.m_color == null) {
        color=Color.white;
      }
 else {
        color=(Color)m_colorTable.get(m_noObj.m_color.toLowerCase());
      }
    }
 else {
      color=(Color)m_colorTable.get(t.m_color.toLowerCase());
    }
    if (color == null) {
      color=Color.white;
    }
    m_aEdges.addElement(new Edge(label,t.m_source,t.m_target));
  }
  boolean f_set, s_set;
  Node x, sour=null, targ=null;
  Edge y;
  for (int noa=0; noa < m_aEdges.size(); noa++) {
    f_set=false;
    s_set=false;
    y=(Edge)m_aEdges.elementAt(noa);
    for (int nob=0; nob < m_aNodes.size(); nob++) {
      x=(Node)m_aNodes.elementAt(nob);
      if (x.getRefer().equals(y.getRtarget())) {
        f_set=true;
        targ=x;
      }
      if (x.getRefer().equals(y.getRsource())) {
        s_set=true;
        sour=x;
      }
      if (f_set == true && s_set == true) {
        break;
      }
    }
    if (targ != sour) {
      y.setTarget(targ);
      y.setSource(sour);
    }
 else {
      System.out.println("logic error");
    }
  }
  for (int noa=0; noa < m_aNodes.size(); noa++) {
    if (((Node)m_aNodes.elementAt(noa)).getParent(0) == null) {
      sour=(Node)m_aNodes.elementAt(noa);
    }
  }
  return sour;
}
