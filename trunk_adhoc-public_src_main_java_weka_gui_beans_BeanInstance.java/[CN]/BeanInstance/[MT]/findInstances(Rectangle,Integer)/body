{
  int index=0;
  if (tab.length > 0) {
    index=tab[0].intValue();
  }
  Vector components=null;
  if (TABBED_COMPONENTS.size() > 0 && index < TABBED_COMPONENTS.size()) {
    components=TABBED_COMPONENTS.get(index);
  }
  Graphics gx=null;
  FontMetrics fm=null;
  int centerX, centerY;
  int startX, startY, endX, endY;
  startX=(int)boundingBox.getX();
  startY=(int)boundingBox.getY();
  endX=(int)boundingBox.getMaxX();
  endY=(int)boundingBox.getMaxY();
  int minX=Integer.MAX_VALUE;
  int minY=Integer.MAX_VALUE;
  int maxX=Integer.MIN_VALUE;
  int maxY=Integer.MIN_VALUE;
  Vector result=new Vector();
  for (int i=0; i < components.size(); i++) {
    BeanInstance t=(BeanInstance)components.elementAt(i);
    centerX=t.getX() + (t.getWidth() / 2);
    centerY=t.getY() + (t.getHeight() / 2);
    if (boundingBox.contains(centerX,centerY)) {
      result.addElement(t);
      if (gx == null) {
        gx=((JComponent)t.getBean()).getGraphics();
        gx.setFont(new Font(null,Font.PLAIN,9));
        fm=gx.getFontMetrics();
      }
      String label="";
      if (t.getBean() instanceof Visible) {
        label=((Visible)t.getBean()).getVisual().getText();
      }
      int labelwidth=fm.stringWidth(label);
      int heightMultiplier=(labelwidth > t.getWidth()) ? 2 : 1;
      int brx=0;
      int blx=0;
      if (centerX - (labelwidth / 2) - 2 < t.getX()) {
        blx=(centerX - (labelwidth / 2) - 2);
        brx=centerX + (labelwidth / 2) + 2;
      }
 else {
        blx=t.getX() - 2;
        brx=t.getX() + t.getWidth() + 2;
      }
      if (blx < minX) {
        minX=blx;
      }
      if (brx > maxX) {
        maxX=brx;
      }
      if (t.getY() - 2 < minY) {
        minY=t.getY() - 2;
      }
      if (t.getY() + t.getHeight() + 2 > maxY) {
        maxY=t.getY() + t.getHeight() + 2;
      }
    }
  }
  boundingBox.setBounds(minX,minY,maxX - minX,maxY - minY);
  return result;
}
