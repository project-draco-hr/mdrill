{
  this.parent=parent;
  this.freqStream=null;
  if (buffer > 10240 && parent.core.freqStream instanceof KeyInput) {
    KeyInput kin=(KeyInput)parent.core.freqStream;
    this.freqStream=new BlockBufferInput((IndexInput)kin.input.clone(),kin.key);
    log.info("####KeyInput#####=" + buffer);
  }
 else {
    if (parent.core.freqStream instanceof KeyInput) {
      KeyInput kin=(KeyInput)parent.core.freqStream;
      this.freqStream=(IndexInput)kin.input.clone();
    }
 else {
      this.freqStream=(IndexInput)parent.core.freqStream.clone();
    }
    if (buffer > 0 && parent.core.freqStream instanceof BufferedIndexInput) {
      ((BufferedIndexInput)this.freqStream).setBufferSize(buffer);
      log.info("####setbigbuffer#####=" + buffer);
    }
  }
  try {
    isfrqCompress=this.freqStream.readVInt() == 1 ? true : false;
  }
 catch (  IOException e) {
  }
  if (!this.isfrqCompress) {
    ramread=this.freqStream;
  }
synchronized (parent) {
    this.deletedDocs=parent.deletedDocs;
  }
  this.skipInterval=parent.core.getTermsReader().getSkipInterval();
  this.maxSkipLevels=parent.core.getTermsReader().getMaxSkipLevels();
}
