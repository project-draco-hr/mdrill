{
  m_IncludeAll.setToolTipText("Selects all attributes");
  m_IncludeAll.setEnabled(false);
  m_IncludeAll.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_Model.includeAll();
    }
  }
);
  m_RemoveAll.setToolTipText("Unselects all attributes");
  m_RemoveAll.setEnabled(false);
  m_RemoveAll.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_Model.removeAll();
    }
  }
);
  m_Invert.setToolTipText("Inverts the current attribute selection");
  m_Invert.setEnabled(false);
  m_Invert.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      m_Model.invert();
    }
  }
);
  m_Pattern.setToolTipText("Selects all attributes that match a reg. expression");
  m_Pattern.setEnabled(false);
  m_Pattern.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      String pattern=JOptionPane.showInputDialog(m_Pattern.getParent(),"Enter a Perl regular expression",m_PatternRegEx);
      if (pattern != null) {
        try {
          Pattern.compile(pattern);
          m_PatternRegEx=pattern;
          m_Model.pattern(pattern);
        }
 catch (        Exception ex) {
          JOptionPane.showMessageDialog(m_Pattern.getParent(),"'" + pattern + "' is not a valid Perl regular expression!\n"+ "Error: "+ ex,"Error in Pattern...",JOptionPane.ERROR_MESSAGE);
        }
      }
    }
  }
);
  m_Table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  m_Table.setColumnSelectionAllowed(false);
  m_Table.setPreferredScrollableViewportSize(new Dimension(250,150));
  JPanel p1=new JPanel();
  p1.setBorder(BorderFactory.createEmptyBorder(10,5,10,5));
  p1.setLayout(new GridLayout(1,4,5,5));
  if (include) {
    p1.add(m_IncludeAll);
  }
  if (remove) {
    p1.add(m_RemoveAll);
  }
  if (invert) {
    p1.add(m_Invert);
  }
  if (pattern) {
    p1.add(m_Pattern);
  }
  setLayout(new BorderLayout());
  if (include || remove || invert|| pattern) {
    add(p1,BorderLayout.NORTH);
  }
  add(new JScrollPane(m_Table),BorderLayout.CENTER);
}
