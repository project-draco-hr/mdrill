{
  SolrInputDocument doc=new SolrInputDocument();
  StringBuilder text=new StringBuilder();
  String name=null;
  String attrName="";
  float boost=1.0f;
  boolean isNull=false;
  while (true) {
    int event=parser.next();
switch (event) {
case XMLStreamConstants.SPACE:
case XMLStreamConstants.CDATA:
case XMLStreamConstants.CHARACTERS:
      text.append(parser.getText());
    break;
case XMLStreamConstants.END_ELEMENT:
  if ("doc".equals(parser.getLocalName())) {
    return doc;
  }
 else   if ("field".equals(parser.getLocalName())) {
    if (!isNull) {
      doc.addField(name,text.toString(),boost);
      boost=1.0f;
    }
  }
break;
case XMLStreamConstants.START_ELEMENT:
text.setLength(0);
String localName=parser.getLocalName();
if (!"field".equals(localName)) {
log.warn("unexpected XML tag doc/" + localName);
throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,"unexpected XML tag doc/" + localName);
}
String attrVal="";
for (int i=0; i < parser.getAttributeCount(); i++) {
attrName=parser.getAttributeLocalName(i);
attrVal=parser.getAttributeValue(i);
if ("name".equals(attrName)) {
name=attrVal;
}
}
break;
}
}
}
