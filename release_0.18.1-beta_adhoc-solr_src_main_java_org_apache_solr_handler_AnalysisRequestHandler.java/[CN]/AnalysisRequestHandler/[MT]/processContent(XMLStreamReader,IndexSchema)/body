{
  NamedList<Object> result=new SimpleOrderedMap<Object>();
  while (true) {
    int event=parser.next();
switch (event) {
case XMLStreamConstants.END_DOCUMENT:
{
        parser.close();
        return result;
      }
case XMLStreamConstants.START_ELEMENT:
{
      String currTag=parser.getLocalName();
      if ("doc".equals(currTag)) {
        log.trace("Tokenizing doc...");
        SolrInputDocument doc=readDoc(parser);
        SchemaField uniq=schema.getUniqueKeyField();
        NamedList<NamedList<NamedList<Object>>> theTokens=new SimpleOrderedMap<NamedList<NamedList<Object>>>();
        result.add(doc.getFieldValue(uniq.getName()).toString(),theTokens);
        for (        String name : doc.getFieldNames()) {
          FieldType ft=schema.getFieldType(name);
          Analyzer analyzer=ft.getAnalyzer();
          Collection<Object> vals=doc.getFieldValues(name);
          for (          Object val : vals) {
            Reader reader=new StringReader(val.toString());
            TokenStream tstream=analyzer.tokenStream(name,reader);
            NamedList<NamedList<Object>> tokens=getTokens(tstream);
            theTokens.add(name,tokens);
          }
        }
      }
      break;
    }
}
}
}
