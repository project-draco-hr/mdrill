{
  StringBuffer optionsText=new StringBuffer("");
  optionsText.append("\n\nGeneral options:\n\n");
  optionsText.append("-h\n\tdisplay this help\n");
  optionsText.append("-i <name of input file>\n");
  optionsText.append("\tSets training file.\n");
  optionsText.append("-c <class index>\n");
  optionsText.append("\tSets the class index for supervised attribute\n");
  optionsText.append("\tselection. Default=last column.\n");
  optionsText.append("-s <class name>\n");
  optionsText.append("\tSets search method for subset evaluators.\n");
  optionsText.append("-x <number of folds>\n");
  optionsText.append("\tPerform a cross validation.\n");
  optionsText.append("-n <random number seed>\n");
  optionsText.append("\tUse in conjunction with -x.\n");
  if (ASEvaluator instanceof OptionHandler) {
    optionsText.append("\nOptions specific to " + ASEvaluator.getClass().getName() + ":\n\n");
    Enumeration enu=((OptionHandler)ASEvaluator).listOptions();
    while (enu.hasMoreElements()) {
      Option option=(Option)enu.nextElement();
      optionsText.append(option.synopsis() + '\n');
      optionsText.append(option.description() + "\n");
    }
  }
  if (searchMethod != null) {
    if (searchMethod instanceof OptionHandler) {
      optionsText.append("\nOptions specific to " + searchMethod.getClass().getName() + ":\n\n");
      Enumeration enu=((OptionHandler)searchMethod).listOptions();
      while (enu.hasMoreElements()) {
        Option option=(Option)enu.nextElement();
        optionsText.append(option.synopsis() + '\n');
        optionsText.append(option.description() + "\n");
      }
    }
  }
 else {
    if (ASEvaluator instanceof SubsetEvaluator) {
      System.out.println("No search method given.");
    }
  }
  return optionsText.toString();
}
