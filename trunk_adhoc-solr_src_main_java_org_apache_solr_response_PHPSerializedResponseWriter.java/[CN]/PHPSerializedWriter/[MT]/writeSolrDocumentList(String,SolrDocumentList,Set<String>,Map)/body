{
  boolean includeScore=false;
  if (fields != null) {
    includeScore=fields.contains("score");
    if (fields.size() == 0 || (fields.size() == 1 && includeScore) || fields.contains("*")) {
      fields=null;
    }
  }
  int sz=docs.size();
  writeMapOpener(includeScore ? 4 : 3);
  writeKey("numFound",false);
  writeLong(null,docs.getNumFound());
  writeKey("start",false);
  writeLong(null,docs.getStart());
  if (includeScore && docs.getMaxScore() != null) {
    writeKey("maxScore",false);
    writeFloat(null,docs.getMaxScore());
  }
  writeKey("sum",false);
  writeDouble(null,docs.getSum());
  writeKey("max",false);
  writeDouble(null,docs.getMax());
  writeKey("min",false);
  writeDouble(null,docs.getMin());
  writeKey("docs",false);
  writeArrayOpener(sz);
  for (int i=0; i < sz; i++) {
    writeKey(i,false);
    writeSolrDocument(null,docs.get(i),fields,otherFields);
  }
  writeArrayCloser();
  if (otherFields != null) {
    writeMap(null,otherFields,true,false);
  }
  writeMapCloser();
}
