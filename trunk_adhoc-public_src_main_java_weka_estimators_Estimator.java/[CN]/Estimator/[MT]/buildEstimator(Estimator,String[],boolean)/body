{
  boolean debug=false;
  boolean helpRequest;
  Builder build=new Builder();
  try {
    setGeneralOptions(build,est,options);
    if (est instanceof OptionHandler) {
      ((OptionHandler)est).setOptions(options);
    }
    Utils.checkForRemainingOptions(options);
    buildEstimator(est,build.m_instances,build.m_attrIndex,build.m_classIndex,build.m_classValueIndex,isIncremental);
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    System.out.println(ex.getMessage());
    String specificOptions="";
    if (est instanceof OptionHandler) {
      specificOptions+="\nEstimator options:\n\n";
      Enumeration enumOptions=((OptionHandler)est).listOptions();
      while (enumOptions.hasMoreElements()) {
        Option option=(Option)enumOptions.nextElement();
        specificOptions+=option.synopsis() + '\n' + option.description()+ "\n";
      }
    }
    String genericOptions="\nGeneral options:\n\n" + "-h\n" + "\tGet help on available options.\n"+ "-i <file>\n"+ "\tThe name of the file containing input instances.\n"+ "\tIf not supplied then instances will be read from stdin.\n"+ "-a <attribute index>\n"+ "\tThe number of the attribute the probability distribution\n"+ "\testimation is done for.\n"+ "\t\"first\" and \"last\" are also valid entries.\n"+ "\tIf not supplied then no class is assigned.\n"+ "-c <class index>\n"+ "\tIf class value index is set, this attribute is taken as class.\n"+ "\t\"first\" and \"last\" are also valid entries.\n"+ "\tIf not supplied then last is default.\n"+ "-v <class value index>\n"+ "\tIf value is different to -1, select instances of this class value.\n"+ "\t\"first\" and \"last\" are also valid entries.\n"+ "\tIf not supplied then all instances are taken.\n";
    throw new Exception('\n' + ex.getMessage() + specificOptions+ genericOptions);
  }
}
