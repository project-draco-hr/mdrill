{
  boolean[] result=new boolean[2];
  Instances train=null;
  Associator associator=null;
  try {
    train=makeTestDataset(42,numTrain,nominalPredictor ? getNumNominal() : 0,numericPredictor ? getNumNumeric() : 0,stringPredictor ? getNumString() : 0,datePredictor ? getNumDate() : 0,relationalPredictor ? getNumRelational() : 0,numClasses,classType,classIndex,multiInstance);
    if (missingLevel > 0)     addMissing(train,missingLevel,predictorMissing,classMissing);
    associator=AbstractAssociator.makeCopies(getAssociator(),1)[0];
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    throw new Error("Error setting up for tests: " + ex.getMessage());
  }
  try {
    associator.buildAssociations(train);
    println("yes");
    result[0]=true;
  }
 catch (  Exception ex) {
    boolean acceptable=false;
    String msg;
    if (ex.getMessage() == null)     msg="";
 else     msg=ex.getMessage().toLowerCase();
    if (msg.indexOf("not in classpath") > -1)     m_ClasspathProblems=true;
    for (int i=0; i < accepts.size(); i++) {
      if (msg.indexOf((String)accepts.elementAt(i)) >= 0) {
        acceptable=true;
      }
    }
    println("no" + (acceptable ? " (OK error message)" : ""));
    result[1]=acceptable;
    if (m_Debug) {
      println("\n=== Full Report ===");
      print("Problem during building");
      println(": " + ex.getMessage() + "\n");
      if (!acceptable) {
        if (accepts.size() > 0) {
          print("Error message doesn't mention ");
          for (int i=0; i < accepts.size(); i++) {
            if (i != 0) {
              print(" or ");
            }
            print('"' + (String)accepts.elementAt(i) + '"');
          }
        }
        println("here is the dataset:\n");
        println("=== Train Dataset ===\n" + train.toString() + "\n");
      }
    }
  }
  return result;
}
