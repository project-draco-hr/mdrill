{
  SimpleDateFormat fmt=new SimpleDateFormat("yyyyMMdd");
  String day=fmt.format(new Date());
  Map stormconf=Utils.readStormConfig();
  String hdpConf=(String)stormconf.get("hadoop.conf.dir");
  String connstr=(String)stormconf.get("higo.download.offline.conn");
  String uname=(String)stormconf.get("higo.download.offline.username");
  String passwd=(String)stormconf.get("higo.download.offline.passwd");
  String store=(String)stormconf.get("higo.download.offline.store") + "/" + day+ "/upload_"+ java.util.UUID.randomUUID().toString();
  Configuration conf=getConf(stormconf);
  FileSystem fs=FileSystem.get(conf);
  if (!fs.exists(new Path(store))) {
    fs.mkdirs(new Path(store));
  }
  HashMap<String,String> params=new HashMap<String,String>();
  FSDataOutputStream out=fs.create(new Path(store,String.valueOf(System.currentTimeMillis())));
  Upload up=new Upload();
  up.mergerTo(request,response,"utf-8",out,params);
  out.close();
  outStream.append(store);
  outStream.append("<br>\r\n");
  for (  Entry<String,String> e : params.entrySet()) {
    outStream.append(e.getKey());
    outStream.append("=");
    outStream.append(e.getValue());
    outStream.append("<br>\r\n");
  }
  return params;
}
