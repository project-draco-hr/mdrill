{
  if (oldDocID < minDocID)   return oldDocID;
 else   if (oldDocID >= maxDocID)   return oldDocID - docShift;
 else {
    int lo=0;
    int hi=docMaps.length - 1;
    while (hi >= lo) {
      int mid=(lo + hi) >>> 1;
      int midValue=starts[mid];
      if (oldDocID < midValue)       hi=mid - 1;
 else       if (oldDocID > midValue)       lo=mid + 1;
 else {
        while (mid + 1 < docMaps.length && starts[mid + 1] == midValue) {
          mid++;
        }
        if (docMaps[mid] != null)         return newStarts[mid] + docMaps[mid][oldDocID - starts[mid]];
 else         return newStarts[mid] + oldDocID - starts[mid];
      }
    }
    if (docMaps[hi] != null)     return newStarts[hi] + docMaps[hi][oldDocID - starts[hi]];
 else     return newStarts[hi] + oldDocID - starts[hi];
  }
}
