{
  String optionString;
  resetOptions();
  if (Utils.getFlag('X',options)) {
    throw new Exception("Cross validation is not a valid option" + " when using attribute selection as a Filter.");
  }
  optionString=Utils.getOption('E',options);
  if (optionString.length() != 0) {
    optionString=optionString.trim();
    int breakLoc=optionString.indexOf(' ');
    String evalClassName=optionString;
    String evalOptionsString="";
    String[] evalOptions=null;
    if (breakLoc != -1) {
      evalClassName=optionString.substring(0,breakLoc);
      evalOptionsString=optionString.substring(breakLoc).trim();
      evalOptions=Utils.splitOptions(evalOptionsString);
    }
    setEvaluator(ASEvaluation.forName(evalClassName,evalOptions));
  }
  if (m_ASEvaluator instanceof AttributeEvaluator) {
    setSearch(new Ranker());
  }
  optionString=Utils.getOption('S',options);
  if (optionString.length() != 0) {
    optionString=optionString.trim();
    int breakLoc=optionString.indexOf(' ');
    String SearchClassName=optionString;
    String SearchOptionsString="";
    String[] SearchOptions=null;
    if (breakLoc != -1) {
      SearchClassName=optionString.substring(0,breakLoc);
      SearchOptionsString=optionString.substring(breakLoc).trim();
      SearchOptions=Utils.splitOptions(SearchOptionsString);
    }
    setSearch(ASSearch.forName(SearchClassName,SearchOptions));
  }
  Utils.checkForRemainingOptions(options);
}
