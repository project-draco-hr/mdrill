{
  int v_1;
  int v_2;
  int v_3;
  int v_4;
  int v_5;
  int v_6;
  int v_7;
  int v_8;
  int v_9;
  int v_10;
  int v_11;
  int v_12;
  int v_13;
  lab0:   do {
    v_1=cursor;
    lab1:     do {
      if (!r_exception1()) {
        break lab1;
      }
      break lab0;
    }
 while (false);
    cursor=v_1;
    lab2:     do {
{
        v_2=cursor;
        lab3:         do {
{
            int c=cursor + 3;
            if (0 > c || c > limit) {
              break lab3;
            }
            cursor=c;
          }
          break lab2;
        }
 while (false);
        cursor=v_2;
      }
      break lab0;
    }
 while (false);
    cursor=v_1;
    v_3=cursor;
    lab4:     do {
      if (!r_prelude()) {
        break lab4;
      }
    }
 while (false);
    cursor=v_3;
    v_4=cursor;
    lab5:     do {
      if (!r_mark_regions()) {
        break lab5;
      }
    }
 while (false);
    cursor=v_4;
    limit_backward=cursor;
    cursor=limit;
    v_5=limit - cursor;
    lab6:     do {
      if (!r_Step_1a()) {
        break lab6;
      }
    }
 while (false);
    cursor=limit - v_5;
    lab7:     do {
      v_6=limit - cursor;
      lab8:       do {
        if (!r_exception2()) {
          break lab8;
        }
        break lab7;
      }
 while (false);
      cursor=limit - v_6;
      v_7=limit - cursor;
      lab9:       do {
        if (!r_Step_1b()) {
          break lab9;
        }
      }
 while (false);
      cursor=limit - v_7;
      v_8=limit - cursor;
      lab10:       do {
        if (!r_Step_1c()) {
          break lab10;
        }
      }
 while (false);
      cursor=limit - v_8;
      v_9=limit - cursor;
      lab11:       do {
        if (!r_Step_2()) {
          break lab11;
        }
      }
 while (false);
      cursor=limit - v_9;
      v_10=limit - cursor;
      lab12:       do {
        if (!r_Step_3()) {
          break lab12;
        }
      }
 while (false);
      cursor=limit - v_10;
      v_11=limit - cursor;
      lab13:       do {
        if (!r_Step_4()) {
          break lab13;
        }
      }
 while (false);
      cursor=limit - v_11;
      v_12=limit - cursor;
      lab14:       do {
        if (!r_Step_5()) {
          break lab14;
        }
      }
 while (false);
      cursor=limit - v_12;
    }
 while (false);
    cursor=limit_backward;
    v_13=cursor;
    lab15:     do {
      if (!r_postlude()) {
        break lab15;
      }
    }
 while (false);
    cursor=v_13;
  }
 while (false);
  return true;
}
