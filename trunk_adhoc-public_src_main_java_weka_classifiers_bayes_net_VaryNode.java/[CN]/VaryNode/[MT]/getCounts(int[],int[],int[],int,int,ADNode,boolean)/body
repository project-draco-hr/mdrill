{
  int nCurrentNode=nNodes[iNode];
  for (int iValue=0; iValue < m_ADNodes.length; iValue++) {
    if (iValue != m_nMCV) {
      if (m_ADNodes[iValue] != null) {
        m_ADNodes[iValue].getCounts(nCounts,nNodes,nOffsets,iNode + 1,iOffset + nOffsets[iNode] * iValue,bSubstract);
      }
    }
 else {
      parent.getCounts(nCounts,nNodes,nOffsets,iNode + 1,iOffset + nOffsets[iNode] * iValue,bSubstract);
      for (int iValue2=0; iValue2 < m_ADNodes.length; iValue2++) {
        if (iValue2 != m_nMCV && m_ADNodes[iValue2] != null) {
          m_ADNodes[iValue2].getCounts(nCounts,nNodes,nOffsets,iNode + 1,iOffset + nOffsets[iNode] * iValue,!bSubstract);
        }
      }
    }
  }
}
