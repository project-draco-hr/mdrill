{
  final StringBuffer result=new StringBuffer();
  result.append(getName());
  result.append(" version ");
  result.append(getVersion());
  result.append(".\n");
  result.append(getCopyright());
  result.append(".\n");
  result.append("\n");
  result.append("For terms of use, see the licence below.\n");
  result.append("\n");
  result.append("FURTHER INFORMATION:");
  result.append(getInfo());
  result.append("\n");
  result.append("CONTRIBUTORS:");
  if (this.contributors != null) {
    final Iterator iterator=this.contributors.iterator();
    while (iterator.hasNext()) {
      final Contributor contributor=(Contributor)iterator.next();
      result.append(contributor.getName());
      result.append(" (");
      result.append(contributor.getEmail());
      result.append(").");
    }
  }
 else {
    result.append("None");
  }
  result.append("\n");
  result.append("OTHER LIBRARIES USED BY ");
  result.append(getName());
  result.append(":");
  final Library[] libraries=getLibraries();
  if (libraries.length != 0) {
    for (int i=0; i < libraries.length; i++) {
      final Library lib=libraries[i];
      result.append(lib.getName());
      result.append(" ");
      result.append(lib.getVersion());
      result.append(" (");
      result.append(lib.getInfo());
      result.append(").");
    }
  }
 else {
    result.append("None");
  }
  result.append("\n");
  result.append(getName());
  result.append(" LICENCE TERMS:");
  result.append("\n");
  result.append(getLicenceText());
  return result.toString();
}
