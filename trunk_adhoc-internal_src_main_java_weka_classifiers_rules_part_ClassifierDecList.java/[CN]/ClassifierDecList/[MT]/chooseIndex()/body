{
  int minIndex=-1;
  double estimated, min=Double.MAX_VALUE;
  int i, j;
  for (i=0; i < m_sons.length; i++)   if (son(i) == null) {
    if (Utils.sm(localModel().distribution().perBag(i),(double)m_minNumObj))     estimated=Double.MAX_VALUE;
 else {
      estimated=0;
      for (j=0; j < localModel().distribution().numClasses(); j++)       estimated-=m_splitCrit.logFunc(localModel().distribution().perClassPerBag(i,j));
      estimated+=m_splitCrit.logFunc(localModel().distribution().perBag(i));
      estimated/=localModel().distribution().perBag(i);
    }
    if (Utils.smOrEq(estimated,0))     return i;
    if (Utils.sm(estimated,min)) {
      min=estimated;
      minIndex=i;
    }
  }
  return minIndex;
}
