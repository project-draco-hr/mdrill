{
  Random r=new Random();
  UnivariateNormalEstimator e=new UnivariateNormalEstimator();
  System.out.println(e);
  double sum=0;
  for (int i=0; i < 100000; i++) {
    sum+=Math.exp(e.logDensity(r.nextDouble() * 10.0 - 5.0));
  }
  System.out.println("Approximate integral: " + 10.0 * sum / 100000);
  for (int i=0; i < 100000; i++) {
    e.addValue(r.nextGaussian(),1);
    e.addValue(r.nextGaussian() * 2.0,3);
  }
  System.out.println(e);
  sum=0;
  for (int i=0; i < 100000; i++) {
    sum+=Math.exp(e.logDensity(r.nextDouble() * 10.0 - 5.0));
  }
  System.out.println("Approximate integral: " + 10.0 * sum / 100000);
  e=new UnivariateNormalEstimator();
  for (int i=0; i < 100000; i++) {
    e.addValue(r.nextGaussian(),1);
    e.addValue(r.nextGaussian() * 2.0,1);
    e.addValue(r.nextGaussian() * 2.0,1);
    e.addValue(r.nextGaussian() * 2.0,1);
  }
  System.out.println(e);
  sum=0;
  for (int i=0; i < 100000; i++) {
    sum+=Math.exp(e.logDensity(r.nextDouble() * 10.0 - 5.0));
  }
  System.out.println("Approximate integral: " + 10.0 * sum / 100000);
  e=new UnivariateNormalEstimator();
  for (int i=0; i < 100000; i++) {
    e.addValue(r.nextGaussian() * 5.0 + 3.0,1);
  }
  System.out.println(e);
  double[][] intervals=e.predictIntervals(0.95);
  System.out.println("Lower: " + intervals[0][0] + " Upper: "+ intervals[0][1]);
  double covered=0;
  for (int i=0; i < 100000; i++) {
    double val=r.nextGaussian() * 5.0 + 3.0;
    if (val >= intervals[0][0] && val <= intervals[0][1]) {
      covered++;
    }
  }
  System.out.println("Coverage: " + covered / 100000);
  intervals=e.predictIntervals(0.8);
  System.out.println("Lower: " + intervals[0][0] + " Upper: "+ intervals[0][1]);
  covered=0;
  for (int i=0; i < 100000; i++) {
    double val=r.nextGaussian() * 5.0 + 3.0;
    if (val >= intervals[0][0] && val <= intervals[0][1]) {
      covered++;
    }
  }
  System.out.println("Coverage: " + covered / 100000);
}
