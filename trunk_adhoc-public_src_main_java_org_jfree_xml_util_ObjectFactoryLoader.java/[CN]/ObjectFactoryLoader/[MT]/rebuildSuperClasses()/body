{
  this.propertyDefinition=new ArrayList();
  this.attributeDefinition=new ArrayList();
  this.constructorDefinition=new ArrayList();
  this.lookupDefinitions=new ArrayList();
  this.orderedNames=new ArrayList();
  final HashMap newObjectDescriptions=new HashMap();
  final Iterator it=this.objectMappings.keySet().iterator();
  while (it.hasNext()) {
    final Object key=it.next();
    final GenericObjectFactory gef=(GenericObjectFactory)this.objectMappings.get(key);
    performSuperClassUpdate(gef);
    final PropertyDefinition[] propertyDefs=(PropertyDefinition[])this.propertyDefinition.toArray(new PropertyDefinition[0]);
    final LookupDefinition[] lookupDefs=(LookupDefinition[])this.lookupDefinitions.toArray(new LookupDefinition[0]);
    final AttributeDefinition[] attribDefs=(AttributeDefinition[])this.attributeDefinition.toArray(new AttributeDefinition[0]);
    final ConstructorDefinition[] constructorDefs=(ConstructorDefinition[])this.constructorDefinition.toArray(new ConstructorDefinition[0]);
    final String[] orderedNamesDefs=(String[])this.orderedNames.toArray(new String[0]);
    final GenericObjectFactory objectFactory=new GenericObjectFactory(gef.getBaseClass(),gef.getRegisterName(),constructorDefs,propertyDefs,lookupDefs,attribDefs,orderedNamesDefs);
    newObjectDescriptions.put(key,objectFactory);
    this.propertyDefinition.clear();
    this.attributeDefinition.clear();
    this.constructorDefinition.clear();
    this.lookupDefinitions.clear();
    this.orderedNames.clear();
  }
  this.objectMappings.clear();
  this.objectMappings=newObjectDescriptions;
  this.propertyDefinition=null;
  this.attributeDefinition=null;
  this.constructorDefinition=null;
  this.lookupDefinitions=null;
  this.orderedNames=null;
}
