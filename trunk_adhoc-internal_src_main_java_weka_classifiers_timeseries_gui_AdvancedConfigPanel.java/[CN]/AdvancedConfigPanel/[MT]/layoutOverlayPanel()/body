{
  JPanel basePanel=new JPanel();
  basePanel.setLayout(new BorderLayout());
  JPanel temp=new JPanel();
  temp.setLayout(new BorderLayout());
  JPanel checkHolder=new JPanel();
  checkHolder.setLayout(new BorderLayout());
  checkHolder.add(m_useOverlayData,BorderLayout.NORTH);
  m_useOverlayData.setEnabled(false);
  temp.add(checkHolder,BorderLayout.EAST);
  temp.add(m_overlaySelector,BorderLayout.CENTER);
  m_overlaySelector.setPreferredScrollableViewportSize(new Dimension(250,70));
  JPanel botP=new JPanel();
  botP.setLayout(new BorderLayout());
  botP.setBorder(BorderFactory.createTitledBorder("Overlay data selection"));
  botP.add(temp,BorderLayout.CENTER);
  m_useOverlayData.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      if (m_instances != null && m_useOverlayData.isSelected()) {
        if (m_overlaySelector.getSelectionModel() != null) {
          if (m_overlayHeader == null) {
            m_overlayHeader=createAvailableOverlayList();
          }
 else {
            Instances newI=createAvailableOverlayList();
            if (newI == null) {
              m_overlaySelector.clearTableModel();
              m_overlayHeader=null;
              return;
            }
 else             if (!newI.equalHeaders(m_overlayHeader)) {
              m_overlayHeader=newI;
            }
          }
          m_overlaySelector.setInstances(m_overlayHeader);
        }
      }
 else {
        m_overlaySelector.clearTableModel();
      }
    }
  }
);
  basePanel.add(botP,BorderLayout.NORTH);
  m_configHolder.addTab("Overlay data",null,basePanel,"Specify attributes that are to be considered as \"overlay\" data");
}
