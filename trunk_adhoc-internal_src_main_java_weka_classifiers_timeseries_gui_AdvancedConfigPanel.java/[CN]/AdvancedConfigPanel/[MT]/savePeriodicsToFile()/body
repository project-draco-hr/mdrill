{
  if (m_fileChooser == null) {
    m_fileChooser=new JFileChooser(new File(System.getProperty("user.home")));
    m_fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
    FileFilter filter=new ExtensionFileFilter(".periodics","Time series date-derived " + "periodic attribute definitions (*periodics)");
    m_fileChooser.addChoosableFileFilter(filter);
  }
  int result=m_fileChooser.showSaveDialog(this);
  if (result == JFileChooser.APPROVE_OPTION) {
    File saveFile=m_fileChooser.getSelectedFile();
    if (saveFile.toString().indexOf(".periodics") < 0) {
      saveFile=new File(saveFile.toString() + ".periodics");
    }
    PrintWriter br=new PrintWriter(new BufferedWriter(new FileWriter(saveFile)));
    br.print("time-series-periodics\n");
    int[] selected=m_dateDerivedPeriodicSelector.getSelectedAttributes();
    if (m_dateDerivedPeriodicsHeader != null) {
      for (int i=0; i < selected.length; i++) {
        int s=selected[i];
        String name=m_dateDerivedPeriodicsHeader.attribute(s).name();
        if (s < NUM_PREDEFINED_PERIODICS) {
          br.print("*pre-defined*:" + name + "\n");
        }
 else {
          name=name.replaceFirst("c_","");
          ArrayList<CustomPeriodicTest> selectedP=m_customPeriodics.get(name);
          br.print("*custom*:" + name + "\n");
          for (int j=0; j < selectedP.size(); j++) {
            br.print(selectedP.get(j).toString() + "\n");
          }
        }
      }
    }
    br.flush();
    br.close();
  }
}
