{
  AxisSpace space=new AxisSpace();
  PlotOrientation orientation=getOrientation();
  AxisSpace fixed=getFixedDomainAxisSpace();
  if (fixed != null) {
    if (orientation == PlotOrientation.HORIZONTAL) {
      space.setLeft(fixed.getLeft());
      space.setRight(fixed.getRight());
    }
 else     if (orientation == PlotOrientation.VERTICAL) {
      space.setTop(fixed.getTop());
      space.setBottom(fixed.getBottom());
    }
  }
 else {
    ValueAxis xAxis=getDomainAxis();
    RectangleEdge xEdge=Plot.resolveDomainAxisLocation(getDomainAxisLocation(),orientation);
    if (xAxis != null) {
      space=xAxis.reserveSpace(g2,this,plotArea,xEdge,space);
    }
  }
  Rectangle2D adjustedPlotArea=space.shrink(plotArea,null);
  int n=this.subplots.size();
  int totalWeight=0;
  for (int i=0; i < n; i++) {
    XYPlot sub=(XYPlot)this.subplots.get(i);
    totalWeight+=sub.getWeight();
  }
  this.subplotAreas=new Rectangle2D[n];
  double x=adjustedPlotArea.getX();
  double y=adjustedPlotArea.getY();
  double usableSize=0.0;
  if (orientation == PlotOrientation.HORIZONTAL) {
    usableSize=adjustedPlotArea.getWidth() - this.gap * (n - 1);
  }
 else   if (orientation == PlotOrientation.VERTICAL) {
    usableSize=adjustedPlotArea.getHeight() - this.gap * (n - 1);
  }
  for (int i=0; i < n; i++) {
    XYPlot plot=(XYPlot)this.subplots.get(i);
    if (orientation == PlotOrientation.HORIZONTAL) {
      double w=usableSize * plot.getWeight() / totalWeight;
      this.subplotAreas[i]=new Rectangle2D.Double(x,y,w,adjustedPlotArea.getHeight());
      x=x + w + this.gap;
    }
 else     if (orientation == PlotOrientation.VERTICAL) {
      double h=usableSize * plot.getWeight() / totalWeight;
      this.subplotAreas[i]=new Rectangle2D.Double(x,y,adjustedPlotArea.getWidth(),h);
      y=y + h + this.gap;
    }
    AxisSpace subSpace=plot.calculateRangeAxisSpace(g2,this.subplotAreas[i],null);
    space.ensureAtLeast(subSpace);
  }
  return space;
}
