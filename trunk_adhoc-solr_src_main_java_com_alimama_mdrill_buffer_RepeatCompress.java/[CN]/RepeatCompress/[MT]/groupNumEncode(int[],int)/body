{
  HashMap<Integer,groupCount> groupCount=new HashMap<Integer,groupCount>(blockSize);
  for (int i=0; i < blockSize; i++) {
    int val=inBlock[i];
    groupCount g=groupCount.get(val);
    if (g == null) {
      g=new groupCount();
      g.cnt=0;
      g.val=val;
      groupCount.put(val,g);
    }
    g.cnt++;
  }
  ArrayList<groupCount> sortlist=new ArrayList<RepeatCompress.groupCount>();
  sortlist.addAll(groupCount.values());
  Collections.sort(sortlist);
  HashMap<Integer,Integer> repeat=new HashMap<Integer,Integer>(blockSize);
  int[] groupNum=new int[blockSize << 1];
  int groupNumIndex=1;
  for (  groupCount g : sortlist) {
    int groupNumval=groupNumIndex++;
    repeat.put(g.val,groupNumval);
    groupNum[groupNumval]=g.val;
  }
  RepeatCompressRtn rtn=new RepeatCompressRtn();
  rtn.bytes=new int[blockSize << 2];
  rtn.index=0;
  for (int i=0; i < blockSize; i++) {
    int val=inBlock[i];
    Integer g=repeat.get(val);
    rtn.bytes[rtn.index++]=g;
  }
  for (int i=1; i < groupNumIndex; i++) {
    rtn.bytes[rtn.index++]=groupNum[i];
  }
  rtn.bytes[rtn.index++]=groupNumIndex - 1;
  return rtn;
}
